@SAVEGAME_EX, ARG
#DIMS SAVEINFO_EX
#DIM CHOICE
#DIM MEMO_DATANO
#DIM MEMO_LINECOUNT

MEMO_LINECOUNT = LINECOUNT
PRINTL 

$REDRAW_SAVEDATA
REDRAW 0

SIF LASTLOAD_NO >= 0
	CALL PRINT_STRL, @"现在正在游玩_黄色_{LASTLOAD_NO, 2}号存档_。"
PRINTL 要存到几号位里呢？
CALL PRINT_SAVEDATA, ARG, "SAVE"

PRINTL [999] 返回

$INPUT_DATANUM
INPUT

SELECTCASE RESULT
CASE 999
	;バージョン格子をON
	FLAG:VERUP格子 = 1
	REDRAW 1
	RETURN 1
CASE 201 TO (200 + (NUM_NORMALSAVE()/NUM_SHOWSAVE() ) )
	ARG = RESULT - 201
	CLEARLINE LINECOUNT - MEMO_LINECOUNT
	RESTART
;PLAYヤーがセーブ可能なのは通常セーブ
CASE 0 TO (NUM_NORMALSAVE() - 1)
	CHOICE = RESULT
	CHKDATA CHOICE
	;元のSAVEGAMEではRESULT == 0のとき以外は確認をとらない
	IF RESULT == 0
		PRINTL 已经有存档在这里了。要覆盖吗？
		PRINTLC [0] 是
		PRINTLC [1] 否
		PRINTL 

		$YESNO_INPUT_LOOP
		INPUT

		IF RESULT == 1
			GOTO REDRAW_SAVEDATA
		ELSEIF RESULT != 0
			CLEARLINE 1
			REUSELASTLINE 無効な値です
			GOTO YESNO_INPUT_LOOP
		ENDIF
	ENDIF

	;バージョン格子を初期化
	FLAG:VERUP格子 = 0
	FLAG:ロード時台詞 = 0
	REDRAW 1

	SAVEINFO_EX = %GETTIMES_CUSTOM()% %SAVEINFO_MESSAGE()%
	SAVEDATA CHOICE, SAVEINFO_EX

	LOADGLOBAL
	GLOBAL:最新ＳＬ番号 = CHOICE
	SAVEGLOBAL

	FLAG:VERUP格子 = 1
	FLAG:ロード時台詞 = 1
	RETURN 1
ENDSELECT

CLEARLINE 1
;REUSELASTLINE 無効な値です
GOTO INPUT_DATANUM

@LOADGAME_EX, ARG
#DIM CHOICE
#DIM MEMO_LINECOUNT

MEMO_LINECOUNT = LINECOUNT
PRINTL 

$REDRAW_SAVEDATA
REDRAW 0

SIF LASTLOAD_NO >= 0
	CALL PRINT_STRL, @"現在加载的是_黄色_{LASTLOAD_NO, 2}番_的数据哟。"
PRINTPLAINFORM 要加载几号存档呢？下面的是最近的存档数据、[{NUM_NORMALSAVE()}]～[{NUM_NORMALSAVE() + NUM_AUTOSAVE() - 1}]是自动存档
PRINTL 
CALL PRINT_SAVEDATA, ARG, "LOAD"
PRINTL [999] 返回

$INPUT_DATANUM
INPUT

SELECTCASE RESULT
CASE 999
	REDRAW 1
	RETURN 1
CASE 201 TO (201 + (NUM_NORMALSAVE()/NUM_SHOWSAVE() ) + 1)
	ARG = RESULT - 201
	CLEARLINE LINECOUNT - MEMO_LINECOUNT
	RESTART
;ロード可能なのは通常セーブ＆オートセーブ
CASE 0 TO (NUM_NORMALSAVE() + NUM_AUTOSAVE() - 1)
	CHOICE = RESULT
	CHKDATA CHOICE
	;RESULT == 0ならロード可能
	IF RESULT != 0
		PRINTVL CHOICE
		PRINTL 没有数据
		GOTO REDRAW_SAVEDATA
	ENDIF
	REDRAW 1

	LOADGLOBAL
	GLOBAL:最新ＳＬ番号 = CHOICE
	SAVEGLOBAL

	LOADDATA CHOICE

	RETURN 1
ENDSELECT

CLEARLINE 1
;REUSELASTLINE 無効な値です
GOTO INPUT_DATANUM


;１页あたりのセーブデータ表示数を指定する関数。現在は20
@NUM_SHOWSAVE()
#FUNCTION
RETURNF 20

;通常セーブ数の数。現在は100
@NUM_NORMALSAVE()
#FUNCTION
RETURNF 100

;オートセーブ数の数。現在は20
@NUM_AUTOSAVE()
#FUNCTION
RETURNF 20


;-------------------------------------------------
;ARGには現在的表示页、ARGSにはSAVEorLOADが入っている
;-------------------------------------------------
@PRINT_SAVEDATA, ARG, ARGS
;通常セーブを表示する
CALL PRINT_SAVEDATA_NORMAL, ARG, ARGS
PRINTL 

;页切り替えタブの表示
CALL PRINT_SAVEDATA_TAB, ARG, ARGS
PRINTL 

;直近のセーブデータを5個表示する
CALL PRINT_SAVEDATA_LATEST, 5
PRINTL 
;直近オートセーブを2個表示する
CALL PRINT_SAVEDATA_LATESTAUTO, 2
PRINTL 

RETURN

;-------------------------------------------------
;通常セーブデータの表示
;-------------------------------------------------
@PRINT_SAVEDATA_NORMAL, ARG, ARGS
#DIM LCOUNT
#DIM LCOUNT2

FOR LCOUNT, 0, NUM_SHOWSAVE()
	CHKDATA LCOUNT + ARG*NUM_SHOWSAVE()
	SIF LASTLOAD_NO == LCOUNT + ARG*NUM_SHOWSAVE()
		SETCOLOR DEF_COLOR("黄色")

	SELECTCASE LCOUNT + ARG*NUM_SHOWSAVE()
	CASE IS >= 100
		PRINTFORML [{LCOUNT + ARG*NUM_SHOWSAVE(), 2}] %RESULTS%
	CASEELSE
		PRINTFORML  [{LCOUNT + ARG*NUM_SHOWSAVE(), 2}] %RESULTS%
	ENDSELECT

	RESETCOLOR
NEXT


;-------------------------------------------------
;直近セーブデータの表示。ARG個だけ表示する
;-------------------------------------------------
@PRINT_SAVEDATA_LATEST, ARG
#DIM LCOUNT
#DIM LCOUNT2
#DIM LCOUNT3
;対応した番号のセーブデータを記録した時間
#DIM DYNAMIC VALUE_SAVETIME, 100
;セーブデータを時系列順に並べた際の番号。最新セーブが5番ならNO_SAVEDATA:0 = 5となる
#DIM DYNAMIC NO_SAVETIME, 100

;直近のセーブデータをARG個表示させるために領帯ムスタンプ判定(オートセーブは除くので0～99番だけ見る)
FOR LCOUNT, 0, NUM_NORMALSAVE()
	;まず記録した時間を見る
	CHKDATA LCOUNT
	VALUE_SAVETIME:LCOUNT = REGET_TIME(RESULTS)

	FOR LCOUNT2, 0, ARG
		SIF VALUE_SAVETIME:LCOUNT < VALUE_SAVETIME:(NO_SAVETIME:LCOUNT2)
			CONTINUE

		FOR LCOUNT3, 1, ARG
			SIF ARG - LCOUNT3 == LCOUNT2
				BREAK
			NO_SAVETIME:(ARG - LCOUNT3) = NO_SAVETIME:(ARG - LCOUNT3 - 1)
		NEXT

		NO_SAVETIME:LCOUNT2 = LCOUNT
		BREAK
	NEXT
NEXT

CALL DRAWLINES, "NOBUTTON_---□ 最近的存档([100]～之后是自动存档) □"
SETCOLOR DEF_COLOR("緑")
FOR LCOUNT, 0, ARG
	SIF VALUE_SAVETIME:(NO_SAVETIME:LCOUNT) == 0
		BREAK

	CHKDATA NO_SAVETIME:LCOUNT

	SIF LASTLOAD_NO == NO_SAVETIME:LCOUNT
		SETCOLOR DEF_COLOR("黄色")

	SELECTCASE NO_SAVETIME:LCOUNT
	CASE IS >= 100
		PRINTFORML [{NO_SAVETIME:LCOUNT, 2}] %RESULTS%
	CASEELSE
		PRINTFORML  [{NO_SAVETIME:LCOUNT, 2}] %RESULTS%
	ENDSELECT

	SETCOLOR DEF_COLOR("水色")
NEXT
RESETCOLOR


;-------------------------------------------------
;最新オートセーブの表示。ARG個だけ表示する
;-------------------------------------------------
@PRINT_SAVEDATA_LATESTAUTO, ARG
#DIM LCOUNT
#DIM LCOUNT2
#DIM LCOUNT3
;対応した番号のセーブデータを記録した時間
#DIM DYNAMIC VALUE_SAVETIME, 120
;セーブデータを時系列順に並べた際の番号。最新セーブが5番ならNO_SAVEDATA:0 = 5となる
#DIM DYNAMIC NO_SAVETIME, 100

;直近のオートセーブをARG個表示させるために領帯ムスタンプ判定(通常セーブは除く)
VARSET NO_SAVETIME
VARSET VALUE_SAVETIME
FOR LCOUNT, NUM_NORMALSAVE(), NUM_NORMALSAVE() + NUM_AUTOSAVE()
	CHKDATA LCOUNT
	VALUE_SAVETIME:LCOUNT = REGET_TIME(RESULTS)

	FOR LCOUNT2, 0, ARG
		SIF VALUE_SAVETIME:LCOUNT < VALUE_SAVETIME:(NO_SAVETIME:LCOUNT2)
			CONTINUE

		FOR LCOUNT3, 1, ARG
			SIF ARG - LCOUNT3 == LCOUNT2
				BREAK
			NO_SAVETIME:(ARG - LCOUNT3) = NO_SAVETIME:(ARG - LCOUNT3 - 1)
		NEXT

		NO_SAVETIME:LCOUNT2 = LCOUNT
		BREAK
	NEXT
NEXT

;CALL DRAWLINES, "---□ オートセーブ □"
;SETCOLOR DEF_COLOR("水色")
FOR LCOUNT, 0, ARG
	SIF VALUE_SAVETIME:(NO_SAVETIME:LCOUNT) == 0
		BREAK

	CHKDATA NO_SAVETIME:LCOUNT

	PRINTFORML [{NO_SAVETIME:LCOUNT, 2}] %RESULTS%

NEXT
;色を変えた場合はコメントアウトを取下
;RESETCOLOR


;-------------------------------------------------
;页切り替えタブの表示
;-------------------------------------------------
@PRINT_SAVEDATA_TAB, ARG, ARGS
#DIM LCOUNT
#DIMS TEXT_PAGESELECT

TEXT_PAGESELECT = 
FOR LCOUNT, 0, (NUM_NORMALSAVE()/NUM_SHOWSAVE() ) + 1
	;セーブ画面ではオートセーブは見せない
	SIF ARGS == "SAVE" && LCOUNT == (NUM_NORMALSAVE()/NUM_SHOWSAVE() )
		CONTINUE

	SELECTCASE LCOUNT
	CASE ARG
		TEXT_PAGESELECT += @"_灰色_NOBUTTON_ [×]"
	CASEELSE
		TEXT_PAGESELECT += @"[{201+LCOUNT}]"
	ENDSELECT

	SELECTCASE LCOUNT
	CASE (NUM_NORMALSAVE()/NUM_SHOWSAVE() )
		TEXT_PAGESELECT += @"オートセーブ表示 "
	CASEELSE
		TEXT_PAGESELECT += @"{NUM_SHOWSAVE()*LCOUNT}～{NUM_SHOWSAVE()*(LCOUNT+1)-1} "
	ENDSELECT

	SELECTCASE LCOUNT
	CASE ARG
		TEXT_PAGESELECT += @"_"
	ENDSELECT
NEXT
CALL PRINT_STRL, TEXT_PAGESELECT


;セーブデータの文字列ARGSから記録された年月日時間に対応した数字を返させる
;値が大きいほど新しい
@REGET_TIME(ARGS)
#FUNCTION
#DIM LCOUNT
#DIM NUM_ZERO

LOCALS = 
NUM_ZERO = 0
FOR LCOUNT, 0, 100
	IF ISNUMERIC(SUBSTRINGU(ARGS, LCOUNT, 1) )
		LOCALS += @"%SUBSTRINGU(ARGS, LCOUNT, 1)%"
	ELSE
		SELECTCASE SUBSTRINGU(ARGS, LCOUNT, 1)
		CASE "朝"
			LOCALS += "0"
			BREAK
		CASE "昼"
			LOCALS += "1"
			BREAK
		CASE "夕"
			LOCALS += "2"
			BREAK
		CASE "夜"
			LOCALS += "3"
			BREAK
		CASE " "
			LOCALS += "0"
			NUM_ZERO += 1
			SIF NUM_ZERO >= 5
				BREAK
		ENDSELECT
	ENDIF
NEXT
RETURNF TOINT(LOCALS)


@GETTIMES_CUSTOM()
#FUNCTIONS
#DIMS TIMEINFO
;カスタム時間表示の例
;年。下二桁のみに簡略化…つまり２桁固定でいい
TIMEINFO = {(GETTIME() / 10000000000000) % 100}
;月
LOCAL = (GETTIME() / 100000000000) % 100
TIMEINFO = %TIMEINFO%/\@ LOCAL < 10 ? 0 # \@{LOCAL}
;日
LOCAL = (GETTIME() / 1000000000) % 100
TIMEINFO = %TIMEINFO%/\@ LOCAL < 10 ? 0 # \@{LOCAL}
;時
LOCAL = ((GETTIME() / 10000000) % 100) % 24
TIMEINFO = %TIMEINFO% \@ LOCAL < 10 ? 0 # \@{LOCAL}
;分
LOCAL = (GETTIME() / 100000) % 100
TIMEINFO = %TIMEINFO%:\@ LOCAL < 10 ? 0 # \@{LOCAL}

RETURNF TIMEINFO

@SAVEINFO_MESSAGE()
#FUNCTIONS
#DIMS SAVEINFO
#DIM LCOUNT
#DIM CHOICE

SAVEINFO = {DAY, 3}日%TEXTS("季節")%(%TEXTS("曜日")%)%TEXTS("時間")%

IF TARGET
	SAVEINFO += @" %TEXT_LJ(NAME:TARGET, 16)%"
	IF TALENT:相思相愛
		SAVEINFO += "相"
	ELSEIF TALENT:恋慕
		SAVEINFO += "恋"
	ELSE
		SAVEINFO += "--"
	ENDIF
	IF TALENT:淫乱
		SAVEINFO += "淫"
	ELSE
		SAVEINFO += "--"
	ENDIF
	IF CFLAG:睡眠
		SAVEINFO += "眠"
	ELSE
		SAVEINFO += "--"
	ENDIF
ENDIF

SAVEINFO += @" {CHARANUM-1}人"
IF CHARANUM-1 >= 3
	SAVEINFO += "("
	;優先順位上位6名を表示する
	FOR LCOUNT, 1, 8
		CHOICE = FINDCHARA(CFLAG:優先順位, LCOUNT, 2)
		SIF CHOICE <= 0
			BREAK
		SELECTCASE LCOUNT
		CASE 7
			SAVEINFO += ",…"
			BREAK
		CASE IS > 1
			SAVEINFO += ","
		ENDSELECT

		SAVEINFO += @"%CONDS("短縮名", CHOICE)%"
	NEXT
	SAVEINFO += ")"
ENDIF

SAVEINFO = %TEXT_LJ(SAVEINFO, NUM("折り返し文字数") - 5 - 9 - 7 - 7 - 6 - 2)% %VERS_eraAkumaMaid()%

SIF FLAG:周回数
	SAVEINFO += @" {FLAG:周回数 + 1}周目"

RETURNF SAVEINFO

@TITLE_LOADGAME
;标题画面のロードでも独自のロード画面を使う場合、@TITLE_LOADGAMEを定義する
;@TITLE_LOADGAMEが定義されていると、標準のロード画面の代わりにTITLE_LOADGAMEが呼ばれる。
CALL LOADGAME_EX
RETURN
;RETURNすると标题へ返回。

;オートセーブの処理を独自に行う場合、@SYSTEM_AUTOSAVEを定義する
;@SYSTEM_AUTOSAVEが定義されていると、標準のオートセーブの代わりにSYSTEM_AUTOSAVEが呼ばれる。
;(@SYSTEM_AUTOSAVEを定義し什麼也不做でRETURNすればオートセーブを禁止できる。その場合はLOADDATA_EXから99番のデータに関する記述を削除しておくと親切)
@SYSTEM_AUTOSAVE
#DIM LCOUNT
#DIMS SAVEINFO_EX
;対応した番号のセーブデータの、記録された時間
;NUM_NORMALSAVE() + NUM_AUTOSAVE()と同じ数必要
#DIM VALUE_SAVETIME, 120
;この番号にオートセーブする。NUM_NORMALSAVE()番に近く、最も古い番号を選ぶ。
#DIM CHOICE

VARSET VALUE_SAVETIME

;初期番号は通常セーブ数の番号(例えばこれが100ならオートセーブは100番から割り振られる)
CHOICE = NUM_NORMALSAVE()

FOR LCOUNT, NUM_NORMALSAVE(), NUM_NORMALSAVE() + NUM_AUTOSAVE()
	SIF LCOUNT == LASTLOAD_NO
		CONTINUE

	CHKDATA LCOUNT
	VALUE_SAVETIME:LCOUNT = REGET_TIME(RESULTS)

	SIF VALUE_SAVETIME:LCOUNT < VALUE_SAVETIME:CHOICE
		CHOICE = LCOUNT
NEXT

SAVEINFO_EX = %GETTIMES_CUSTOM()% %SAVEINFO_MESSAGE()%
SAVEDATA CHOICE, SAVEINFO_EX

@EVENTLOAD
#PRI

