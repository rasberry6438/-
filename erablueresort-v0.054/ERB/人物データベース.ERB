@人物データベースセット
DT_CREATE "人物データベース"

;NAMEと同様のものが入る想定。名前を付けなかった場合は空
DT_COLUMN_ADD "人物データベース", "名前"

;CALLNAMEと同様のものが入る想定。名前を付けなかった場合は空
DT_COLUMN_ADD "人物データベース", "呼び名"

;NOが入る。"キャラクタ数上限 = 5000"に沿って型を決定
;ランダム・ユニーク問わずキャラではない場合は空。GET_PERSON_ナンバーでは-1が返される
DT_COLUMN_ADD "人物データベース", "ナンバー", 2

;TALENT:性別と同様のものが入る想定。取りうる値(0～3)に沿って型を決定
DT_COLUMN_ADD "人物データベース", "性別", 1

;TALENT:種族と同様のものが入る想定。取りうる値(-3～6)に沿って型を決定
DT_COLUMN_ADD "人物データベース", "種族", 1

;CSTR:プレゼント好みと同様のものが入る想定
DT_COLUMN_ADD "人物データベース", "プレゼント好み"

;周回回数累計:0が入る
;空の場合、GET_PERSON_出会った周回では-1が返される
DT_COLUMN_ADD "人物データベース", "出会った周回", 4

;生まれがゲーム外のキャラの生まれた順序を入れる。姉/兄のほうが大きい値になる
;ゲーム内で生まれた子供等は空。GET_PERSON_出生順では最小値より1小さい値(-129)が返される
DT_COLUMN_ADD "人物データベース", "出生順", 1

;ゲーム中に生まれた場合、DAYが入る
;生まれがゲーム外のユニークキャラ等は空。GET_PERSON_生年日では-1が返される
DT_COLUMN_ADD "人物データベース", "生年日", 4

;人物として父親/母親がゲーム中に存在すればそのidが入る
;母親/父親がゲーム内に存在しない人物ならば空。GET_PERSON_母親/GET_PERSON_父親では空のID(0)が返される
DT_COLUMN_ADD "人物データベース", "母親", 4
DT_COLUMN_ADD "人物データベース", "父親", 4

;「誰々が◯週目の何年目何日に産んだ」のような文字列を入れる想定
DT_COLUMN_ADD "人物データベース", "経歴"


;キャラ同士の親子関係を定義。CSVに記述せず独立した関数にすることに
;1)キャラが全部人物データベースに入ってないとセットに失敗するため
;2)周回で親子の片方だけが引き継がれても、現周回にいる親子が親子関係を持つようにするため
@ユニークキャラ親子関係セット
#DIM ナルメア
#DIM ラルナ
#DIM ガムシラ
#DIM アリーザ
#DIM アリシア
#DIM クラリス
#DIM ハロルド
#DIM プロメティア
#DIM シャトラ
#DIM シャトラのママ
#DIM シャトラのパパ
#DIM ヤイア
#DIM カレンティア
#DIM アレーティア
#DIM ティナ
#DIM ルシウス
#DIM アギエルバ
#DIM アルドラ
#DIM エルバハ
#DIM ノイシュ
#DIM オイゲン
#DIM アポロ
#DIM ヘルツェロイデ
#DIM パーシヴァル
#DIM アグロヴァル
#DIM サブリナ
#DIM フェニー
#DIM イングヴェイ
#DIM エリカ
#DIM EX_不知火
#DIM EX_ゆきかぜ
#DIM EX_スイレンのママ
#DIM EX_スイレン
#DIM EX_ソネット
#DIM EX_クリス
#DIM EX_ルザミーネ
#DIM EX_リーリエ
#DIM EX_ヴァルダ
#DIM EX_アンジェラ

FOR LOCAL, 1, CHARANUM
	SIF キャラ一致チェック(LOCAL, "[摇曳的斩姬]娜尔梅亚")
		ナルメア = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[斩姬的慈母]拉露娜")
		ラルナ = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[斩姬的慈父]加姆希拉")
		ガムシラ = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[炎舞红莲]阿莉莎")
		アリーザ = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[炎姬生母]艾莉西娅")
		アリシア = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[稚嫩的炼金术师]克拉莉丝")
		クラリス = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[传承的炼金术师]普罗米西娅")
		プロメティア = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[继承的炼金术士]哈罗德")
		ハロルド = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[北北东的守护神]夏托拉")
		シャトラ = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[前代丑神]夏托拉的妈妈")
		シャトラのママ = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[丑神之父]夏托拉的爸爸")
		シャトラのパパ = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[信爱之妹]雅雅")
		ヤイア = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[雅雅的亡母]卡伦蒂亚")
		カレンティア = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[剑之贤者]阿雷提亚")
		アレーティア = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[哥布林杀手]缇娜")
		ティナ = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[哥布林屠戮者]卢修斯")
		ルシウス = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[破晓大剑]艾奇尔巴")
		アギエルバ = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[晓之爱女]阿尔多拉")
		アルドラ = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[护卫侍女]埃尔芭哈")
		エルバハ = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[龙骑士]诺伊修")
		ノイシュ = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[苍醒的志士]欧根")
		オイゲン = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[黑骑士]阿波罗尼亚")
		アポロ = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[理想圣母]海瑟洛伊德")
		ヘルツェロイデ = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[炎帝]帕西瓦尔")
		パーシヴァル = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[冰皇]阿古罗瓦尔")
		アグロヴァル = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[宿命的女剑士]萨布丽娜")
		サブリナ = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[不死鸟的碎片]菲妮")
		フェニー = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[潇洒不羁的传奇]英格威")
		イングヴェイ = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[勒布朗的女儿]艾丽卡")
		エリカ = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[幻影对魔忍]水城不知火")
		EX_不知火 = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[雷击对魔忍]水城雪风")
		EX_ゆきかぜ = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[渔夫的妻子]水莲的妈妈")
		EX_スイレンのママ = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[阿卡拉岛队长]水莲")
		EX_スイレン = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[以太基金会理事长]露莎米奈")
		EX_ルザミーネ = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[宝可梦训练家]莉莉艾")
		EX_リーリエ = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[咏唱救世的声乐家]索奈特・Ｍ・雪音")
		EX_ソネット = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[魔弓・紫杉弓]雪音克莉丝")
		EX_クリス = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[理之女王]法尔妲")
		EX_ヴァルダ = CFLAG:LOCAL:人物番号
	SIF キャラ一致チェック(LOCAL, "[阿尔特纳的魔法公主]安吉拉")
		EX_アンジェラ = CFLAG:LOCAL:人物番号
NEXT

CALL SET_PERSON_母親(ナルメア, ラルナ)
CALL SET_PERSON_父親(ナルメア, ガムシラ)
CALL SET_PERSON_母親(アリーザ, アリシア)
CALL SET_PERSON_母親(クラリス, プロメティア)
CALL SET_PERSON_父親(クラリス, ハロルド)
CALL SET_PERSON_母親(シャトラ, シャトラのママ)
CALL SET_PERSON_父親(シャトラ, シャトラのパパ)
CALL SET_PERSON_母親(ヤイア, カレンティア)
CALL SET_PERSON_父親(ルシウス, アレーティア)
CALL SET_PERSON_父親(ティナ, アレーティア)
CALL SET_PERSON_父親(アルドラ, アギエルバ)
CALL SET_PERSON_母親(ノイシュ, エルバハ)
CALL SET_PERSON_父親(アポロ, オイゲン)
CALL SET_PERSON_母親(アグロヴァル, ヘルツェロイデ)
CALL SET_PERSON_母親(パーシヴァル, ヘルツェロイデ)
CALL SET_PERSON_母親(フェニー, サブリナ)
CALL SET_PERSON_父親(エリカ, イングヴェイ)
CALL SET_PERSON_母親(EX_ゆきかぜ, EX_不知火)
CALL SET_PERSON_母親(EX_スイレン, EX_スイレンのママ)
CALL SET_PERSON_母親(EX_リーリエ, EX_ルザミーネ)
CALL SET_PERSON_母親(EX_クリス, EX_ソネット)
CALL SET_PERSON_母親(EX_アンジェラ, EX_ヴァルダ)

;兄弟姉妹が居るキャラの出生順を設定
;・兄/姉の方に大きい数値を設定
CALL SET_PERSON_出生順(ルシウス, 2)
CALL SET_PERSON_出生順(ティナ, 1)
CALL SET_PERSON_出生順(アグロヴァル, 3) ; 長男
CALL SET_PERSON_出生順(パーシヴァル, 1) ; 三男

;覚え書き:キャラ増えた時に使いそうな親子関係/出生順設定
;CALL SET_PERSON_母親(シトリ, ミカボシ)
;CALL SET_PERSON_母親(ラモラック, ヘルツェロイデ)
;CALL SET_PERSON_出生順(ラモラック, 2) ; 次男

;空のキャラを人物データベースに登録する
@ADD_PERSON()
#FUNCTION
#DIM ID

ID = DT_ROW_ADD("人物データベース")
SIF !ID
	THROW 人员数据登记失败
RETURNF ID


;キャラの追加時に実行。キャラを人物データベースに登録し、IDを振る
@ADD_PERSON_FROM_CHARA(C_ID)
#DIM C_ID

{
	DT_ROW_ADD "人物データベース",
		"名前", NAME:C_ID,
		"呼び名", CALLNAME:C_ID,
		"ナンバー", NO:C_ID,
		"性別", TALENT:C_ID:性別,
		"種族", TALENT:C_ID:種族,
		"プレゼント好み", CSTR:C_ID:プレゼント好み,
		"出会った周回", 周回回数累計:0,
		"出生順", 127
}
;そうそう Utils.TimePoint() が0になることはないはず
SIF !RESULT
	THROW 人员数据登记失败
CFLAG:C_ID:人物番号 = RESULT
RETURN RESULT


;人物データベースに登録済のキャラのデータを現在のものに更新する
@UPDATE_PERSON_FROM_CHARA(C_ID)
#DIM C_ID

{
	DT_ROW_SET "人物データベース", CFLAG:C_ID:人物番号,
		"名前", NAME:C_ID,
		"呼び名", CALLNAME:C_ID,
		"ナンバー", NO:C_ID,
		"性別", TALENT:C_ID:性別,
		"種族", TALENT:C_ID:種族,
		"プレゼント好み", CSTR:C_ID:プレゼント好み
}
RETURN RESULT


;人物データベースのIDからキャラ登録番号を逆引きする
@FIND_CHARA_FROM_PERSON_ID(ID)
#FUNCTION
#DIM ID
RETURNF FINDCHARA(CFLAG:人物番号, ID)


;人物データベースのIDからキャラとしての母親を探し、キャラ登録番号を返す（見つからなければ-1）
@FIND_MOTHER_CHARA_FROM_PERSON_ID(ID)
#FUNCTION
#DIM ID
#DIM MOTHER_ID
MOTHER_ID = GET_PERSON_母親(ID)
SIF !MOTHER_ID
	RETURNF -1
RETURNF FIND_CHARA_FROM_PERSON_ID(MOTHER_ID)


;人物データベースのIDからキャラとしての父親を探し、キャラ登録番号を返す（見つからなければ-1）
@FIND_FATHER_CHARA_FROM_PERSON_ID(ID)
#FUNCTION
#DIM ID
#DIM FATHER_ID
FATHER_ID = GET_PERSON_父親(ID)
SIF !FATHER_ID
	RETURNF -1
RETURNF FIND_CHARA_FROM_PERSON_ID(FATHER_ID)


;母親・父親・自身を母に持つ子のいずれかが人物データベースに登録されていれば1を返す
;母親・父親・子供のいずれもキャラである必要はない
@EXIST_FAMILY(ID)
#FUNCTION
#DIM ID
#DIM CHILD_COUNT
#DIM TMP_CHILDREN, 1

SIF GET_PERSON_母親(ID) != 0
	RETURNF 1
SIF GET_PERSON_父親(ID) != 0
	RETURNF 1

CHILD_COUNT = DT_SELECT("人物データベース", @"母親 = {ID}", , TMP_CHILDREN)
SIF CHILD_COUNT > 0
	RETURNF 1
RETURNF 0


;指定されたIDを親に持つ人物を取得し、RESULT:0に件数、RESULT:1～にIDが入る
;IDを指定しなかった場合、いずれかの親が設定されている人物が対象となる
@FIND_CHILDREN(MOTHER_ID = 0, FATHER_ID = 0)
#DIM MOTHER_ID
#DIM FATHER_ID
#DIMS FILTER

IF MOTHER_ID
	FILTER '= @"母親 = {MOTHER_ID}"
	IF FATHER_ID
		FILTER += @" And 父親 = {FATHER_ID}"
	ENDIF
ELSEIF FATHER_ID
	FILTER '= @"父親 = {FATHER_ID}"
ELSE
	FILTER '= "母親 Is Not Null Or 父親 Is Not Null"
ENDIF

DT_SELECT "人物データベース", FILTER, "出生順 DESC, 出会った周回 ASC, 生年日 ASC"
RETURN RESULT


;指定された文字列が呼び名の人物を返す（複数いる場合は先頭）
@FIND_PERSON_FROM_CALLNAME(C_NAME)
#FUNCTION
#DIMS C_NAME
#DIM PERSON_COUNT
#DIM TMP_PERSONS, 1

PERSON_COUNT = DT_SELECT("人物データベース", @"呼び名 = '%C_NAME%'", , TMP_PERSONS)
SIF PERSON_COUNT <= 0
	RETURNF 0
RETURNF TMP_PERSONS:0


;指定したIDの人物が存在するか確認する
@EXIST_PERSON(ID)
#FUNCTION
#DIM ID
RETURNF DT_CELL_ISNULL("人物データベース", ID, "id", 1) == 0


;人物に設定されている呼び名で最も適切なものを探す（見つからなければ適当な文字列）
;キャラとしてのCALLNAME＞呼び名＞名前のヘッダ部分を除去したもの の順
@GET_PERSON_呼び名_代替あり(ID)
#FUNCTIONS
#DIM ID
#DIM C_ID
C_ID = FIND_CHARA_FROM_PERSON_ID(ID)
IF C_ID >= 0
	RETURNF CALLNAME:C_ID
ELSEIF DT_CELL_ISNULL("人物データベース", ID, "呼び名", 1) == 0
	RETURNF DT_CELL_GETS("人物データベース", ID, "呼び名", 1)
ELSEIF DT_CELL_ISNULL("人物データベース", ID, "名前", 1) == 0
	RETURNF REPLACE(DT_CELL_GETS("人物データベース", ID, "名前", 1), "\[[^\]]*\]", "")
ELSE
	RETURNF "見知らぬ誰か"
ENDIF


;各カラムのGET系
@GET_PERSON_名前(ID)
#FUNCTIONS
#DIM ID
#DIM C_ID
C_ID = FIND_CHARA_FROM_PERSON_ID(ID)
IF C_ID >= 0
	RETURNF NAME:C_ID
ELSE
	RETURNF DT_CELL_GETS("人物データベース", ID, "名前", 1)
ENDIF

@GET_PERSON_呼び名(ID)
#FUNCTIONS
#DIM ID
#DIM C_ID
C_ID = FIND_CHARA_FROM_PERSON_ID(ID)
IF C_ID >= 0
	RETURNF CALLNAME:C_ID
ELSE
	RETURNF DT_CELL_GETS("人物データベース", ID, "呼び名", 1)
ENDIF

@GET_PERSON_ナンバー(ID)
#FUNCTION
#DIM ID
#DIM C_ID
C_ID = FIND_CHARA_FROM_PERSON_ID(ID)
IF C_ID >= 0
	RETURNF NO:C_ID
ELSEIF DT_CELL_ISNULL("人物データベース", ID, "ナンバー", 1) == 1
	RETURNF -1
ELSE
	RETURNF DT_CELL_GET("人物データベース", ID, "ナンバー", 1)
ENDIF

@GET_PERSON_性別(ID)
#FUNCTION
#DIM ID
#DIM C_ID
C_ID = FIND_CHARA_FROM_PERSON_ID(ID)
IF C_ID >= 0
	RETURNF TALENT:C_ID:性別
ELSE
	RETURNF DT_CELL_GET("人物データベース", ID, "性別", 1)
ENDIF

@GET_PERSON_種族(ID)
#FUNCTION
#DIM ID
#DIM C_ID
C_ID = FIND_CHARA_FROM_PERSON_ID(ID)
IF C_ID >= 0
	RETURNF TALENT:C_ID:種族
ELSE
	RETURNF DT_CELL_GET("人物データベース", ID, "種族", 1)
ENDIF

@GET_PERSON_プレゼント好み(ID)
#FUNCTIONS
#DIM ID
#DIM C_ID
C_ID = FIND_CHARA_FROM_PERSON_ID(ID)
IF C_ID >= 0
	RETURNF CSTR:C_ID:プレゼント好み
ELSE
	RETURNF DT_CELL_GETS("人物データベース", ID, "プレゼント好み", 1)
ENDIF

@GET_PERSON_出会った周回(ID)
#FUNCTION
#DIM ID
IF DT_CELL_ISNULL("人物データベース", ID, "出会った周回", 1) == 1
	RETURNF -1
ELSE
	RETURNF DT_CELL_GET("人物データベース", ID, "出会った周回", 1)
ENDIF

@GET_PERSON_出生順(ID)
#FUNCTION
#DIM ID
IF DT_CELL_ISNULL("人物データベース", ID, "出生順", 1) == 1
	RETURNF -129
ELSE
	RETURNF DT_CELL_GET("人物データベース", ID, "出生順", 1)
ENDIF

@GET_PERSON_生年日(ID)
#FUNCTION
#DIM ID
IF DT_CELL_ISNULL("人物データベース", ID, "生年日", 1) == 1
	RETURNF -1
ELSE
	RETURNF DT_CELL_GET("人物データベース", ID, "生年日", 1)
ENDIF

@GET_PERSON_母親(ID)
#FUNCTION
#DIM ID
RETURNF DT_CELL_GET("人物データベース", ID, "母親", 1)

@GET_PERSON_父親(ID)
#FUNCTION
#DIM ID
RETURNF DT_CELL_GET("人物データベース", ID, "父親", 1)

@GET_PERSON_経歴(ID)
#FUNCTIONS
#DIM ID
RETURNF DT_CELL_GETS("人物データベース", ID, "経歴", 1)


;各カラムのSET系
@SET_PERSON_名前(ID, VAL)
#DIM ID
#DIMS VAL
RETURN DT_CELL_SET("人物データベース", ID, "名前", VAL, 1)

@SET_PERSON_呼び名(ID, VAL)
#DIM ID
#DIMS VAL
RETURN DT_CELL_SET("人物データベース", ID, "呼び名", VAL, 1)

@SET_PERSON_ナンバー(ID, VAL)
#DIM ID
#DIM VAL
RETURN DT_CELL_SET("人物データベース", ID, "ナンバー", VAL, 1)

@SET_PERSON_性別(ID, VAL)
#DIM ID
#DIM VAL
RETURN DT_CELL_SET("人物データベース", ID, "性別", VAL, 1)

@SET_PERSON_種族(ID, VAL)
#DIM ID
#DIM VAL
RETURN DT_CELL_SET("人物データベース", ID, "種族", VAL, 1)

@SET_PERSON_プレゼント好み(ID, VAL)
#DIM ID
#DIMS VAL
RETURN DT_CELL_SET("人物データベース", ID, "プレゼント好み", VAL, 1)

@SET_PERSON_出会った周回(ID, VAL)
#DIM ID
#DIM VAL
RETURN DT_CELL_SET("人物データベース", ID, "出会った周回", VAL, 1)

@SET_PERSON_出生順(ID, VAL)
#DIM ID
#DIM VAL
RETURN DT_CELL_SET("人物データベース", ID, "出生順", VAL, 1)

@SET_PERSON_生年日(ID, VAL)
#DIM ID
#DIM VAL
RETURN DT_CELL_SET("人物データベース", ID, "生年日", VAL, 1)

@SET_PERSON_母親(ID, VAL)
#DIM ID
#DIM VAL
RETURN DT_CELL_SET("人物データベース", ID, "母親", VAL, 1)

@SET_PERSON_父親(ID, VAL)
#DIM ID
#DIM VAL
RETURN DT_CELL_SET("人物データベース", ID, "父親", VAL, 1)

@SET_PERSON_経歴(ID, VAL)
#DIM ID
#DIMS VAL
RETURN DT_CELL_SET("人物データベース", ID, "経歴", VAL, 1)


;どこからも参照できなくなった人物データを消去する
@人物データベースGC
DT_CREATE "人物番号一時リスト"
DT_COLUMN_ADD "人物番号一時リスト", "人物番号", 4

LOCAL:1 = DT_ROW_LENGTH("人物データベース")
FOR LOCAL, 0, LOCAL:1
	DT_ROW_ADD "人物番号一時リスト", "人物番号", DT_CELL_GET("人物データベース", LOCAL, "id")
NEXT

FOR LOCAL, 0, CHARANUM
	CALL 人物データベースGC_マーク(CFLAG:LOCAL:人物番号)
NEXT

LOCAL:1 = DT_ROW_LENGTH("人物番号一時リスト")
FOR LOCAL, 0, LOCAL:1
	DT_ROW_REMOVE "人物データベース", DT_CELL_GET("人物番号一時リスト", LOCAL, "人物番号")
NEXT

DT_RELEASE "人物番号一時リスト"


@人物データベースGC_マーク(ID)
#DIM DYNAMIC ID
#DIM DYNAMIC CHILD_COUNT
#DIM DYNAMIC CHILD_ITER
#DIM DYNAMIC CHILDREN, 子供最大数

DT_SELECT "人物番号一時リスト", @"人物番号 = {ID}"
SIF RESULT == 0
	RETURN

DT_ROW_REMOVE "人物番号一時リスト", RESULT:1

CALL 人物データベースGC_マーク(DT_CELL_GET("人物データベース", ID, "母親", 1))
CALL 人物データベースGC_マーク(DT_CELL_GET("人物データベース", ID, "父親", 1))

CHILD_COUNT = DT_SELECT("人物データベース", @"母親 = {ID}", "", CHILDREN)
;Emueraの不具合でFORだと動かない
CHILD_ITER = 0
WHILE CHILD_ITER < CHILD_COUNT
	SIF CHILD_ITER >= 子供最大数
		BREAK
	CALL 人物データベースGC_マーク(CHILDREN:CHILD_ITER)
	CHILD_ITER ++
WEND
RETURN
