

@関係性_相手人物番号取得(対象人物番号, 対象ID)
#FUNCTION
#DIM 対象人物番号
#DIM 対象ID

IF DT_CELL_GET("関係性データベース", 対象ID, "対象キャラ１", 1) == 対象人物番号
	RETURNF DT_CELL_GET("関係性データベース", 対象ID, "対象キャラ２", 1)
ELSEIF DT_CELL_GET("関係性データベース", 対象ID, "対象キャラ２", 1) == 対象人物番号
	RETURNF DT_CELL_GET("関係性データベース", 対象ID, "対象キャラ１", 1)
ENDIF

RETURNF 0

@関係性チェック(対象キャラ１, 対象キャラ２, 関係性)
#FUNCTION
#DIM 対象キャラ１
#DIM 対象キャラ２
#DIMS 関係性

SIF 対象キャラ１ < 0
	RETURNF 0

SIF 対象キャラ２ < 0
	RETURNF 0

IF DT_SELECT("関係性データベース", @"(対象キャラ１ = {CFLAG:対象キャラ１:人物番号} Or 対象キャラ２ = {CFLAG:対象キャラ１:人物番号}) And (対象キャラ１ = {CFLAG:対象キャラ２:人物番号} Or 対象キャラ２ = {CFLAG:対象キャラ２:人物番号}) And 関係性種別 = '%関係性%'")
	RETURNF 1
ENDIF

RETURNF 0

@縁結び進展度取得(対象キャラ１, 対象キャラ２, 縁結び関係性)
#FUNCTION
#DIM 対象キャラ１
#DIM 対象キャラ２
#DIMS 縁結び関係性

SIF 対象キャラ１ < 0
	RETURNF 0

SIF 対象キャラ２ < 0
	RETURNF 0

VARSET RESULT
IF DT_SELECT("縁結びデータベース", @"(対象キャラ１ = {CFLAG:対象キャラ１:人物番号} Or 対象キャラ２ = {CFLAG:対象キャラ１:人物番号}) And (対象キャラ１ = {CFLAG:対象キャラ２:人物番号} Or 対象キャラ２ = {CFLAG:対象キャラ２:人物番号}) And 縁結び種別 = '%縁結び関係性%'")
	RETURNF DT_CELL_GET("縁結びデータベース", RESULT:1, "進展度")
ENDIF

RETURNF 0


@縁結び候補存在判定(左キャラ, 候補種別 = "恋慕")
#DIM 左キャラ
#DIMS 候補種別

RESULT = 0
IF 候補種別 == "恋慕"
	CALL 縁結び右キャラセット(左キャラ, 1, 1)
ELSEIF 候補種別 == "セフレ"
	CALL 縁結び右キャラセット(左キャラ, 2, 1)
ENDIF

RETURN RESULT



@縁結びセット数取得(対象キャラ, 縁結び関係性)
#FUNCTION
#DIM 対象キャラ
#DIMS 縁結び関係性

SIF 対象キャラ < 0
	RETURNF 0

VARSET RESULT
RETURNF DT_SELECT("縁結びデータベース", @"(対象キャラ１ = {CFLAG:対象キャラ:人物番号} Or 対象キャラ２ = {CFLAG:対象キャラ:人物番号}) And 縁結び種別 = '%縁結び関係性%'")



@受け攻め判定処理(対象キャラ)
#FUNCTION
#DIM 対象キャラ
#DIM 判定値

;基礎値１００を上下させる
判定値 = 100

;素質
判定値 += TALENT:対象キャラ:度胸 * 5
判定値 += TALENT:対象キャラ:態度 * 5
判定値 += TALENT:対象キャラ:マイペース * 10
SIF TALENT:対象キャラ:精神的余裕 > 0
	判定値 += 5
判定値 += TALENT:対象キャラ:性的興味 * 10
判定値 += TALENT:対象キャラ:性欲 * 10
SIF TALENT:対象キャラ:経験豊富 > 0
	判定値 += 10
SIF TALENT:対象キャラ:淫乱 > 0
	判定値 += 20
判定値 += TALENT:対象キャラ:羞恥心 * -5
判定値 += TALENT:対象キャラ:器用な指 * 3
判定値 += TALENT:対象キャラ:舌使い * 3
判定値 += TALENT:対象キャラ:献身的 * 5
判定値 += TALENT:対象キャラ:イキやすさ * -5

;技巧補正
判定値 += ABL:対象キャラ:技巧 * 3
判定値 += ABL:対象キャラ:指テク * 3
判定値 += ABL:対象キャラ:舌技 * 3
判定値 += ABL:対象キャラ:腰使い * 3

;性知識
判定値 += 知識素質:対象キャラ:性知識 * 10

RETURNF MAX(1, 判定値)


@受け攻め関係性算出(対象キャラ１, 対象キャラ２)
#DIM 対象キャラ１
#DIM 対象キャラ２
#DIM 対象キャラ１判定値
#DIM 対象キャラ２判定値

;RESULT:10に攻め、RESULT:11に受けのキャラ番号が入る

VARSET RESULT
IF DT_SELECT("関係性データベース", @"(対象キャラ１ = {CFLAG:対象キャラ１:人物番号} Or 対象キャラ２ = {CFLAG:対象キャラ１:人物番号}) And (対象キャラ１ = {CFLAG:対象キャラ２:人物番号} Or 対象キャラ２ = {CFLAG:対象キャラ２:人物番号}) And (関係性種別 = '恋慕' Or 関係性種別 = 'セフレ')")
	IF DT_CELL_GETS("関係性データベース", RESULT:1, "受け攻め設定", 1) == "順"
		;左のキャラが攻め
		RESULT:10 = FIND_CHARA_FROM_PERSON_ID(DT_CELL_GET("関係性データベース", RESULT:1, "対象キャラ１", 1))
		RESULT:11 = FIND_CHARA_FROM_PERSON_ID(DT_CELL_GET("関係性データベース", RESULT:1, "対象キャラ２", 1))
		;受け攻め設定があるなら1を返す
		RETURN 1
	ELSEIF DT_CELL_GETS("関係性データベース", RESULT:1, "受け攻め設定", 1) == "逆"
		;右のキャラが攻め
		RESULT:10 = FIND_CHARA_FROM_PERSON_ID(DT_CELL_GET("関係性データベース", RESULT:1, "対象キャラ２", 1))
		RESULT:11 = FIND_CHARA_FROM_PERSON_ID(DT_CELL_GET("関係性データベース", RESULT:1, "対象キャラ１", 1))
		;受け攻め設定があるなら1を返す
		RETURN 1
	ELSE
		;受け攻め設定がされていないのでランダム
		対象キャラ１判定値 = 受け攻め判定処理(対象キャラ１)
		対象キャラ２判定値 = 受け攻め判定処理(対象キャラ２)
		;年齢差による補正、基本年上が有利。年齢不詳はめんどいので補正付けない
		IF TALENT:対象キャラ１:年齢層 > 0 && TALENT:対象キャラ２:年齢層 > 0
			対象キャラ１判定値 += (TALENT:対象キャラ１:年齢層 - TALENT:対象キャラ２:年齢層) * 10
		ENDIF
		;性別による補正、ちんこ持ってるほうが有利。両方持ってない・両方持ってるは補正なし
		IF GETBIT(TALENT:対象キャラ１:性別, 1) + GETBIT(TALENT:対象キャラ２:性別, 1) == 1
			IF GETBIT(TALENT:対象キャラ１:性別, 1)
				対象キャラ１判定値 += 20
			ELSE
				対象キャラ２判定値 += 20
			ENDIF
		ENDIF
		IF 対象キャラ１判定値 > RAND:(対象キャラ１判定値 + 対象キャラ２判定値)
			;対象１が攻め
			RESULT:10 = 対象キャラ１
			RESULT:11 = 対象キャラ２
		ELSE
			;対象２が攻め
			RESULT:10 = 対象キャラ２
			RESULT:11 = 対象キャラ１
		ENDIF
		;カップリングがあるが設定が無い場合は０を返す
		RETURN 0
	ENDIF
ELSE
	;設定がない場合は-1を返す
	RETURN -1
ENDIF
