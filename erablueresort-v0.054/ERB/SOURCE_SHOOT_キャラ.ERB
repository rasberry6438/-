;-------------------------------------------------------------------------------------------
;射精先の選択肢関連の処理
;-------------------------------------------------------------------------------------------
@EVENT_SHOOT_CHARA(射精キャラ)
#DIM 射精キャラ
#DIM 射精先キャラ, 射精先キャラ最大数
#DIM 射精番号配列, 射精先キャラ最大数
;#DIM 口上用キャラ番号
#DIM 対象キャラカウンタ
#DIM 選択肢数
#DIM 射精場所カウンタ
#DIM 選択番号
VARSET 射精先キャラ, -1
VARSET 射精番号配列, -1
;0では駄目なので初期化

;射精キャラを登録
RFLAG:口上用射精キャラ番号 = 射精キャラ

;どこに射精するかを決定する

;選択なしでそのまま出すもの
CALL 確定射精先判定(射精キャラ)
SIF RESULT
	RETURN 0

;射精先の登録
選択肢数 = 0
IF MODE_存在判定_いずれか側("ALL", 射精キャラ)
	FOR 射精場所カウンタ, 0, 30
		;同室キャラ（あなた含む）に対して各射精先を判定していく
		FOR 対象キャラカウンタ, 0, CHARANUM
			SIF CFLAG:射精キャラ:現在位置 != CFLAG:対象キャラカウンタ:現在位置 || CFLAG:射精キャラ:現在マップ種別 != CFLAG:対象キャラカウンタ:現在マップ種別
				CONTINUE
			SIF CFLAG:射精キャラ:隠密 != CFLAG:対象キャラカウンタ:隠密
				CONTINUE
			SIF 射精キャラ == 対象キャラカウンタ
				CONTINUE
			TRYCCALLFORM SHOOT_ABLE_{射精場所カウンタ}(射精キャラ, 対象キャラカウンタ)
				IF RESULT
					射精先キャラ:選択肢数 = 対象キャラカウンタ
					射精番号配列:選択肢数 = 射精場所カウンタ
					選択肢数 += 1
				ENDIF
			CATCH
			ENDCATCH
		NEXT
	NEXT
ENDIF

IF 選択肢数 == 0
	;モードが何もないなら30番確定
	JUMP 射精実処理(射精キャラ, -1, 30)
ELSE
	選択番号 = RAND:選択肢数
	JUMP 射精実処理(射精キャラ, 射精先キャラ:選択番号, 射精番号配列:選択番号)
ENDIF


@確定射精先判定(射精キャラ)
#DIM 射精キャラ
#DIM 射精先キャラ

;ハーヴィンオナホ中なら選択なしでそのまま
IF MODE_存在判定_プレイヤー側("ハーヴィンオナホＶ", 射精キャラ)
	射精先キャラ = DT_CELL_GET("体位モードデータベース", モードID受渡し, "対象キャラ", 1)
	CALL 射精実処理(射精キャラ, 射精先キャラ, 0)
	RETURN 1
ELSEIF MODE_存在判定_プレイヤー側("ハーヴィンオナホＡ", 射精キャラ)
	射精先キャラ = DT_CELL_GET("体位モードデータベース", モードID受渡し, "対象キャラ", 1)
	CALL 射精実処理(射精キャラ, 射精先キャラ, 1)
	RETURN 1
ELSEIF MODE_存在判定_プレイヤー側("挿入歩きＶ", 射精キャラ)
	射精先キャラ = DT_CELL_GET("体位モードデータベース", モードID受渡し, "対象キャラ", 1)
	CALL 射精実処理(射精キャラ, 射精先キャラ, 0)
	RETURN 1
ELSEIF MODE_存在判定_プレイヤー側("挿入歩きＡ", 射精キャラ)
	射精先キャラ = DT_CELL_GET("体位モードデータベース", モードID受渡し, "対象キャラ", 1)
	CALL 射精実処理(射精キャラ, 射精先キャラ, 1)
	RETURN 1
ELSEIF MODE_存在判定_ターゲット側("ハーヴィンディルドＶ", 射精キャラ)
	射精先キャラ = DT_CELL_GET("体位モードデータベース", モードID受渡し, "実行キャラ", 1)
	CALL 射精実処理(射精キャラ, 射精先キャラ, 0)
	RETURN 1
ELSEIF MODE_存在判定_ターゲット側("ハーヴィンディルドＡ", 射精キャラ)
	射精先キャラ = DT_CELL_GET("体位モードデータベース", モードID受渡し, "実行キャラ", 1)
	CALL 射精実処理(射精キャラ, 射精先キャラ, 1)
	RETURN 1
ENDIF
RETURN 0


@射精実処理(射精キャラ, 射精先キャラ, 射精場所)
#DIM 射精キャラ
#DIM 射精先キャラ
#DIM 射精場所

RFLAG:フィニッシュ相手番号 = 射精先キャラ
RFLAG:フィニッシュ場所 = 射精場所
RFLAG:フィニッシュフラグ = NOWEX:射精キャラ:射精
SIF 射精先キャラ >= 0
	TCVAR:射精先キャラ:現ターン被射精場所 = 射精場所 + 10
IF INRANGE(射精場所, 0, 29)
	DRAWLINE
	CALLFORM SHOOT_PALAM_{射精場所}(射精キャラ, 射精先キャラ)
	PRINTL 
ENDIF
地の文MOD_関数名 = {射精場所}
SIF EXISTFUNCTION(@"MESSAGE_COM%地の文MOD_関数名%_MOD") > 0
	地の文MOD_関数名 '= 地の文MOD_関数名 + "_MOD"
WAIT
IF 射精先キャラ >= 0
	CALL SHOOT絶頂計算(射精先キャラ, 射精キャラ)
	DRAWLINE
	TRYCALLFORM MESSAGE_SHOOT_%地の文MOD_関数名%(射精キャラ, 射精先キャラ)
	SIF RCVAR:射精先キャラ:被射精絶頂の強度
		CALL SHOOT絶頂口上(射精先キャラ, 射精キャラ)
	PRINTL 
	IF !CFLAG:射精先キャラ:睡眠
		TRYCCALLFORM KOJO_ORGASM_被射精_{NO:射精先キャラ}(射精先キャラ)
			WAIT
		CATCH
		ENDCATCH
	ENDIF
ELSE
	DRAWLINE
	TRYCALLFORM MESSAGE_SHOOT_%地の文MOD_関数名%(射精キャラ, 射精先キャラ)
ENDIF
