
@すごろくマップ_1(AA)
#DIMS REF AA, 0
AA:00 = 　　　　　　　　　　　　　　　　　　　　　　　
AA:01 = 　　　　　　　　　　　1415161718　　　　　　　
AA:02 = 　　　　　　　　　　　■■■■■　　　　　　　
AA:03 = 0102030405060708091011■　　　■20212223242526
AA:04 = 起■■■■■■■■■■■12　34■■■■■■■终
AA:05 = 　　　　　　　　　　27■　　　■33　　　　　　
AA:06 = 　　　　　　　　　　　■■■■■　　　　　　　
AA:07 = 　　　　　　　　　　　2829303132　　　　　　　
AA:08 = 　　　　　　　　　　　　　　　　　　　　　　　

;マスをマス情報に従ったものに変更
AA:02 = 
AA:02 += "　　　　　　　　　　　"
FOR LOCAL, 14, 19
	AA:02 += マス情報入力(LOCAL)
NEXT
AA:02 += "　　　　　　　"

AA:03 =
AA:03 += "0102030405060708091011"
AA:03 += マス情報入力(13)
AA:03 += "　　　"
AA:03 += マス情報入力(19)
AA:03 += "20212223242526"

AA:04 = 起
FOR LOCAL, 2, 13
	AA:04 += マス情報入力(LOCAL)
NEXT
AA:04 += "12　34"
AA:04 += マス情報入力(34)
FOR LOCAL, 20, 27
	AA:04 += マス情報入力(LOCAL)
NEXT
AA:04 += "终"

AA:05 = 
AA:05 += "　　　　　　　　　　27"
AA:05 += マス情報入力(27)
AA:05 += "　　　"
AA:05 += マス情報入力(33)
AA:05 += "33　　　　　　"

AA:06 = 
AA:06 += "　　　　　　　　　　　"
FOR LOCAL, 28, 33
	AA:06 += マス情報入力(LOCAL)
NEXT
AA:06 += "　　　　　　　"

@すごろくマップ_2(AA)
#DIMS REF AA, 0
AA:00 = 　　　　　　　　　　　　　　　
AA:01 = 　01020304050607080910111213　
AA:02 = 　起■■■■■■■■■■■■　
AA:03 = 　　　　　　　　　■48　　■14
AA:04 = 47终　　　　　　　■49　　■15
AA:05 = 46■　　　　　　　■50　　■16
AA:06 = 45■　　　　　　　■■■■■17
AA:07 = 44■　　　　　　　51525354■18
AA:08 = 43■　　　　　　　　　　　■19
AA:09 = 42■61605958　　　　　　　■20
AA:10 = 41■■■■■　　　　　　　■21
AA:11 = 40■　　　■57　　　　　　■22
AA:12 = 39■　　　■56　　　　　　■23
AA:13 = 38■　　　■55　　　　　　■24
AA:14 = 37■■■■■■■■■■■■■25
AA:15 = 　　3635343332313029282726　　

AA:02 = 
AA:02 += "　起"
FOR LOCAL, 2, 14
	AA:02 += マス情報入力(LOCAL)
NEXT

AA:03 = 
AA:03 += "　　　　　　　　　"
AA:03 += マス情報入力(48)
AA:03 += "48　　"
AA:03 += マス情報入力(14)
AA:03 += "14"

AA:04 = 
AA:04 += "47终　　　　　　　"
AA:04 += マス情報入力(49)
AA:04 += "49　　"
AA:04 += マス情報入力(15)
AA:04 += "15"

AA:05 = 
AA:05 += "46"
AA:05 += マス情報入力(46)
AA:05 += "　　　　　　　"
AA:05 += マス情報入力(50)
AA:05 += "50　　"
AA:05 += マス情報入力(16)
AA:05 += "16"

AA:06 = 
AA:06 += "45"
AA:06 += マス情報入力(45)
AA:06 += "　　　　　　　"
FOR LOCAL, 51, 55
	AA:06 += マス情報入力(LOCAL)
NEXT
AA:06 += マス情報入力(17)
AA:06 += "17"

AA:07 = 
AA:07 += "44"
AA:07 += マス情報入力(44)
AA:07 += "　　　　　　　51525354"
AA:07 += マス情報入力(18)
AA:07 += "18"

AA:08 = 
AA:08 += "43"
AA:08 += マス情報入力(43)
AA:08 += "　　　　　　　　　　　"
AA:08 += マス情報入力(19)
AA:08 += "19"

AA:09 = 
AA:09 += "42"
AA:09 += マス情報入力(42)
AA:09 += "61605958　　　　　　　"
AA:09 += マス情報入力(20)
AA:09 += "20"

AA:10 = 
AA:10 += "41"
AA:10 += マス情報入力(41)
AA:10 += マス情報入力(61)
AA:10 += マス情報入力(60)
AA:10 += マス情報入力(59)
AA:10 += マス情報入力(58)
AA:10 += "　　　　　　　"
AA:10 += マス情報入力(21)
AA:10 += "21"

AA:11 = 
AA:11 += "40"
AA:11 += マス情報入力(40)
AA:11 += "　　　"
AA:11 += マス情報入力(57)
AA:11 += "57"
AA:11 += "　　　　　　"
AA:11 += マス情報入力(22)
AA:11 += "22"

AA:12 = 
AA:12 += "39"
AA:12 += マス情報入力(39)
AA:12 += "　　　"
AA:12 += マス情報入力(56)
AA:12 += "56"
AA:12 += "　　　　　　"
AA:12 += マス情報入力(23)
AA:12 += "23"

AA:13 = 
AA:13 += "38"
AA:13 += マス情報入力(38)
AA:13 += "　　　"
AA:13 += マス情報入力(55)
AA:13 += "55"
AA:13 += "　　　　　　"
AA:13 += マス情報入力(24)
AA:13 += "24"

AA:14 = 
AA:14 += "37"
FOR LOCAL, 37, 24, -1
	AA:14 += マス情報入力(LOCAL)
NEXT
AA:14 += "25"

@すごろくマップ_3(AA)
#DIMS REF AA, 0
AA:00 = 　　　　　　　　　　　　　　　　　　　　　　
AA:01 = 　　676869707172737444终　　　　　　　　　　
AA:02 = 66■■■■■■■■■43■　　　　　　　　　　
AA:03 = 65■　　　　■9D75■42■　31302928272625　　
AA:04 = 64■　　　　■9C76■41■　■■■■■■■　　
AA:05 = 63■619596　■9B77■40■　■32　　　　■24　
AA:06 = 62■■■■　■9A78■39■　■33　　2021■23　
AA:07 = 　60■　■■■　79■38■　■3419■■■■22　
AA:08 = 　59■　979899　80■37■■■3518■　　　　　
AA:09 = 　58■949392　　81■87■36　　17■　　　　　
AA:10 = 　57■■■■■9182■86■　　　16■■■14　　
AA:11 = 　56■　　　■9083■■■　　　　　15■13　　
AA:12 = 　55■　　　■89　　8485　　　　　　■12　　
AA:13 = 　54■　　　■88　　　03040506070809■11　　
AA:14 = 　　■■■■■■■■■■■■■■■■■10　　
AA:15 = 　　535251504948474645■02　　　　　　　　　
AA:16 = 　　　　　　　　　　　起01　　　　　　　　　
AA:17 = 　　　　　　　　　　　　　　　　　　　　　　

AA:02 = 
AA:02 += "66"
FOR LOCAL, 66, 75
	AA:02 += マス情報入力(LOCAL)
NEXT
AA:02 += "43"
AA:02 += マス情報入力(43)

AA:03 = 
AA:03 += "65"
AA:03 += マス情報入力(65)
AA:03 += "　　　　"
AA:03 += マス情報入力(103)
AA:03 += "9D75"
AA:03 += マス情報入力(75)
AA:03 += "42"
AA:03 += マス情報入力(42)
AA:03 += "　31302928272625"

AA:04 = 
AA:04 += "64"
AA:04 += マス情報入力(64)
AA:04 += "　　　　"
AA:04 += マス情報入力(102)
AA:04 += "9C76"
AA:04 += マス情報入力(76)
AA:04 += "41"
AA:04 += マス情報入力(41)
AA:04 += "　"
FOR LOCAL, 31, 24, -1
	AA:04 += マス情報入力(LOCAL)
NEXT

AA:05 = 
AA:05 += "63"
AA:05 += マス情報入力(63)
AA:05 += "619596　"
AA:05 += マス情報入力(101)
AA:05 += "9B77"
AA:05 += マス情報入力(77)
AA:05 += "40"
AA:05 += マス情報入力(40)
AA:05 += "　"
AA:05 += マス情報入力(32)
AA:05 += "32　　　　"
AA:05 += マス情報入力(24)
AA:05 += "24"

AA:06 = 
AA:06 += "62"
AA:06 += マス情報入力(62)
AA:06 += マス情報入力(61)
AA:06 += マス情報入力(95)
AA:06 += マス情報入力(96)
AA:06 += "　"
AA:06 += マス情報入力(100)
AA:06 += "9A78"
AA:06 += マス情報入力(78)
AA:06 += "39"
AA:06 += マス情報入力(39)
AA:06 += "　"
AA:06 += マス情報入力(33)
AA:06 += "33　　2021"
AA:06 += マス情報入力(23)
AA:06 += "23"

AA:07 = 
AA:07 += "　60"
AA:07 += マス情報入力(60)
AA:07 += "　"
AA:07 += マス情報入力(97)
AA:07 += マス情報入力(98)
AA:07 += マス情報入力(99)
AA:07 += "　79"
AA:07 += マス情報入力(79)
AA:07 += "38"
AA:07 += マス情報入力(38)
AA:07 += "　"
AA:07 += マス情報入力(34)
AA:07 += "3419"
FOR LOCAL, 19, 23
	AA:07 += マス情報入力(LOCAL)
NEXT
AA:07 += "22"

AA:08 = 
AA:08 += "　59"
AA:08 += マス情報入力(59)
AA:08 += "　979899　80"
AA:08 += マス情報入力(80)
AA:08 += "37"
AA:08 += マス情報入力(37)
AA:08 += マス情報入力(36)
AA:08 += マス情報入力(35)
AA:08 += "3518"
AA:08 += マス情報入力(18)

AA:09 = 
AA:09 += "　58"
AA:09 += マス情報入力(58)
AA:09 += "949392　　81"
AA:09 += マス情報入力(81)
AA:09 += "87"
AA:09 += マス情報入力(87)
AA:09 += "36　　17"
AA:09 += マス情報入力(17)

AA:10 = 
AA:10 += "　57"
AA:10 += マス情報入力(57)
FOR LOCAL, 94, 90, -1
	AA:10 += マス情報入力(LOCAL)
NEXT
AA:10 += "9182"
AA:10 += マス情報入力(82)
AA:10 += "86"
AA:10 += マス情報入力(86)
AA:10 += "　　　16"
AA:10 += マス情報入力(16)
AA:10 += マス情報入力(15)
AA:10 += マス情報入力(14)
AA:10 += "14"

AA:11 = 
AA:11 += "　56"
AA:11 += マス情報入力(56)
AA:11 += "　　　"
AA:11 += マス情報入力(90)
AA:11 += "9083"
AA:11 += マス情報入力(82)
AA:11 += マス情報入力(84)
AA:11 += マス情報入力(85)
AA:11 += "　　　　　15"
AA:11 += マス情報入力(13)
AA:11 += "13"

AA:12 = 
AA:12 += "　55"
AA:12 += マス情報入力(55)
AA:12 += "　　　"
AA:12 += マス情報入力(89)
AA:12 += "89　　8485　　　　　　"
AA:12 += マス情報入力(12)
AA:12 += "12"

AA:13 = 
AA:13 += "　54"
AA:13 += マス情報入力(54)
AA:13 += "　　　"
AA:13 += マス情報入力(88)
AA:13 += "88　　　03040506070809"
AA:13 += マス情報入力(11)
AA:13 += "11"

AA:14 = 
AA:14 += "　　"
FOR LOCAL, 53, 44, -1
	AA:14 += マス情報入力(LOCAL)
NEXT
FOR LOCAL, 3, 11
	AA:14 += マス情報入力(LOCAL)
NEXT
AA:14 += "10"

AA:15 = 
AA:15 += "　　535251504948474645"
AA:15 += マス情報入力(2)
AA:15 += "02"


@マス情報入力(ARG)
#FUNCTIONS
SELECTCASE すごろくマス情報:ARG
	CASE 0
		RETURNF "全"
	CASE 1
		RETURNF "罚"
	CASE 2
		RETURNF "正"
	CASE 3
		RETURNF "负"
ENDSELECT

@DRAW_すごろくMAP_1(SLICED)
#DIMS SLICED
SELECTCASE SLICED
;空マス
CASE "　"
	PRINTS SLICED
;コママス
CASE "全"
	PRINT_IMG "ダメアビ"
CASE "罚"
	PRINT_IMG "回復アビ"
CASE "正"
	PRINT_IMG "バフアビ"
CASE "负"
	PRINT_IMG "弱体アビ"
;現在地表示
CASEELSE
	IF ISNUMERIC(SLICED)
		LOCAL:1 = 0
		FOR LOCAL, 0, 10
			IF TOINT(SLICED) == 11 && すごろく現在地:LOCAL == 13
				SETCOLOR すごろくカラーパレット(LOCAL)
				PRINT ▶ 
				RESETCOLOR
				LOCAL:1 = 1
				BREAK
			ELSEIF TOINT(SLICED) == 20 && すごろく現在地:LOCAL == 19
				SETCOLOR すごろくカラーパレット(LOCAL)
				PRINT ◀ 
				RESETCOLOR
				LOCAL:1 = 1
				BREAK
			ELSEIF TOINT(SLICED) == すごろく現在地:LOCAL
				SETCOLOR すごろくカラーパレット(LOCAL)
				IF すごろく現在地:LOCAL == 12 || すごろく現在地:LOCAL == 33
					PRINT ◀ 
				ELSEIF すごろく現在地:LOCAL == 27 || すごろく現在地:LOCAL == 34
					PRINT ▶ 
				ELSEIF すごろく現在地:LOCAL >= 28
					PRINT ▲
				ELSE
					PRINT ▼
				ENDIF
				RESETCOLOR
				LOCAL:1 = 1
				BREAK
			ENDIF
		NEXT
		SIF LOCAL:1 == 0
		PRINTS "　"
	ELSE
		PRINTS SLICED
	ENDIF
ENDSELECT

@DRAW_すごろくMAP_2(SLICED)
#DIMS SLICED
SELECTCASE SLICED
;空マス
CASE "　"
	PRINTS SLICED
;コママス
CASE "全"
	PRINT_IMG "ダメアビ"
CASE "罚"
	PRINT_IMG "回復アビ"
CASE "正"
	PRINT_IMG "バフアビ"
CASE "负"
	PRINT_IMG "弱体アビ"
;現在地表示
CASEELSE
	IF ISNUMERIC(SLICED)
		LOCAL:1 = 0
		FOR LOCAL, 0, 10
			IF TOINT(SLICED) == すごろく現在地:LOCAL
				SETCOLOR すごろくカラーパレット(LOCAL)
				IF すごろく現在地:LOCAL <= 13 || すごろく現在地:LOCAL >= 58
					PRINT ▼
				ELSEIF すごろく現在地:LOCAL >= 37 && すごろく現在地:LOCAL <= 47
					PRINT ▶ 
				ELSEIF (すごろく現在地:LOCAL >= 26 && すごろく現在地:LOCAL <= 36) || (すごろく現在地:LOCAL >= 51 && すごろく現在地:LOCAL <= 54)
					PRINT ▲
				ELSE
					PRINT ◀ 
				ENDIF
				RESETCOLOR
				LOCAL:1 = 1
				BREAK
			ENDIF
		NEXT
		SIF LOCAL:1 == 0
			PRINTS "　"
	ELSE
		PRINTS SLICED
	ENDIF
ENDSELECT

@DRAW_すごろくMAP_3(SLICED)
#DIMS SLICED
SELECTCASE SLICED
;空マス
CASE "　"
	PRINTS SLICED
;コママス
CASE "全"
	PRINT_IMG "ダメアビ"
CASE "罚"
	PRINT_IMG "回復アビ"
CASE "正"
	PRINT_IMG "バフアビ"
CASE "负"
	PRINT_IMG "弱体アビ"
;現在地表示
CASEELSE
	SIF SLICED == "9A"
		SLICED = 100
	SIF SLICED == "9B"
		SLICED = 101
	SIF SLICED == "9C"
		SLICED = 102
	SIF SLICED == "9D"
		SLICED = 103
	IF ISNUMERIC(SLICED)
		LOCAL:1 = 0
		FOR LOCAL, 0, 10
			IF TOINT(SLICED) == すごろく現在地:LOCAL
				SETCOLOR すごろくカラーパレット(LOCAL)
				SELECTCASE すごろく現在地:LOCAL
					CASE 1, 2, 10 TO 14, 22 TO 24, 32 TO 35, 88 TO 91, 100 TO 103
						PRINT ◀ 
					CASE 3 TO 9, 20, 21, 25 TO 31, 61, 67 TO 74, 95, 96
						PRINT ▼
					CASE 15, 36, 45 TO 53, 84, 85, 97 TO 99
						PRINT ▲
					CASEELSE
						PRINT ▶ 
				ENDSELECT
				RESETCOLOR
				LOCAL:1 = 1
				BREAK
			ENDIF
		NEXT
		SIF LOCAL:1 == 0
			PRINTS "　"
	ELSE
		PRINTS SLICED
	ENDIF
ENDSELECT

@現在地算出(ARG, すごろくマップ種別)
#FUNCTION

SELECTCASE すごろくマップ種別
	CASE 1
		LOCAL = 26 - すごろく現在地:ARG
		SIF LOCAL < 0
			LOCAL += 15
		RETURNF LOCAL
	CASE 2
		LOCAL = 47 - すごろく現在地:ARG
		IF LOCAL <= -8
			LOCAL += 21
		ELSEIF LOCAL < 0
			LOCAL += 38
		ENDIF
		RETURNF LOCAL
	CASE 3
		LOCAL = 44 - すごろく現在地:ARG
		IF LOCAL <= -51
			LOCAL += 84
		ELSEIF LOCAL <= -44
			LOCAL += 89
		ELSEIF LOCAL < 0
			LOCAL += 51
		ENDIF
		RETURNF LOCAL
ENDSELECT

@MOVE_すごろく(すごろくマップ種別, ARG, プレイヤー番号)
#DIM プレイヤー番号
;ステージごとに移動処理を分岐

SELECTCASE すごろくマップ種別
	CASE 1
		SELECTCASE すごろく現在地:プレイヤー番号
			CASE 12
				;ARGが入ってる＝道を選んでいるので移動処理
				;ARG=1だとランダム選択（ＮＰＣ移動）
				IF 移動状態:プレイヤー番号 > 0
					SIF ARG == 1
						ARG = (RAND:2 * 6) + 2
					IF ARG == 8
						;上
						すごろく現在地:プレイヤー番号 = 13
						移動状態:プレイヤー番号 -= 1
						RETURN 0
					ELSEIF ARG == 2
						;下
						すごろく現在地:プレイヤー番号 = 27
						移動状態:プレイヤー番号 -= 1
						RETURN 0
					ENDIF
				;分かれ道、上と下なのでビット０とビット１を真にして返す
					RETURN 3
				ELSEIF 移動状態:プレイヤー番号 < 0
					すごろく現在地:プレイヤー番号 -= 1
					移動状態:プレイヤー番号 += 1
				ENDIF
			CASE 19
				;19＞34、34＞20の時特殊処理
				IF 移動状態:プレイヤー番号 > 0
					すごろく現在地:プレイヤー番号 = 34
					移動状態:プレイヤー番号 -= 1
				ELSEIF 移動状態:プレイヤー番号 < 0
					すごろく現在地:プレイヤー番号 -= 1
					移動状態:プレイヤー番号 += 1
				ENDIF
				RETURN 0
			CASE 20
				;20＞34の時特殊処理
				IF 移動状態:プレイヤー番号 > 0
					すごろく現在地:プレイヤー番号 += 1
					移動状態:プレイヤー番号 -= 1
				ELSEIF 移動状態:プレイヤー番号 < 0
					すごろく現在地:プレイヤー番号 = 34
					移動状態:プレイヤー番号 += 1
				ENDIF
				RETURN 0
			CASE 26
				;ゴール地点なのでそれ以上変化しない
				移動状態:プレイヤー番号 = 0
				RETURN 0
			CASE 27
				;27＞12の時特殊処理
				IF 移動状態:プレイヤー番号 > 0
					すごろく現在地:プレイヤー番号 += 1
					移動状態:プレイヤー番号 -= 1
				ELSEIF 移動状態:プレイヤー番号 < 0
					すごろく現在地:プレイヤー番号 = 12
					移動状態:プレイヤー番号 += 1
				ENDIF
				RETURN 0
			CASE 34
				;19＞34、34＞20の時特殊処理
				IF 移動状態:プレイヤー番号 > 0
					すごろく現在地:プレイヤー番号 = 20
					移動状態:プレイヤー番号 -= 1
					RETURN 0
				ELSEIF 移動状態:プレイヤー番号 < 0
					SIF ARG == 1
						ARG = (RAND:2 * 6) + 2
					IF ARG == 8
						;上
						すごろく現在地:プレイヤー番号 = 19
						移動状態:プレイヤー番号 += 1
						RETURN 0
					ELSEIF ARG == 2
						;下
						すごろく現在地:プレイヤー番号 = 33
						移動状態:プレイヤー番号 += 1
						RETURN 0
					ENDIF
				;分かれ道、上と下なのでビット０とビット１を真にして返す
					RETURN 3
				ENDIF
			CASEELSE
				;一本道なので位置を＋１して返す
				IF 移動状態:プレイヤー番号 > 0
					すごろく現在地:プレイヤー番号 += 1
					移動状態:プレイヤー番号 -= 1
				ELSEIF 移動状態:プレイヤー番号 < 0
					すごろく現在地:プレイヤー番号 -= 1
					すごろく現在地:プレイヤー番号 = MAX(すごろく現在地:プレイヤー番号, 1)
					移動状態:プレイヤー番号 += 1
				ENDIF
				RETURN 0
		ENDSELECT

	CASE 2
		SELECTCASE すごろく現在地:プレイヤー番号
			CASE 09
				;ARGが入ってる＝道を選んでいるので移動処理
				;ARG=1だとランダム選択（ＮＰＣ移動）
				IF 移動状態:プレイヤー番号 > 0
					SIF ARG == 1
						ARG = (RAND:2 * 4) + 2
					IF ARG == 6
						;右
						すごろく現在地:プレイヤー番号 = 10
						移動状態:プレイヤー番号 -= 1
						RETURN 0
					ELSEIF ARG == 2
						;下
						すごろく現在地:プレイヤー番号 = 48
						移動状態:プレイヤー番号 -= 1
						RETURN 0
					ENDIF
					;分かれ道、右と下なのでビット３とビット１を真にして返す
					RETURN 10
				ELSEIF 移動状態:プレイヤー番号 < 0
					すごろく現在地:プレイヤー番号 -= 1
					移動状態:プレイヤー番号 += 1
				ENDIF
				RETURN 0
			CASE 17
				;17から戻る際の特殊処理
				IF 移動状態:プレイヤー番号 > 0
					すごろく現在地:プレイヤー番号 += 1
					移動状態:プレイヤー番号 -= 1
				ELSEIF 移動状態:プレイヤー番号 < 0
					;ARGが入ってる＝道を選んでいるので移動処理
					;ARG=1だとランダム選択（ＮＰＣ移動）
					SIF ARG == 1
						ARG = (RAND:2 * 4) + 4
					IF ARG == 8
						;上
						すごろく現在地:プレイヤー番号 = 16
						移動状態:プレイヤー番号 += 1
						RETURN 0
					ELSEIF ARG == 4
						;左
						すごろく現在地:プレイヤー番号 = 54
						移動状態:プレイヤー番号 += 1
						RETURN 0
					ENDIF
					;分かれ道、上と左なのでビット２とビット０を真にして返す
					RETURN 5
				ENDIF
				RETURN 0
			CASE 33
				;33の分岐
				;ARGが入ってる＝道を選んでいるので移動処理
				;ARG=1だとランダム選択（ＮＰＣ移動）
				IF 移動状態:プレイヤー番号 > 0
					SIF ARG == 1
						ARG = (RAND:2 * 4) + 4
					IF ARG == 8
						;上
						すごろく現在地:プレイヤー番号 = 55
						移動状態:プレイヤー番号 -= 1
						RETURN 0
					ELSEIF ARG == 4
						;左
						すごろく現在地:プレイヤー番号 = 34
						移動状態:プレイヤー番号 -= 1
						RETURN 0
					ENDIF
					;分かれ道、上と左なのでビット２とビット０を真にして返す
					RETURN 5
				ELSEIF 移動状態:プレイヤー番号 < 0
					すごろく現在地:プレイヤー番号 -= 1
					移動状態:プレイヤー番号 += 1
				ENDIF
				RETURN 0
			CASE 41
				;41から戻る際の特殊処理
				IF 移動状態:プレイヤー番号 > 0
					すごろく現在地:プレイヤー番号 += 1
					移動状態:プレイヤー番号 -= 1
				ELSEIF 移動状態:プレイヤー番号 < 0
					;ARGが入ってる＝道を選んでいるので移動処理
					;ARG=1だとランダム選択（ＮＰＣ移動）
					SIF ARG == 1
						ARG = (RAND:2 * 4) + 2
					IF ARG == 6
						;右
						すごろく現在地:プレイヤー番号 = 61
						移動状態:プレイヤー番号 += 1
						RETURN 0
					ELSEIF ARG == 2
						;下
						すごろく現在地:プレイヤー番号 = 40
						移動状態:プレイヤー番号 += 1
						RETURN 0
					ENDIF
					;分かれ道、右と下なのでビット３とビット１を真にして返す
					RETURN 10
				ENDIF
				RETURN 0
			CASE 47
				;ゴール地点なのでそれ以上変化しない
				移動状態:プレイヤー番号 = 0
				RETURN 0
			CASE 48
				;48>9
				IF 移動状態:プレイヤー番号 > 0
					すごろく現在地:プレイヤー番号 += 1
					移動状態:プレイヤー番号 -= 1
				ELSEIF 移動状態:プレイヤー番号 < 0
					すごろく現在地:プレイヤー番号 = 9
					移動状態:プレイヤー番号 += 1
				ENDIF
				RETURN 0
			CASE 54
				;54>17
				IF 移動状態:プレイヤー番号 > 0
					すごろく現在地:プレイヤー番号 = 17
					移動状態:プレイヤー番号 -= 1
				ELSEIF 移動状態:プレイヤー番号 < 0
					すごろく現在地:プレイヤー番号 -= 1
					移動状態:プレイヤー番号 += 1
				ENDIF
				RETURN 0
			CASE 55
				;55>33
				IF 移動状態:プレイヤー番号 > 0
					すごろく現在地:プレイヤー番号 += 1
					移動状態:プレイヤー番号 -= 1
				ELSEIF 移動状態:プレイヤー番号 < 0
					すごろく現在地:プレイヤー番号 = 33
					移動状態:プレイヤー番号 += 1
				ENDIF
				RETURN 0
			CASE 61
				;61>41
				IF 移動状態:プレイヤー番号 > 0
					すごろく現在地:プレイヤー番号 = 41
					移動状態:プレイヤー番号 -= 1
				ELSEIF 移動状態:プレイヤー番号 < 0
					すごろく現在地:プレイヤー番号 -= 1
					移動状態:プレイヤー番号 += 1
				ENDIF
				RETURN 0
			CASEELSE
				;一本道なので位置を＋１して返す
				IF 移動状態:プレイヤー番号 > 0
					すごろく現在地:プレイヤー番号 += 1
					移動状態:プレイヤー番号 -= 1
				ELSEIF 移動状態:プレイヤー番号 < 0
					すごろく現在地:プレイヤー番号 -= 1
					すごろく現在地:プレイヤー番号 = MAX(すごろく現在地:プレイヤー番号, 1)
					移動状態:プレイヤー番号 += 1
				ENDIF
				RETURN 0
		ENDSELECT

	CASE 3
		SELECTCASE すごろく現在地:プレイヤー番号
			CASE 3
				IF 移動状態:プレイヤー番号 > 0
					;ARGが入ってる＝道を選んでいるので移動処理
					;ARG=1だとランダム選択（ＮＰＣ移動）
					SIF ARG == 1
						ARG = (RAND:2 * 2) + 4
					IF ARG == 6
						;右
						すごろく現在地:プレイヤー番号 = 4
						移動状態:プレイヤー番号 -= 1
						RETURN 0
					ELSEIF ARG == 4
						;左
						すごろく現在地:プレイヤー番号 = 45
						移動状態:プレイヤー番号 -= 1
						RETURN 0
					ENDIF
					;分かれ道、右と左なのでビット３とビット２を真にして返す
					RETURN 12
				ELSEIF 移動状態:プレイヤー番号 < 0
					すごろく現在地:プレイヤー番号 -= 1
					移動状態:プレイヤー番号 += 1
				ENDIF
				RETURN 0
			CASE 37
				IF 移動状態:プレイヤー番号 > 0
					すごろく現在地:プレイヤー番号 += 1
					移動状態:プレイヤー番号 -= 1
				ELSEIF 移動状態:プレイヤー番号 < 0
					;下がる時は分岐
					;ARGが入ってる＝道を選んでいるので移動処理
					;ARG=1だとランダム選択（ＮＰＣ移動）
					SIF ARG == 1
						ARG = (RAND:2 * 4) + 2
					IF ARG == 6
						;右
						すごろく現在地:プレイヤー番号 = 36
						移動状態:プレイヤー番号 += 1
						RETURN 0
					ELSEIF ARG == 2
						;下
						すごろく現在地:プレイヤー番号 = 87
						移動状態:プレイヤー番号 += 1
						RETURN 0
					ENDIF
					;分かれ道、右と下なのでビット３とビット１を真にして返す
					RETURN 10
				ENDIF
			CASE 44
				;ゴール地点なのでそれ以上変化しない
				移動状態:プレイヤー番号 = 0
				RETURN 0
			CASE 45
				IF 移動状態:プレイヤー番号 > 0
					すごろく現在地:プレイヤー番号 += 1
					移動状態:プレイヤー番号 -= 1
				ELSEIF 移動状態:プレイヤー番号 < 0
					すごろく現在地:プレイヤー番号 = 3
					移動状態:プレイヤー番号 += 1
				ENDIF
			CASE 49
				IF 移動状態:プレイヤー番号 > 0
					;ARGが入ってる＝道を選んでいるので移動処理
					;ARG=1だとランダム選択（ＮＰＣ移動）
					SIF ARG == 1
						ARG = (RAND:2 * 4) + 4
					IF ARG == 8
						;上
						すごろく現在地:プレイヤー番号 = 88
						移動状態:プレイヤー番号 -= 1
						RETURN 0
					ELSEIF ARG == 4
						;左
						すごろく現在地:プレイヤー番号 = 50
						移動状態:プレイヤー番号 -= 1
						RETURN 0
					ENDIF
					;分かれ道、上と左なのでビット０とビット２を真にして返す
					RETURN 5
				ELSEIF 移動状態:プレイヤー番号 < 0
					すごろく現在地:プレイヤー番号 -= 1
					移動状態:プレイヤー番号 += 1
				ENDIF
			CASE 57
				IF 移動状態:プレイヤー番号 > 0
					すごろく現在地:プレイヤー番号 += 1
					移動状態:プレイヤー番号 -= 1
				ELSEIF 移動状態:プレイヤー番号 < 0
					;下がる時は分岐
					;ARGが入ってる＝道を選んでいるので移動処理
					;ARG=1だとランダム選択（ＮＰＣ移動）
					SIF ARG == 1
						ARG = (RAND:2 * 4) + 2
					IF ARG == 6
						;右
						すごろく現在地:プレイヤー番号 = 94
						移動状態:プレイヤー番号 += 1
						RETURN 0
					ELSEIF ARG == 2
						;下
						すごろく現在地:プレイヤー番号 = 56
						移動状態:プレイヤー番号 += 1
						RETURN 0
					ENDIF
					;分かれ道、右と下なのでビット３とビット１を真にして返す
					RETURN 10
				ENDIF
			CASE 61
				IF 移動状態:プレイヤー番号 > 0
					;ARGが入ってる＝道を選んでいるので移動処理
					;ARG=1だとランダム選択（ＮＰＣ移動）
					SIF ARG == 1
						ARG = (RAND:2 * 2) + 4
					IF ARG == 6
						;右
						すごろく現在地:プレイヤー番号 = 95
						移動状態:プレイヤー番号 -= 1
						RETURN 0
					ELSEIF ARG == 4
						;左
						すごろく現在地:プレイヤー番号 = 62
						移動状態:プレイヤー番号 -= 1
						RETURN 0
					ENDIF
					;分かれ道、右と左なのでビット３とビット２を真にして返す
					RETURN 12
				ELSEIF 移動状態:プレイヤー番号 < 0
					すごろく現在地:プレイヤー番号 -= 1
					移動状態:プレイヤー番号 += 1
				ENDIF
			CASE 71
				IF 移動状態:プレイヤー番号 > 0
					すごろく現在地:プレイヤー番号 += 1
					移動状態:プレイヤー番号 -= 1
				ELSEIF 移動状態:プレイヤー番号 < 0
					;下がる時は分岐
					;ARGが入ってる＝道を選んでいるので移動処理
					;ARG=1だとランダム選択（ＮＰＣ移動）
					SIF ARG == 1
						ARG = (RAND:2 * 2) + 2
					IF ARG == 4
						;左
						すごろく現在地:プレイヤー番号 = 70
						移動状態:プレイヤー番号 += 1
						RETURN 0
					ELSEIF ARG == 2
						;下
						すごろく現在地:プレイヤー番号 = 103
						移動状態:プレイヤー番号 += 1
						RETURN 0
					ENDIF
					;分かれ道、左と下なのでビット２とビット１を真にして返す
					RETURN 6
				ENDIF
			CASE 87
				IF 移動状態:プレイヤー番号 > 0
					すごろく現在地:プレイヤー番号 = 37
					移動状態:プレイヤー番号 -= 1
				ELSEIF 移動状態:プレイヤー番号 < 0
					すごろく現在地:プレイヤー番号 -= 1
					移動状態:プレイヤー番号 += 1
				ENDIF
			CASE 88
				IF 移動状態:プレイヤー番号 > 0
					すごろく現在地:プレイヤー番号 += 1
					移動状態:プレイヤー番号 -= 1
				ELSEIF 移動状態:プレイヤー番号 < 0
					すごろく現在地:プレイヤー番号 = 49
					移動状態:プレイヤー番号 += 1
				ENDIF
			CASE 94
				IF 移動状態:プレイヤー番号 > 0
					すごろく現在地:プレイヤー番号 = 57
					移動状態:プレイヤー番号 -= 1
				ELSEIF 移動状態:プレイヤー番号 < 0
					すごろく現在地:プレイヤー番号 -= 1
					移動状態:プレイヤー番号 += 1
				ENDIF
			CASE 95
				IF 移動状態:プレイヤー番号 > 0
					すごろく現在地:プレイヤー番号 += 1
					移動状態:プレイヤー番号 -= 1
				ELSEIF 移動状態:プレイヤー番号 < 0
					すごろく現在地:プレイヤー番号 = 61
					移動状態:プレイヤー番号 += 1
				ENDIF
			CASE 103
				IF 移動状態:プレイヤー番号 > 0
					すごろく現在地:プレイヤー番号 =71
					移動状態:プレイヤー番号 -= 1
				ELSEIF 移動状態:プレイヤー番号 < 0
					すごろく現在地:プレイヤー番号 -= 1
					移動状態:プレイヤー番号 += 1
				ENDIF
			CASEELSE
				;一本道なので位置を＋１して返す
				IF 移動状態:プレイヤー番号 > 0
					すごろく現在地:プレイヤー番号 += 1
					移動状態:プレイヤー番号 -= 1
				ELSEIF 移動状態:プレイヤー番号 < 0
					すごろく現在地:プレイヤー番号 -= 1
					すごろく現在地:プレイヤー番号 = MAX(すごろく現在地:プレイヤー番号, 1)
					移動状態:プレイヤー番号 += 1
				ENDIF
				RETURN 0
		ENDSELECT
ENDSELECT

