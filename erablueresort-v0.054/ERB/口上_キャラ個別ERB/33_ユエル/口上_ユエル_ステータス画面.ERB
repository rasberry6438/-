;--------------------------------------------------
;キャラが表示されている時、画面に表示される一言口上
;--------------------------------------------------
;・使い方
;「33」をキャラクター番号に置換し、それぞれの関数に処理を入れる
;　口上と同じ感覚で使う為に書式を統一しているが、通常時の画面で表示されるので
;　基本的にWAIT系列は使わないことを推奨
;　また、一行のみの表示を想定。二行以上は基本的に禁止
;　※うふふ中には表示されません
;--------------------------------------------------
@口上_INFO画面_一言コメント_33(対象キャラ)
#DIM 対象キャラ
CALL 口上変数初期化

;以下は分岐の例
;仕事中の一言口上
IF TALENT:対象キャラ:従業員 && TCVAR:対象キャラ:休暇中 == 0 && CFLAG:対象キャラ:現在位置 == 現在仕事:対象キャラ:1 % 10000 && CFLAG:対象キャラ:現在マップ種別 == 現在仕事:対象キャラ:1 / 10000
	SELECTCASE 現在仕事:対象キャラ:1
		CASE 2
			;ロビーで受付中
			KSTR:(K++) = 「いらっしゃーい」
		CASE 503
			;バーエリアでバーテンダー中
			KSTR:(K++) = 「いらっしゃーい！　お酒は楽しく飲むもんやでー」
		CASE 506
			;図書室で司書中
			KSTR:(K++) = 「しー……図書室では静かにせんとあかんよ」
		CASE 1503, 15
			;プールで監視員中
			KSTR:(K++) = 「こらー！　飛び込んだらあかんよー！」
		CASE IS > 10000
			;各種店舗で店番中
			CALLFORMF 空艇港店舗名表示_{空艇港店舗状況:(現在仕事:対象キャラ:1 - 10000):0}(現在仕事:対象キャラ:1 - 10000)
			SELECTCASE REPLACE(TSTR:場所名受渡, "『.*』", "")
				CASE "道具屋"
					KSTR:(K++) = 「シェロちゃーん？　なんか品物足りないんやけどー」
				CASE "土産物屋"
					KSTR:(K++) = 「おお、なんかテンション上がるわぁ」
				CASE "食事処"
					KSTR:(K++) = 「ええ匂いでお腹すいてきたわぁ……」
				CASE "装飾品店"
					KSTR:(K++) = 「キラキラしてて綺麗やぁ」
			ENDSELECT
	ENDSELECT
ENDIF
;この時点で口上が入ってるなら表示へ飛ばす
SIF KSTR:0 != ""
	GOTO 表示位置
;状況で分岐

IF CFLAG:対象キャラ:飲み会
	;飲み会中
	KSTR:(K++) = 「いっぱい飲むでぇ！」
ELSEIF CFLAG:対象キャラ:睡眠
	;睡眠中
	KSTR:(K++) = 「すぅ……すぅ……」
ELSEIF CFLAG:対象キャラ:デート == MASTER + 100
	;デート中
	;デートの相手のキャラ番号 + 100が入っている
	;あなた相手なら「CFLAG:対象キャラ:デート == MASTER + 100」
	KSTR:(K++) = 「なんや、恥ずかしいわぁ」
ELSEIF CFLAG:対象キャラ:一緒に遊ぶ
	;一緒に遊ぶ中
	KSTR:(K++) = 「あっはは！　ぼーっとしたらあかんよぉ！」
ELSEIF CFLAG:対象キャラ:同行
	;同行中
	KSTR:(K++) = 「どしたん？」
ELSEIF CFLAG:PLAYER:隠密 && CFLAG:対象キャラ:隠密
	;一緒に隠密中
	KSTR:(K++) = 「わくわくするなぁ」
ELSEIF CFLAG:PLAYER:隠密 && !CFLAG:対象キャラ:隠密
	;あなたが隠れていて、キャラはあなたに気づいていない
	KSTR:(K++) = 「あれ、どこ行ったんやろ？」
ELSEIF !CFLAG:PLAYER:隠密 && CFLAG:対象キャラ:隠密
	;キャラの野外オナニー中
	KSTR:(K++) = 「ふっ……んっ_H_　まずい、よぉ_H_」
ENDIF
;この時点で口上が入ってるなら表示へ飛ばす
SIF KSTR:0 != ""
	GOTO 表示位置

;最も多い好感度要素で分岐
SELECTCASE MAXRAND(CFLAG:対象キャラ:友情度, CFLAG:対象キャラ:信頼度, CFLAG:対象キャラ:恋心度, CFLAG:対象キャラ:性愛度)
	CASE 0
		;友情度
		KSTR:(K++) = 
	CASE 1
		;信頼度
		KSTR:(K++) = 
	CASE 2
		;恋心度
		KSTR:(K++) = 
	CASE 3
		;性愛度
		KSTR:(K++) = 
ENDSELECT

$表示位置
CALL PRINT_STATEコメント表示(対象キャラ, 2)


;--------------------------------------------------
;ステータス画面などに表示される一言口上
;--------------------------------------------------
;・使い方
;「33」をキャラクター番号に置換し、それぞれの関数に処理を入れる
;　口上と同じ感覚で使う為に書式を統一しているが、ステータス画面で表示されるので
;　基本的にWAIT系列は使わないことを推奨
;--------------------------------------------------
@口上_ステータス画面_友情コメント_33(対象キャラ)
#DIM 対象キャラ
CALL 口上変数初期化
SELECTCASE CFLAG:対象キャラ:友情度
	CASE IS == 0
		;初対面
		KSTR:(K++) = 「やっほー。ユエルちゃんやでー」
	CASE IS <= 経験値テーブル:(関係閾値:1)
		;他人
		KSTR:(K++) = 「おもしろそうな場所やなぁ。お宝もありそうや！」
	CASE IS <= 経験値テーブル:(関係閾値:2)
		;顔見知り
		KSTR:(K++) = 「今回もお世話になるで！」
	CASE IS <= 経験値テーブル:(関係閾値:3)
		;友人
		KSTR:(K++) = 「ねね、一緒に宝探しに行かへん？」
	CASE IS <= 経験値テーブル:(関係閾値:4)
		;親友
		KSTR:(K++) = 「早く準備しぃ！　探索に行くでぇ！」
	CASEELSE
		;無二の友
		KSTR:(K++) = 「お宝はうちらのもんや！」
ENDSELECT
CALL PRINT_STATEコメント表示(対象キャラ)

@口上_ステータス画面_信頼コメント_33(対象キャラ)
#DIM 対象キャラ
CALL 口上変数初期化
SELECTCASE CFLAG:対象キャラ:信頼度
	CASE IS == 0
		;初対面
		KSTR:(K++) = 「んー、ノーコメントで」
	CASE IS <= 経験値テーブル:(関係閾値:1)
		;他人
		KSTR:(K++) = 「ええ人なんやない？」
	CASE IS <= 経験値テーブル:(関係閾値:2)
		;顔見知り
		KSTR:(K++) = 「頑張ってると思うで？」
	CASE IS <= 経験値テーブル:(関係閾値:3)
		;知己
		KSTR:(K++) = 「頼りになるお人やわぁ」
	CASE IS <= 経験値テーブル:(関係閾値:4)
		;相棒
		KSTR:(K++) = 「背中は任せたで！」
	CASEELSE
		;水魚の交わり
		KSTR:(K++) = 「世界のお宝はうちらのもん！」
ENDSELECT
CALL PRINT_STATEコメント表示(対象キャラ)

@口上_ステータス画面_恋心コメント_33(対象キャラ)
#DIM 対象キャラ
CALL 口上変数初期化
SELECTCASE CFLAG:対象キャラ:恋心度
	CASE IS == 0
		;初対面
		KSTR:(K++) = 「んー……」
	CASE IS <= 経験値テーブル:(関係閾値:1)
		;他人
		KSTR:(K++) = 「そういう目で見たことないわぁ」
	CASE IS <= 経験値テーブル:(関係閾値:2)
		;顔見知り
		KSTR:(K++) = 「まあ、いい人ではあるんちゃう？」
	CASE IS <= 経験値テーブル:(関係閾値:3)
		;気になる人
		KSTR:(K++) = 「かっこいい、とは思うよ？」
	CASE IS <= 経験値テーブル:(関係閾値:4)
		;想い人
		KSTR:(K++) = 「答えんとあかん？」
	CASEELSE
		;最愛の人
		KSTR:(K++) = 「すき」
ENDSELECT
CALL PRINT_STATEコメント表示(対象キャラ)

@口上_ステータス画面_性愛コメント_33(対象キャラ)
#DIM 対象キャラ
CALL 口上変数初期化
SELECTCASE CFLAG:対象キャラ:性愛度
	CASE IS == 0
		;初対面
		KSTR:(K++) = 「ん？」
	CASE IS <= 経験値テーブル:(関係閾値:1)
		;他人
		KSTR:(K++) = 「わからんなぁ」
	CASE IS <= 経験値テーブル:(関係閾値:2)
		;顔見知り
		KSTR:(K++) = 「あー……あはは……」
	CASE IS <= 経験値テーブル:(関係閾値:3)
		;性癖に合う
		KSTR:(K++) = 「趣味は合う、かなぁ？」
	CASE IS <= 経験値テーブル:(関係閾値:4)
		;自慰の対象
		KSTR:(K++) = 「あかん、見とれんわ_H_」
	CASEELSE
		;肉欲の虜
		KSTR:(K++) = 「うぅ……はよぉしてや……_H_」
ENDSELECT
CALL PRINT_STATEコメント表示(対象キャラ, 1)

@口上_ステータス画面_キャラ固有好感度要素コメント_33(対象キャラ)
#DIM 対象キャラ
CALL 口上変数初期化
SELECTCASE CFLAG:対象キャラ:キャラ固有好感度
	CASE IS == 0
		;初対面
		KSTR:(K++) = 
	CASE IS <= 経験値テーブル:(関係閾値:1)
		;他人
		KSTR:(K++) = 
	CASE IS <= 経験値テーブル:(関係閾値:2)
		;顔見知り
		KSTR:(K++) = 
	CASE IS <= 経験値テーブル:(関係閾値:3)
		;
		KSTR:(K++) = 
	CASE IS <= 経験値テーブル:(関係閾値:4)
		;
		KSTR:(K++) = 
	CASEELSE
		;
		KSTR:(K++) = 
ENDSELECT
CALL PRINT_STATEコメント表示(対象キャラ, 1)

@口上_ステータス画面_恋慕コメント_33(対象キャラ)
#DIM 対象キャラ
CALL 口上変数初期化
PRINTL 
SELECTCASE CFLAG:対象キャラ:恋慕レベル
	CASE IS == 0
		;脈ナシ
		KSTR:(K++) = 「今のところはナイ、かなぁ」
	CASE IS <= 関係閾値:1
		;ちょっと気になる
		KSTR:(K++) = 「まあ、ええんちゃう？」
	CASE IS <= 関係閾値:2
		;なんかいいかも
		KSTR:(K++) = 「ん、まあ、かっこよくはある」
	CASE IS <= 関係閾値:3
		;好意を自覚
		KSTR:(K++) = 「はぁ、まさかウチが……」
	CASE IS <= 関係閾値:4
		;ラブラブ
		KSTR:(K++) = 「んふふ_H_　ほら、ユエルちゃんの隣が空いとるよ_H_」
	CASEELSE
		;最愛の人
		KSTR:(K++) = 「もう放さへんよ_H_」
ENDSELECT
CALL PRINT_STATEコメント表示(対象キャラ, 1)

;--------------------------------------------------
;戦闘能力画面に表示されるキャラごとの固有処理説明
;--------------------------------------------------
;・使い方
;「33」をキャラクター番号に置換し、それぞれの関数に処理を入れる
;　口上と同じ感覚で使う為に書式を統一しているが、ステータス画面で表示されるので
;　基本的にWAIT系列は使わないことを推奨
;--------------------------------------------------
@口上_ステータス画面_固有特性解説_33(対象キャラ)
#DIM 対象キャラ
CALL 口上変数初期化

;リミテッドVerの処理は別ファイルにまとめるため、別関数を呼ぶ
IF CSTR:GETCHARA(33):スタイル管理文字列 == "[千年を超える者]ユエル"
	CALL 千年を超える者口上_ステータス画面_固有特性解説()
	RETURN RESULT
ENDIF

KSTR:(K++) = □ 特性 □-------------------------------------------------------------------------------
KSTR:(K++) = 　
KSTR:(K++) = 　
KSTR:(K++) = 　
KSTR:(K++) = 　

CALL 口上変数表示(対象キャラ, 1)

;--------------------------------------------------
;キャラについての解説
;EXキャラの出典を解説したり、キャラの設定・背景を解説するもの
;--------------------------------------------------
;@口上_ステータス画面_キャラ解説_33(対象キャラ)
;#DIM 対象キャラ
;
;KSTR:(K++) = 　
;KSTR:(K++) = 　
;KSTR:(K++) = 　
;KSTR:(K++) = 　
