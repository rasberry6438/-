;****************************************
;妊娠時の確率や可不可の処理に使う特殊関数
;****************************************
;・使い方
;「38」をキャラクター番号に置換し、それぞれの関数に処理を入れる
;ここにおいてある関数は母親のキャラ番号で記述すること
;****************************************

;--------------------------------------------------
;種親の制御
;--------------------------------------------------
@個別妊娠処理_種親制御_38(対象キャラ, 種親)
#DIM 対象キャラ
#DIM 種親

;複数の精子が子宮にある場合、どれで妊娠判定をするかを選ぶタイミングで呼ばれる
;種親に男のキャラ番号が入っているので、NAMEや素質などを見て結果を返す

;RETURN 1 でこの種親で確定し、妊娠判定を行う
;RETURN -1 でこの種親では妊娠判定を行わない、この種親しか子宮にない場合は妊娠処理自体が終了する
;RETURN 0 で通常の種親ランダム判定に戻す
RETURN 0

;「MASTERの種がある時はMASTERを優先するけど、他の種でも孕むよ」という場合は以下のようになる
; IF 種親 == MASTER
; 	RETURN 1
; ENDIF

;単純な禁止・相手固定は妊娠率制御の方でやることを推奨

;--------------------------------------------------
;妊娠率の制御
;--------------------------------------------------
@個別妊娠処理_妊娠率制御_38(対象キャラ, 種親)
#DIM 対象キャラ
#DIM 種親

;男親が決定後、妊娠するかどうかのタイミングで呼ばれる
;種親に男のキャラ番号が入っているので、NAMEや素質などを見て結果を返す

;RETURN 1 で100%妊娠させる
;RETURN -1 で絶対に妊娠させない
;RETURN 0 で通常の妊娠判定に戻す
RETURN 0

;例えば「MASTERかグランでしか妊娠しないよ！」という場合は以下のようになる
IF 種親 != MASTER && NAME:種親 != "[逐梦者]古兰"
	RETURN -1
ENDIF

;相手が恋慕なら妊娠する、違うならしないという場合は以下のようになる
IF 種親 == MASTER && (GETBIT(陥落チェック(対象キャラ), 0) || GETBIT(陥落チェック(対象キャラ), 1))
ELSEIF 関係性チェック(対象キャラ, 種親, "恋慕") || 関係性チェック(対象キャラ, 種親, "セフレ")
ELSE
	RETURN -1
ENDIF
