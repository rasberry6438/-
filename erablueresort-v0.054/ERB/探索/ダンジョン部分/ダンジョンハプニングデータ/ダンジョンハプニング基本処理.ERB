
@ダンジョンハプニング基本処理(選定対象 = -1, 選定イベント = "")
#DIM 選定対象
#DIMS 選定イベント
#DIM 選定用配列, 10
#DIMS 選定用文字列, 100
#DIM 配列番号
#DIM 対象数
#DIM 候補カウント

CALL 口上変数初期化


;対象が設定されてないならランダムで決定
;なおこの変数には隊列じゃなくキャラ番号が入るので注意
IF 選定対象 == -1
	対象数 = 0
	FOR 配列番号, 0, 4
		IF BATTLE_STATE:配列番号:キャラ登録番号 > 0
			選定用配列:対象数 = 配列番号
			対象数 += 1
		ENDIF
	NEXT
	FOR 配列番号, 10, 14
		IF BATTLE_STATE:配列番号:キャラ登録番号 > 0
			選定用配列:対象数 = 配列番号
			対象数 += 1
		ENDIF
	NEXT
	選定対象 = BATTLE_STATE:(選定用配列:(RAND:対象数)):キャラ登録番号
ELSE
	;指定した対象が隊列にいないなら一旦戻す
	;ダンジョンマス側で分岐に使うことを推奨
	SIF GROUPMATCH(選定対象, BATTLE_STATE:0:キャラ登録番号, BATTLE_STATE:1:キャラ登録番号, BATTLE_STATE:2:キャラ登録番号, BATTLE_STATE:3:キャラ登録番号, BATTLE_STATE:10:キャラ登録番号, BATTLE_STATE:11:キャラ登録番号, BATTLE_STATE:12:キャラ登録番号, BATTLE_STATE:13:キャラ登録番号) == 0
		RETURN 0
ENDIF

;イベントが設定されていない場合、ランダムで条件を満たしているものを採択
;設定されているイベントは条件を無視して発動するので注意
IF 選定イベント == ""
	VARSET RESULTS
	VARSET 選定用文字列
	候補カウント = ENUMFUNCBEGINSWITH("ダンジョンハプニング_ABLE_")
	対象数 = 0
	FOR 配列番号, 0, 候補カウント
		CALLFORM %RESULTS:配列番号%(選定対象)
		IF RESULT
			;関数名からキー部分だけを引っこ抜いて登録
			選定用文字列:対象数 = %REPLACE(RESULTS:配列番号, "ダンジョンハプニング_ABLE_", "")%
			対象数 += 1
		ENDIF
	NEXT
	IF 対象数 == 0
		;どのイベントも起こらないようなら一旦戻す
		KSTR:(K++) = 没有什么特别的事情发生……
		CALL メッセージ欄表示用関数()
		RETURN 0
	ENDIF
	選定イベント = %選定用文字列:(RAND:対象数)%
ENDIF

探索中顔グラキー:(キャラ隊列検索(選定対象)) = ハプニング時
CALL 探索用顔グラフィック生成

LOCAL = 1
CALLFORM ダンジョンハプニング_%選定イベント%(選定対象)
IF RESULT == -1
	;何も起こらなかった場合は発生済みにしない
	LOCAL = 0
ENDIF
CALL ダンジョン内_SOURCE_CHECK(選定対象)

IF BATTLE_STATE:(キャラ隊列検索(選定対象)):奥義ゲージ >= 100
	探索中顔グラキー:(キャラ隊列検索(選定対象)) = 奥義ゲージMAX
ELSE
	探索中顔グラキー:(キャラ隊列検索(選定対象)) = 通常時
ENDIF
CALL 探索用顔グラフィック生成

RETURN LOCAL
