;****************************************
;縁結び系の処理に使う特殊関数
;****************************************
;・使い方
;「XXXX」をキャラクター番号に置換し、それぞれの関数に処理を入れる
;「<スタイル名>」を任意のスタイル名に変更する
;****************************************

;--------------------------------------------------
;スタイル変更基礎関数
;--------------------------------------------------
@スタイル変更_XXXX(対象キャラ, 動作モード)
#DIM 対象キャラ
#DIMS 動作モード
;この関数はいくつ別スタイル作ってもキャラ毎に一個
;必須関数、スタイル変更を追加する場合、必ず作成すること

SELECTCASE 動作モード
	CASE "スタイル名取得"
        ;ここは触らない
		VARSET RESULTS
		RESULTS:0 = %NAME:対象キャラ%
		RESULTS:10 = ノーマル

		;RESULTS:Xに名前全体を、RESULTS:X+10にリミテッドや泳装など通称(？)を入れる
        ;例：
		; RESULTS:1 = [強化状態二つ名]テスト太郎
		; RESULTS:11 = 強化スタイル
		RESULTS:1 = <スタイル名>
		RESULTS:11 = <スタイルのカテゴリ>

		;スタイル変更の条件を付けたい場合、RESULTSを条件分岐の中にいれる。
		;以下はキャラの陥落を条件にする場合の条件分岐
		IF 陥落チェック(対象キャラ)
			RESULTS:1 = <スタイル名>
			RESULTS:11 = <スタイルのカテゴリ>
		ENDIF
        
		; 複数スタイルを作りたい場合はRESULTS:2、RESULTS:12のように数字をふやしていく
        
	CASE @"スタイル解説_%NAME:対象キャラ%"
		TSTR:スタイル解説 = 
		TSTR:スタイル解説 += @"■%NAME:対象キャラ%<br>"
		TSTR:スタイル解説 += "<br>"
		TSTR:スタイル解説 += "通常のスタイル。ステータス変動なし。などの説明を記述する<br>"
		TSTR:スタイル解説 += "<br>"
        ;このCALLはそのままで良い
		CALL スタイル奥義アビ表示_汎用文章(対象キャラ, NAME:対象キャラ)
	CASE "スタイル解説_<スタイル名>"
		TSTR:スタイル解説 = 
		TSTR:スタイル解説 += "■<スタイル名><br>"
		TSTR:スタイル解説 += "<br>"
		TSTR:スタイル解説 += "変化したスタイルの説明を記述する。<br>"
		TSTR:スタイル解説 += "素質の変化やステータスの変化などを全部書いておくと親切<br>"
		TSTR:スタイル解説 += "アビ・奥義の変化は下のCALLで表示されるので書かなくてもOK<br>"
		TSTR:スタイル解説 += "<br>"
        ;このCALLはそのままで良い、戦闘アビが変動しない場合は消しても良い
		CALL スタイル奥義アビ表示_汎用文章(対象キャラ, "<スタイル名>")
	CASE "変更後処理"
		;CSTR:対象キャラ:スタイル管理文字列をキーにして処理を実行
		;一人称や二人称、素質の変化などの調教側ステータスの変更を想定
        ;戦闘ステータスは別の関数
		SELECTCASE CSTR:対象キャラ:スタイル管理文字列
			CASE ""
                ;通常時に戻す処理
			CASE "<スタイル名>"
                ;スタイル変更時の処理
		ENDSELECT
ENDSELECT


;--------------------------------------------------
;スタイル変更時、戦闘ステータス変動
;--------------------------------------------------
@スタイルステータス補正_<スタイル二つ名>_<キャラ名>(対象キャラ)
#DIM 対象キャラ
;関数名に[]が使えないため、しょうがなく[]排除時の文字列をキーに
;例えば[強化状態二つ名]テスト太郎というスタイルなら、
;@スタイルステータス補正_強化状態二つ名_テスト太郎　という関数名にすること

;属性の変更、火とか水とか文字を変えるだけでOK
装備ステータス補正保存:対象キャラ:基礎属性変更 = 属性文字列数値変換("風") + 10
;ステータスの変更
装備ステータス補正保存:対象キャラ:攻撃力 += 100

;装備再計算時にこの関数は呼ばれる
;補正の順番は「スタイル＞指輪＞耳飾り＞料理など＞パーティキャラ補正」
;補正可能なステータスは「装備ステータス補正保存.ERD」を参照のこと


;--------------------------------------------------
;スタイル変更時、使用可能アビリティの変動
;--------------------------------------------------
;テンプレート「固有アビリティ_キャラ名.ERB」に記述する
;「@固有アビ_XXXX_任意の文字列(ARGS, キャラ番号)」の上部にある分岐を修正する

; IF スタイル判定関数(キャラ番号, "デフォルト") == 0
; を以下のように修正
; IF スタイル判定関数(キャラ番号, "<スタイル名>") == 0

;こうすることで、そのアビは<スタイル名>になっている時のみ使用可能という意味になる


;--------------------------------------------------
;スタイル変更時、使用可能奥義の変動
;--------------------------------------------------
;奥義はアビのように複数種類を使うことを想定していないため、別関数を呼ぶことを推奨。
;奥義テンプレにある以下の分岐のうち、任意のスタイル名の部分を編集した上で
;奥義テンプレをコピーして作成した関数に貼り付け、中身を記述する。

; IF CSTR:キャラ番号:スタイル管理文字列 == "任意のスタイル名"
; 	CALL 任意のスタイル名固有奥義(ARGS, キャラ番号)
; 	RETURN RESULT
; ENDIF
