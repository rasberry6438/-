

;YYYYを任意のイベント名に変えて使うこと、他との重複不可

@イベント関数_エンディングイベント_YYYY(動作モード, イベント行id)
#DIMS 動作モード
#DIM イベント行id
;イベント行idは通常は使ってないが、該当イベントのDB行にある情報が必要な時に使う
;DBにはフリー変数・フリー文字列を入れる枠を準備しているのでそれを使った場合などにどうぞ

SELECTCASE 動作モード
	CASE "設定取得"
		;エンディング番号をセットする。CH01など、アルファベット2文字と数字の組み合わせで設定すること
		TSTR:コマンド名受渡 = GE01
		;アルファベットは以下の三種
		;CH:Character Endingの略。キャラエンドの意。
		;EX:Extra Character Endingの略。EXキャラエンドの意
		;GE:General Endingの略。汎用エンドの意
		;数字は該当するアルファベットの中で連番にすることが望ましいが、別に連番じゃなくても動く。2桁じゃなくてもいい
		;EX99999とかにしても大丈夫。でも他と被らないように

		;解説文もここで取得
		TSTR:ツールチップ受渡 = 
		TSTR:ツールチップ受渡 += "■エンディングNo.GE01『YYYY』<br>"
		TSTR:ツールチップ受渡 += "<br>"
		TSTR:ツールチップ受渡 += "ここにどんなエンディングかの概要を記述する。<br>"
		TSTR:ツールチップ受渡 += "実行条件やエンディングを見ることによって解放される機能、<br>"
		TSTR:ツールチップ受渡 += "エンド後は現在の周回を継続するか強制的に次にいくのかなどもここに書く<br>"
		TSTR:ツールチップ受渡 += "<br>"
		TSTR:ツールチップ受渡 += "実行条件：◯◯<br>"
		TSTR:ツールチップ受渡 += "解放要素：◯◯<br>"
		TSTR:ツールチップ受渡 += "エンディング視聴後：◯◯<br>"
	CASE "発生条件"
		;リストに表示するための条件
		;一回表示したらその後条件を満たさなくなっても表示したままなので注意
		SIF リゾートランク < 2
			RETURN 0
		;リゾートランク２条件は付けることを強く推奨
		RETURN 1
	CASE "実行条件"
		;リストから実行するための条件
		;満たしてない間は実行ボタンが灰色で表示され、クリック不可
		SIF FLAG:ZP所持量 < 5000
			RETURN 0
		;上の解説部分に書いた実行条件を条件文で記述する
		RETURN 1
	CASE "実処理"
		;なんかルピとかZPとかを減らす場合はここに書く
		FLAG:ZP所持量 -= 5000

		;文章部分はここに記載するよりも別関数に分ける方が見やすいし書きやすいので推奨
		CALL エンディングイベント_シナリオ_YYYY()
		RETURN RESULT
ENDSELECT

@エンディングイベント_シナリオ_YYYY()
DRAWLINE
PRINTL ここにシナリオの中身を書く。
PRINTW 普通の関数なので処理を持ってくれば戦闘することも出来るしイベントうふふを突っ込むことも可能……なはず。
PRINTL 挿絵を表示することとか大体何でも出来る。
PRINTL 
PRINTW 
PRINTW エンディングNo.GE01『YYYY』
PRINTW 

;RETURNを1にすると、強制的に次の周回に移行する
RETURN 0
;特に理由がないならまあ０でもいいんじゃないかな

