;----------------------------------------------------------------------------------
;アビリティテンプレート一覧
;----------------------------------------------------------------------------------
;以下に記載の無いテンプレートが欲しい場合、Discordあるいはしたらばの本スレでバリアント作成者に伝えてもらえば都度作成します
;----------------------------------------------------------------------------------

;----------------------------------------------------------------------------------
;アビ全般に使えるフラグ
;----------------------------------------------------------------------------------
	;アビテンプレート用_行動消費無しフラグ：これを１にすると、行動済み状態にならずもう一度行動出来る
	;構え変更アビなどを想定

	;アビテンプレート用_アビ封印用フラグ：これを１にするとアビがグレーアウトして選択出来なくなる
	;使用回数の制限・特定状況でしか使えないアビなどを想定

	;アビテンプレート用_回避フラグ：ダメージ算出時、回避したパターンの時に１になるフラグ
	;これを参照することで、回避された時は追加効果は発動しない、などの設定が可能

	;戦闘中カウント:（隊列番号）:0～9 ：戦闘開始時にリセットされる変数の自由枠。戦闘中なにかをカウントして管理したい時に。
		;戦闘中カウント:（隊列番号）:通常攻撃回数 
		;戦闘中カウント:（隊列番号）:奥義回数 
		;戦闘中カウント:（隊列番号）:与ダメ合計 
		;戦闘中カウント:（隊列番号）:被ダメ合計
		;戦闘中カウント:（隊列番号）:与ヒット数合計
		;戦闘中カウント:（隊列番号）:被ヒット数合計		それぞれ戦闘中でのカウント
	;探索中カウント:（隊列番号）:0～9 ：探索開始時及び終了時にリセットされる変数の自由枠。探索中なにかをカウントして管理したい時に。
	;加算タイミングは戦闘終了時なので、その戦闘中の回数もカウントしたい場合は戦闘中カウントも加算して計算すること。
		;探索中カウント:（隊列番号）:通常攻撃回数 
		;探索中カウント:（隊列番号）:奥義回数 
		;探索中カウント:（隊列番号）:与ダメ合計 
		;探索中カウント:（隊列番号）:被ダメ合計
		;探索中カウント:（隊列番号）:与ヒット数合計
		;探索中カウント:（隊列番号）:被ヒット数合計		それぞれ戦闘中でのカウント
	;探索中全体カウント:0～9：探索開始時及び終了時にリセットされる変数の自由枠。こちらはキャラ個人でカウントする必要がないモノに対して。
		;探索中全体カウント:累積ターン数：探索開始から直前の戦闘終了までの累計ターン数。
		;加算タイミングは戦闘終了時なので、戦闘中のターン数もカウントしたい場合は現在ターン数を加算して計算すること
		;探索中全体カウント:累積勝利数：探索開始から直前の戦闘終了までの累積勝利数。
		;探索中全体カウント:累積逃走数：探索開始から直前の戦闘終了までの累積逃走数。

;----------------------------------------------------------------------------------
;対象の選択関数
;※※※この関数のうちいずれかを呼ばないと、あらゆる効果は発動しないので注意！！！※※※
;----------------------------------------------------------------------------------
	;対象選択時、デフォルトでは「誰に使用しますか？」と文章が出るが、以下の文字列によって変更可能
	;ただし表示領域の都合上、４行まで
	;アビ汎用文字列:選択時メッセージ１ = １行目表示メッセージ
	;アビ汎用文字列:選択時メッセージ２ = ２行目表示メッセージ
	;アビ汎用文字列:選択時メッセージ３ = ３行目表示メッセージ
	;アビ汎用文字列:選択時メッセージ４ = ４行目表示メッセージ
	;ランダムＸ体や、味方全体・敵全体時はそもそも対象選択画面が出ないので表示されない

	;アビ使用時、デフォルトでは「（キャラ名）の（アビ名）！」と文章が出るが、以下の文字列によって変更可能
	;ただし表示領域の都合上、４行まで
	;アビ汎用文字列:実行時メッセージ１ = １行目表示メッセージ
	;アビ汎用文字列:実行時メッセージ２ = ２行目表示メッセージ
	;アビ汎用文字列:実行時メッセージ３ = ３行目表示メッセージ
	;アビ汎用文字列:実行時メッセージ４ = ４行目表示メッセージ
	;実行時メッセージの表示タイミングは「最初の（対象選択系以外の）アビテンプレート関数が呼ばれた時」なので
	;それより前に文字列を設定すること
	;どこに入れればわからない時は固有アビテンプレートを参考にすること

	;アビリティ対象の指定は「対象選択関数」を呼ぶことで行う
	;CALL アビ対象選択テンプレート_自己のみ
	;CALL アビ対象選択テンプレート_敵単体
	;CALL アビ対象選択テンプレート_敵横列
	;CALL アビ対象選択テンプレート_敵縦列

	;ランダムＸ体系は、同じキャラが複数回選ばれることもある
	;ランダムＸ体_重複無し系なら同じキャラが複数回選ばれることはないが、指定した対象数よりも少ない対象数になるパターンがある
	;関数を呼ぶ前にアビ汎用変数:敵対心無視オプション = 1とすると敵対心を無視して全員等確率で選択する
	;CALL アビ対象選択テンプレート_敵ランダムＸ体(対象数)
	;CALL アビ対象選択テンプレート_味方ランダムＸ体(対象数)
	;CALL アビ対象選択テンプレート_敵ランダムＸ体_重複無し(対象数)
	;CALL アビ対象選択テンプレート_味方ランダムＸ体_重複無し(対象数)

	;最大/最小ステータス系は、敵/味方の中で指定したステータスが最大/最小のキャラが１体選ばれる
	;CALL アビ対象選択テンプレート_敵単体_最大ステータス(ステータス名)
	;CALL アビ対象選択テンプレート_敵単体_最大ＨＰ
	;CALL アビ対象選択テンプレート_敵単体_最小ステータス(ステータス名)
	;CALL アビ対象選択テンプレート_敵単体_最小ＨＰ
	;CALL アビ対象選択テンプレート_味方単体_最大ステータス(ステータス名)
	;CALL アビ対象選択テンプレート_味方単体_最小ＨＰ
	;CALL アビ対象選択テンプレート_味方単体_最小ステータス(ステータス名)
	;CALL アビ対象選択テンプレート_味方単体_最大ＨＰ

	;ここより上の対象選択関数はHPが残っている生者のみを対象とする
	;ここより下の対象選択関数は生者のみ・死者のみ・生者死者関係なしを選択可能
	;自己以外なら、自分が対象に含まれない
	;死者のみ・自己以外は性質上、対象がいないパターンがあるため必ず例外処理を組み込むこと
	;対象がいない場合は-1が返ってくる

	;CALL アビ対象選択テンプレート_味方単体
	;CALL アビ対象選択テンプレート_味方単体_生者のみ
	;CALL アビ対象選択テンプレート_味方単体_生者のみ_自己以外
	;CALL アビ対象選択テンプレート_味方単体_死者のみ
	;CALL アビ対象選択テンプレート_味方全体
	;CALL アビ対象選択テンプレート_味方全体_生者のみ
	;CALL アビ対象選択テンプレート_味方単体_生者のみ_自己以外
	;CALL アビ対象選択テンプレート_味方全体_死者のみ
	;CALL アビ対象選択テンプレート_敵全体
	;CALL アビ対象選択テンプレート_敵全体_生者のみ
	;CALL アビ対象選択テンプレート_敵全体_死者のみ

	;以下の関数は、特定デバフが掛かっている者のみを対象とする
	;性質上、対象がいないパターンがあるため必ず例外処理を組み込むこと
	;対象がいない場合は-1が返ってくる

	;CALL アビ対象選択テンプレート_味方ランダム１体_特定デバフ(デバフ種類)
	;CALL アビ対象選択テンプレート_味方全体_特定デバフ(デバフ種類)

	;その他、位置固定やなんらかの条件で敵を直接指定したい場合、下記の関数を使用する
	;（0～3の味方の配置番号、または10～19の敵の配置番号を指定しなければならない）
	;敵味方が配置されていない場合があるので、指定前に確認すること

	;CALL アビ対象選択テンプレート_指定(配置番号)


	;また、これらのテンプレートで指定した対象は アビテンプレート用_対象保存 配列に入っている（0～29の30体まで）
	;つまり単体攻撃の時は アビテンプレート用_対象保存:0 に攻撃の対象が入る。5体攻撃の時は アビテンプレート用_対象保存:0～4
	;対象を記録したい場合、この配列から対象の隊列番号を取得すること

;----------------------------------------------------------------------------------
;敵味方の隊列配置（隊列位置直接指定）
;----------------------------------------------------------------------------------
	;上記、「アビ対象選択テンプレート_指定()」などで使用できる敵味方の隊列配置とその番号について

	;通常の敵味方の配置はこうなっている
	;（もちろん、そこに敵味方が配置されておらず、歯抜けになっていることはあり得る）
	;==========================================
	;　敵側　　　　味方側
	;　10　11　　　　０
	;　12　13　　　　１
	;　14　15　　　　２
	;　16　17　　　　３
	;　18　19　　　　
	;==========================================
	;味方を指定する場合、「0～3」、敵を指定する場合、「10～19」を指定し
	;＞CALL アビ対象選択テンプレート_指定(対象にしたい配置番号)
	;……を呼び出す。

	;ボスは配置された場所から３マスを占有する。
	;例えば12に配置された場合、下記のように13.14.15を占有し、敵がいないという処理になる。
	;（そのため、「アビ対象選択テンプレート_指定()」で指定するときは、13、14、15は狙っても「そこに誰もいない」判定になる）
	;==========================================
	;　敵側　　　　味方側
	;　10　11　　　　０
	;　12　12　　　　１
	;　12　12　　　　２
	;　16　17　　　　３
	;　18　19　　　　
	;==========================================
	;ボスは、
	;・10（11.12.13）
	;・12（13.14.15）
	;・14（15.16.17）
	;・16（17.18.19）
	;……の４か所にのみ配置されうる
	;（18には配置されない。スペースがたりないため）
	;（10と12など、重なる場所には配置されない。なので、ボスは２体までしか出現できず、出るにしても「10と14」「10と16」「12と16」という組み合わせになる）

	;FUNCTION関数「隊列算出_味方(対象キャラ)」を使うと、そのキャラが隊列のどこにいるか（あるいは、どこにもいないか）を拾うことができる。

;----------------------------------------------------------------------------------
;敵味方の攻撃対象保存
;----------------------------------------------------------------------------------
	;「CALL アビ対象選択テンプレート_敵全体」や「CALL アビ対象選択テンプレート_敵単体」を呼び出したあと、
	;「アビテンプレート用_対象保存:0～30」に、攻撃対象にした配置番号が保存される。
	;対象保存:0から始まり、複数対象であるなら、対象保存:1、対象保存:2……とアビリティを使用することになる。

	;==========================================
	;　CALL アビ対象選択テンプレート_敵単体
	;　選んだ敵 = アビテンプレート用_対象保存:0
	;　SIF 選んだ敵 == 10
	;　　KSTR(K++) = 10番の敵を攻撃しようとしている
	;==========================================
	;　CALL アビ対象選択テンプレート_敵ランダムＸ体(3)
	;　最初に殴った敵 = アビテンプレート用_対象保存:0
	;　SIF 最初に殴った敵 == 10
	;　　KSTR(K++) = 最初に攻撃しようとしている敵が10番に配置されている
	;　SIF アビテンプレート用_対象保存:1 % 2 == 0
	;　　KSTR(K++) = ２番目に攻撃しようとしている敵が、左側の列に配置されている
	;==========================================


;----------------------------------------------------------------------------------
;敵味方のステータス確認
;----------------------------------------------------------------------------------
	;キャラ番号、または配置番号を使用し、キャラクターの能力値（Lv、攻撃力、行動速度、属性など）を確認できる。

	;味方のステータスを確認したい場合、下記の二種がある。
	;・基礎BATTLE_STATE:キャラ番号:能力名
	;　「キャラ番号」番のキャラクターの能力を確認できる。
	;　これは編成しているかとは関係なく、ABLやTALENTなどと同様、全員が持っているもの。
	;　アビリティの発展（Lvによる強化）を確認するためなどに使用できる。
	;　他の、特定のキャラのレベルに応じて強化などもこちらの変数を使用できる。

	;・BATTLE_STATE:配置番号:能力名
	;　隊列の「配置番号」番のキャラクターの能力を確認できる。
	;　これはダンジョン内での計算用に一時的に保持している装備込みの数値。
	;　
	;　＞IF BATTLE_STATE:配置番号:キャラ登録番号 >= 1
	;　　このように記述することで、「配置番号」番にキャラが存在しているかを確認できる。

	;・敵BATTLE_STATE:敵の番号:能力名
	;　「敵の番号」番のキャラクターの能力（Lv、攻撃力、属性など）を確認できる。
	;　これはダンジョン内での計算用に一時的に保持している装備込みの数値。
	;　
	;　この「敵の番号」は、配置位置から＊＊＊10を引いたもの＊＊＊である。
	;　（10番に配置されているなら0番、11番なら1番、12番なら2番……19番なら9番）
	;　（「配置番号 - 10」と記述してもよい）
	;　
	;　＞IF 敵BATTLE_STATE_STR:敵の番号:エネミー名 == ""
	;　　このように記述することで、「配置番号」番にキャラが存在しているかを確認できる。
	;　＞IF 敵BATTLE_STATE_STR:(配置番号 - 10):エネミー名 == ""
	;　　「敵の番号」はこう記述してもよい（実例）。

	;BATTLE_STATE系で指定できる能力値は、「バフ、デバフに使用できる能力値一覧」も参考に。


;----------------------------------------------------------------------------------
;ダメージを与える効果
;----------------------------------------------------------------------------------
	;関数を呼ぶ前に、アビ汎用変数にアビリティの性能を入れておく

	;アビ汎用変数:効果割合 = ダメージを算出する時、基準となるステータスを何％使用するか
	;アビ汎用変数:効果量 = ダメージを算出する時、固定値でダメージを追加する
	;アビ汎用変数:数値乱数幅 = ダメージの乱数幅を％で設定する。数値が大きいほどダメージにブレが出る。未設定時は5
	;アビ汎用文字列:攻撃側使用能力値 = ダメージ算出の攻撃側基準ステータスを設定する。未設定時は攻撃力
		;この文字列に、例えば「攻撃対象_行動速度」とすると攻撃を受ける側の行動速度に依存するようになる
		;割合ダメージなどの処理を行う時を想定
	;アビ汎用文字列:防御側使用能力値 = ダメージ算出の防御側基準ステータスを設定する。未設定時は防御力
	;アビ汎用変数:命中率補正値 = 命中率を補正する。キャラの命中率とは加算関係。
	;アビ汎用変数:回避率補正値 = 回避率を補正する。キャラの回避率とは加算関係。
	;アビ汎用変数:クリティカル率補正値 = クリティカル率を補正する。キャラのクリティカル率とは加算関係。
	;アビ汎用変数:クリティカルダメージ補正値 = クリティカルダメージを補正する。キャラのクリティカルダメージとは加算関係。

	;アビ汎用変数:かばう無視オプション = ビット0を1にすると単体かばうを無視、ビット1を1にすると全体かばうを無視
	;			味方全体・敵全体対象時は自動で単体かばうは無視する。ダメージ以外の効果はかばう系効果はすべて無視する。

		;CALL アビテンプレート_ダメージ処理_自属性
		;CALL アビテンプレート_ダメージ処理_火属性
		;CALL アビテンプレート_ダメージ処理_水属性
		;CALL アビテンプレート_ダメージ処理_風属性
		;CALL アビテンプレート_ダメージ処理_土属性
		;CALL アビテンプレート_ダメージ処理_光属性
		;CALL アビテンプレート_ダメージ処理_闇属性
		;CALL アビテンプレート_ダメージ処理_無属性

	;以下は通常攻撃を行う効果でのみ使用
	;アビ汎用変数:TA率補正値 = トリプルアタック率を補正する。キャラのTA率とは加算関係。
	;アビ汎用変数:DA率補正値 = ダブルアタック率を補正する。キャラのDA率とは加算関係。
	;			TAが発生した場合は無意味なので、必ずDAにしたいならTA率補正値を-200にすると良い

		;CALL アビテンプレート_通常攻撃処理

;----------------------------------------------------------------------------------
;ＨＰ回復を行う効果
;----------------------------------------------------------------------------------
	;関数を呼ぶ前に、アビ汎用変数にアビリティの性能を入れておく

	;アビ汎用変数:効果割合 = 回復量を算出する時、基準となるステータスを何％使用するか
	;アビ汎用変数:効果量 = 回復量を算出する時、固定値で回復量を追加する
	;アビ汎用変数:数値乱数幅 = 回復量の乱数幅を％で設定する。数値が大きいほど回復量にブレが出る。未設定時は5
	;アビ汎用文字列:回復側使用能力値= 回復量算出の基準ステータスを設定する。未設定時は回復力
		;この文字列に、例えば「回復対象_回復力」とすると回復を受ける側の回復力に依存するようになる
		;最大ＨＰの３０％を回復などの処理を行う時を想定

	;アビ汎用変数:蘇生可能オプション = 0でない時、戦闘不能者のHPを回復可能

		;CALL アビテンプレート_回復処理

	;基本的に回復処理は対象の全員のHPがMAXだとキャンセルして使用前に戻る
	;回復と同時にバフを撒くなど、HP回復が起こらなくても使用したい場合は以下の関数を使う

		;CALL アビテンプレート_回復処理_MAXでも回復


;----------------------------------------------------------------------------------
;ＭＰ回復を行う効果
;----------------------------------------------------------------------------------
	;関数を呼ぶ前に、アビ汎用変数にアビリティの性能を入れておく

	;アビ汎用変数:効果割合 = 回復量を算出する時、基準となるステータスを何％使用するか
	;アビ汎用変数:効果量 = 回復量を算出する時、固定値で回復量を追加する
	;アビ汎用変数:数値乱数幅 = 回復量の乱数幅を％で設定する。数値が大きいほど回復量にブレが出る。未設定時は5
	;アビ汎用文字列:回復側使用能力値= 回復量算出の基準ステータスを設定する。未設定時は回復力
	;効果割合を0にした上で効果量を設定すると固定値で回復できる。

		;CALL アビテンプレート_ＭＰ回復処理

	;基本的に回復処理は対象の全員のMPがMAXだとキャンセルして使用前に戻る
	;回復と同時にバフを撒くなど、MP回復が起こらなくても使用したい場合は引数に0以外を指定すること

;----------------------------------------------------------------------------------
;対象に有利な効果
;----------------------------------------------------------------------------------
;バフ効果のセット
;----------------------------------------------------------------------------------
	;関数を呼ぶ前に、アビ汎用変数にアビリティの性能を入れておく

	;アビ汎用文字列:バフ・デバフ枠 = バフ効果の枠を設定する。これが同じバフは同時に存在出来ない。
	;			Ａ枠のバフ・デバフを表現する時は「攻撃力A」「防御力A」のように記述すること。
	;アビ汎用文字列:バフ・デバフ対象能力 = バフ効果の対象を設定する。
	;			ステータスに存在する能力値（BATTLE_STATE@2.ERDを参照）か、特定の文字列のみ挿入可能。下にある特殊バフ一覧を参照。
	;アビ汎用変数:効果割合 = 能力値バフの場合はステータスに対する割合で上昇量を決定する。（元が０の場合は割合に何を入れても０なので注意）
	;			他のバフの場合、バフによって挙動が変動する。下にある特殊バフ一覧を参照。
	;アビ汎用変数:効果量 = 能力値バフの場合は固定値で上昇量を決定する。
	;			他のバフの場合、バフによって挙動が変動する。下にある特殊バフ一覧を参照。
	;アビ汎用変数:持続ターン = バフが持続するターンを決定する
	;アビ汎用変数:持続回数 = バフが持続する回数を決定する。バフが関係ない行動を取る場合は減少しない
	;アビ汎用変数:持続行動回数 = バフが持続する回数を決定する。バフが関係ない行動を取っても減少する
	;アビ汎用変数:持続被ダメ回数 = バフが持続する被ダメ回数を決定する。TAや複数回攻撃を食らっても、１行動で減る値は１のみ

	;アビ汎用変数:累積上限_割合 = 累積バフを設定する場合の上限値
	;アビ汎用変数:累積上限_固定値 = 累積バフを設定する場合の上限値
	;			これらを設定していない場合、上限が０とみなされて累積バフが発動しないので注意
	;			累積バフの場合、基本的にバフ・デバフ枠は「攻撃力累積」「防御力累積」のように累積枠として設定すること

	;アビ汎用変数:消去不可オプション = アビテンプレート_有利効果_デバフ消去やアビテンプレート_不利効果_バフ消去で消えないように設定可能
	;アビ汎用変数:特殊表示オプション = 1にするとバフ・デバフ確認画面で任意の文字列を表示出来るように
	;			バフ・デバフ特殊表示_（任意のバフ・デバフ枠名）で関数を作らないと何も表示されないので注意
	;			-1にすると非表示になり、バフ消去の対象とならない（バフ一覧で表示されず、矢印も出ない）

		;CALL アビテンプレート_有利効果_バフ効果セット
		;CALL アビテンプレート_有利効果_累積バフ効果セット


;----------------------------------------------------------------------------------
;刻印バフについて
;----------------------------------------------------------------------------------

		;CALL アビテンプレート_刻印追加(追加個数)
		;		累積バフを簡単に作成するための関数。基本的には、付随バフなどのトリガーや使用回数として参照することを目的とする。
		;		相手にかける場合もバフ扱いなので注意。
		;CALL アビテンプレート_刻印減少(減少個数, 属性番号)
		;		アビ汎用文字列:バフ・デバフ対象能力で指定された累積バフを減少させる関数。

	;	下記以外のアビ汎用変数・文字列については無視される。
	;アビ汎用文字列:バフ・デバフ対象能力 = バフ表示名・バフ枠・バフ対象能力の全てにこの値が設定される。
	;			「業火の刻印」「鼓の音」など既存のバフ対象能力と被らない名前が推奨される。
	;アビ汎用変数:効果量 = 設定にかかわらず、現在の刻印の個数に等しくなる。
	;アビ汎用変数:累積上限_固定値 = 累積バフの上限数。設定されていない場合、上限は５とみなされる。
	;アビ汎用変数:持続ターン = 通常のバフと同じ
	;アビ汎用変数:特殊表示オプション = 通常のバフと同じ。1を設定し、@バフ・デバフ特殊表示_（バフ表示名）で表示用の関数を作成することを推奨。
	;アビ汎用変数:消去不可オプション = 設定にかかわらず１，つまり消去不可となる。

	;属性刻印名(属性番号, キャラ番号, 表示)
	;		属性番号に応じて、順に「業火の刻印」「玉水の刻印」「狂風の刻印」「荒土の刻印」「極光の刻印」「幽闇の刻印」「虚無の刻印」を返す式中関数。
	;		属性番号を指定しない場合、キャラ番号の属性に応じた刻印名を返す。
	;		キャラ番号も指定しない場合、ダンジョン時は戦闘行動キャラの、それ以外はTARGETの属性に応じた刻印名を返す。
	;		これらは原作同様、複数キャラで操作できる、効果を持たない刻印としての使用を想定。
	;		表示に1を指定するとHTML_PRINT時に属性ごとの色で表示するような形で返す。2だとKSTRで使用したときに色付きで表示するよう返す。
	;		3だとRESULTに属性ごとのカラーコードを入れたうえで、属性刻印名のみを返す

;----------------------------------------------------------------------------------
;付随バフについて
;----------------------------------------------------------------------------------

		;CALL アビテンプレート_有利効果_付随バフ効果セット("付随先Ａ")
		;		付随先Ａが指定された、非表示・消去不可のバフＢを設定する。
		;		持続ターン・持続回数が独立したバフＢとして設定されるが、付随先Ａに指定したバフまたはデバフが存在しない場合、効果を発揮しない

	;	下記のアビ汎用変数は付随先を指定されたバフに関してのみ有効
	;アビ汎用変数:付随先_隊列設定 = 付随先Ａが存在するか否かを参照する隊列を指定する。
	;			なにも設定しない場合、付随バフＢが付与されたキャラ自身に付随先Ａが存在するか否かを参照する
	;アビ汎用変数:付随割合 = 付随バフＢの効果割合を、（付随先Ａの効果量 x 付随割合）に設定する。付随先Ａの効果量が変動することで付随バフＢの効果割合も変動する。
	;アビ汎用変数:付随量 = 付随バフＢの効果量を、（付随先Ａの効果量 x 付随割合）に設定する。付随先Ａの効果量が変動することで付随バフＢの効果量も変動する。
	;	下記のアビ汎用文字列は、付随先とは別のバフ枠を計算式に組み込みたいときに使用する。
	;		例えば、「キャラAが存在する時だけ、『自身の荒土の刻印の値に応じて防御力を上昇させる』というバフを味方全体に付与したい」というときなどに使用する。
	;アビ汎用文字列:参照先設定 = 付随バフＢの効果量を計算するときに、付随先Ａの効果量ではなくこの文字列で設定したバフ枠の効果量を使用する。
	;	特殊な設定："属性刻印" "付随元属性刻印"
	;			刻印バフにて記載のある、属性刻印の値に応じて効果量が変動する。（属性一致：1～5／非一致：1～3）
	;			"属性刻印"の場合は参照先_隊列設定で設定されたキャラの、"付随元属性刻印"の場合は付随先_隊列設定で設定されたキャラの属性に合致する属性刻印は効果が高い。
	;	特殊な設定："自属性刻印限定"
	;			参照効果枠_対象隊列で設定されたキャラの属性と一致する属性刻印のみに応じて効果量が変動する。
	;アビ汎用文字列:参照先_隊列設定 = 参照先設定で設定されたバフ枠を参照する隊列を指定する。設定しない場合、バフ対象キャラ自身を参照する。

;----------------------------------------------------------------------------------
;刻印バフ・付随バフの使用例
;----------------------------------------------------------------------------------
	;@固有アビ_XX_YY(ARGS, キャラ番号)
	;	～～中略～～
	;CASE "アビ効果"
	;	CALL アビ汎用変数文字列リセット
	;	CALL アビ対象選択テンプレート_味方全体_生者のみ
			;↑バトルメンバーのうち、生存者のみを対象に取る
	;	アビ汎用文字列:バフ・デバフ対象能力 = 精霊の加護
			;↑刻印の表示名を設定
	;	アビ汎用変数:持続ターン = 3
			;↑持続ターンは3ターンである
	;	アビ汎用変数:特殊表示オプション = 1
			;↑詳細を表示する際、「@バフ・デバフ特殊表示_精霊の加護」を呼び出して表示する
	;	CALL アビテンプレート_刻印追加(2)
			;↑一度に2個、刻印を追加する。上限は設定していないので５である

	;	CALL アビ汎用変数文字列リセット
			;↑アビ対象はこの関数ではリセットされないので、同一対象に続けてバフを付与する場合はアビ対象テンプレートの呼出は不要
	;	アビ汎用文字列:バフ・デバフ枠 = 攻撃力_精霊の加護
			;↑付随バフ同士でも、枠が被ると上書きしてしまうので注意
	;	アビ汎用文字列:バフ・デバフ対象能力 = 攻撃力
			;↑変動させる能力値を設定する
	;	アビ汎用変数:付随割合 = 10
			;↑刻印の個数x１０がこのバフの効果割合である
	;	CALL アビテンプレート_有利効果_付随バフ効果セット("精霊の加護")
			;↑「精霊の加護」という名前のバフ・デバフが存在する間だけ有効な非表示・消去不可なバフとして設定する
			; 今回は持続ターンや持続回数を設定していないため、付随先のバフ「精霊の加護」が消滅しても内部的には残り続けるので
			; 何らかの要因で他の「精霊の加護」という名前のバフ・デバフがかかると再度発動する

	;	CALL アビ汎用変数文字列リセット
	;	アビ汎用変数:付随割合 = 10
	;	アビ汎用文字列:バフ・デバフ枠 = 防御力_精霊の加護
	;	アビ汎用文字列:バフ・デバフ対象能力 = 防御力
	;	CALL アビテンプレート_有利効果_付随バフ効果セット("精霊の加護")

	;@バフ・デバフ特殊表示_精霊の加護(隊列番号, バフ・デバフ行数)
	;#DIM 隊列番号
	;#DIM バフ・デバフ行数
	;VARSET LOCAL
	;LOCAL = DT_CELL_GET("戦闘効果データベース", バフ・デバフ行数, "効果量_固定値")
			;↑バフの効果値を検索して代入する。今回は刻印なので付与数が入る
	;LOCAL:1 = DT_CELL_GET("戦闘効果データベース", バフ・デバフ行数, "持続ターン")
			;↑バフの持続ターン数を検索して代入する
	;PRINTFORML 精霊の加護
	;PRINTFORML 攻撃力・防御力が精霊の加護の値ｘ10％上昇した状態（現在：{LOCAL:1 * 10, 2}％）
	;PRINTFORML 持続ターン：{LOCAL:1}

;----------------------------------------------------------------------------------
;特殊バフ一覧
;----------------------------------------------------------------------------------
	;弱体無効：デバフを弾く
	;			効果割合、効果量ともに無意味

	;ディスペルガード：バフ消去効果を弾く
	;			効果割合、効果量ともに無意味

	;追撃：通常攻撃時にダメージ追加
	;			効果割合：与えたダメージに対する％でダメージ追加
	;			効果量：固定値でダメージ追加
	;			通常攻撃以外のダメージでは発動しないし回数も消費しない
	;			対象にバリアが掛かっていると発動しないし回数も消費しない

	;ストレングス：自分のHPが多いほど攻撃力が大きく上昇する状態。乗算の攻撃力バフ
	;			効果割合：与えたダメージに対する％でダメージ追加 （効果割合％ - 効果割合％/3）
	;			効果量：無意味

	;逆境：自分のHPが少なくなるほど攻撃力が大きく上昇する状態。乗算の攻撃力バフ
	;			効果割合：与えたダメージに対する％でダメージ追加 （効果割合％ - 効果割合％/3）
	;			効果量：無意味


	;再生：行動終了時に回復
	;			効果割合：バフが掛かっているキャラの最大ＨＰに対する割合で回復量追加
	;			効果量：固定値で回復量追加

	;高揚：行動終了時に奥義ゲージ増加
	;			効果割合：バフが掛かっているキャラの「現在の奥義ゲージ量」に対する割合で増加量追加
	;			効果量：固定値で増加量追加

	;バリア：ダメージ時、ＨＰの代わりに減少。またバリアがある時、追撃効果は発生しない（回数も消費しない）。
	;			効果割合：無意味
	;			効果量：固定値でバリア量追加

	;ＨＰ転換：ダメージを受ける時、代わりにＨＰを回復する。効果発生時、追撃効果は発生せず（回数も消費しない）、DA/TAも発生しない。
	;			効果割合：受けるはずだったダメージに対する％で回復量増加
	;			効果量：回復上限

	;ＭＰ転換：ダメージを受ける時、代わりにＭＰを回復する。効果発生時、追撃効果は発生せず（回数も消費しない）、DA/TAも発生しない。
	;			効果割合：受けるはずだったダメージに対する％で回復量増加
	;			効果量：回復上限

	;回避反撃：回避に成功した時自属性で攻撃
	;			効果割合：バフが掛かっているキャラの攻撃力に対する割合でダメージ量算出
	;			効果量：固定値でダメージ量追加

	;カウンター：ダメージを受けた時自属性で攻撃
	;			効果割合：バフが掛かっているキャラの攻撃力に対する割合でダメージ量算出
	;			効果量：固定値でダメージ量追加

	;単体かばう：全体攻撃ではなく、かばう無視でない攻撃をかばう
	;			効果割合、効果量ともに無意味

	;全体かばう：かばう無視でない攻撃をかばう
	;			効果割合、効果量ともに無意味

	;反射：自身を対象とした攻撃アビリティを行動キャラに返す
	;			効果割合、効果量ともに無意味

	;与ダメージ：与えるダメージを増加補正する
	;			効果割合：バフが掛かっているキャラが与えるダメージに対する割合で補正
	;			効果量：固定値でダメージ量補正
	;			処理順は与ダメージ＞被ダメージ＞ダメージ補正_(ダメージ種類)

	;被ダメージ：受けるダメージを減少補正する
	;			効果割合：バフが掛かっているキャラが受けたダメージに対する割合で補正
	;			効果量：固定値でダメージ量補正
	;			効果割合が100％を超えた時、効果量は0に固定される（＝100％カットは必ずダメージ０になる）
	;			処理順は与ダメージ＞被ダメージ＞ダメージ補正_(ダメージ種類)

	;ダメージ補正_(ダメージ種類)：特定のダメージ種類によって与えるダメージを増加補正する
	;			たとえば「ダメージ補正_通常攻撃ダメージ」とすれば通常攻撃によるダメージを補正できる
	;			通常使用できるのは「ダメージ補正_通常攻撃ダメージ」「ダメージ補正_アビリティダメージ」「ダメージ補正_奥義ダメージ」「ダメージ補正_チェンバダメージ」の4つ
	;			効果割合：バフが掛かっているキャラが与えるダメージに対する割合で補正
	;			効果量：固定値でダメージ量補正
	;			処理順は与ダメージ＞被ダメージ＞ダメージ補正_(ダメージ種類)

	;連続攻撃率：DA率とTA率を上昇補正する
	;			効果割合：無意味
	;			効果量：固定値でDA/TA率補正

	;全強化：全ての属性攻撃威力を上昇補正する
	;			効果割合：無意味
	;			効果量：固定値で属性強化補正

	;全耐性：全ての属性耐性を上昇補正する
	;			効果割合：無意味
	;			効果量：固定値で属性耐性補正

	;状態異常耐性_(デバフ名)
	;			特定のデバフに対してのみ、弱体耐性を上昇補正する
	;			たとえば「状態異常耐性_毒」とすれば、毒デバフを受けた時の成功率を下げられる
	;			効果割合：無意味
	;			効果量：固定値で弱体耐性補正

	;再行動：ターンの行動後、さらに行動できる
	;			効果割合：無意味
	;			効果量：行動の追加回数

	;奥義再発動：奥義発動時、その効果をもう一度発動する
	;			効果割合、効果量ともに無意味

	;ガッツ：瀕死に陥る大ダメージを受けてもＨＰ1で耐える。
	;			効果割合：効果割合：無意味
	;			効果量：効果割合：無意味

	;自動復活：戦闘不能時、自動的に復活する
	;			効果割合：復活時のＨＰを最大ＨＰの割合で決定する
	;			効果量：復活時のＨＰに固定値で追加する

	;ブレイクアサシン：対象のCTが0の時、与ダメが2.5倍になる
	;			効果割合、効果量ともに無意味

	;与回復量：与える回復量を増加補正する
	;			効果割合：バフが掛かっているキャラが与える回復量に対する割合で補正
	;			効果量：固定値で回復量補正

	;被回復量：受ける回復量を増加補正する
	;			効果割合：バフが掛かっているキャラが受けた回復量に対する割合で補正
	;			効果量：固定値で回復量補正
	;			効果割合が100％を超えた時、効果量は0に固定される（＝与/被回復量100％カットは必ず回復量０になる）
	;			処理順は与回復量バフ＞与回復量デバフ＞被回復量バフ＞被回復量デバフ

	;特殊反応_被ダメ時
	;特殊反応_回避時
	;特殊反応_被タゲ時
	;特殊反応_戦闘不能時
	;			それぞれ、該当するタイミングで任意の関数を呼ぶことが出来る
	;			関数名は「@特殊反応_被ダメ時(あるいは回避時、被タゲ時、戦闘不能時)_(バフ枠で指定した文字列)」に統一のこと
	;			たとえば回避時に発動する特殊効果Aの処理を書きたい場合、バフ枠に指定する文字列は「特殊効果A」、関数名は「@特殊反応_回避時_特殊効果A」となる
	;			被ダメ回数、回避回数、被タゲ回数は引数で受け渡し

;----------------------------------------------------------------------------------
;奥義ゲージ関係
;----------------------------------------------------------------------------------
	;関数を呼ぶ前に、アビ汎用変数にアビリティの性能を入れておく
	;敵に奥義ゲージは存在しないので味方対象でしか効果を発揮しない

	;アビ汎用変数:効果割合 = 対象の「現在の奥義ゲージ量」の割合で上昇量を決定する
	;アビ汎用変数:効果量 = 固定値で奥義ゲージ量の上昇量を追加する

		;CALL アビテンプレート_有利効果_奥義ゲージUP

	;ウェポンバーストはアビ汎用変数に一切関係せず、対象の奥義ゲージを100％にする。
	;100％以上ゲージがある場合は効果なし

		;CALL アビテンプレート_有利効果_ウェポンバースト

;----------------------------------------------------------------------------------
;メンバー交代
;----------------------------------------------------------------------------------
	;対象にした１人をサブメンバーと交代する
	;対象が複数の場合でも先頭の１人にしか効果を発揮しない
	;また、複数回呼んでも最初の１回しか交代が発生しない
	;	≒１行動で交代できるのは１人のみ
	;アビ汎用文字列:適用範囲 = 味方全体 とすると、任意のメインメンバー１人とサブメンバーを交代できる

		;CALL アビテンプレート_有利効果_交代

;----------------------------------------------------------------------------------
;デバフ消去
;----------------------------------------------------------------------------------
	;デバフ消去はアビ汎用変数に一切関係せず、デバフを一つ消去する。
	;複数消したい場合は複数回呼ぶこと
	;消去枠を指定することで、任意のデバフを消すことも可能

		;CALL アビテンプレート_有利効果_デバフ消去()
		;CALL アビテンプレート_有利効果_デバフ消去(消去枠)

;----------------------------------------------------------------------------------
;対象に不利な効果
;----------------------------------------------------------------------------------
;デバフ効果のセット
;----------------------------------------------------------------------------------
	;関数を呼ぶ前に、アビ汎用変数にアビリティの性能を入れておく

	;アビ汎用文字列:バフ・デバフ枠 = デバフ効果の枠を設定する。これが同じデバフは同時に存在出来ない。
	;アビ汎用文字列:バフ・デバフ対象能力 = デバフ効果の対象を設定する。
	;			ステータスに存在する能力値（BATTLE_STATE@2.ERDを参照）か、特定の文字列のみ挿入可能。下にある特殊デバフ一覧を参照。
	;アビ汎用変数:効果割合 = 能力値デバフの場合はステータスに対する割合で減少量を決定する。（元が０の場合は割合に何を入れても０なので注意）
	;			基本的にステータスの半分までしか下がらない。
	;			他のデバフの場合、デバフによって挙動が変動する。下にある特殊デバフ一覧を参照。
	;アビ汎用変数:効果量 = 能力値デバフの場合は固定値で減少量を決定する。
	;			基本的にステータスの半分までしか下がらない。
	;			他のデバフの場合、デバフによって挙動が変動する。下にある特殊デバフ一覧を参照。
	;アビ汎用変数:持続ターン = デバフが持続するターンを決定する
	;アビ汎用変数:持続回数 = デバフが持続する回数を決定する。デバフが関係ない行動を取る場合は減少しない
	;アビ汎用変数:持続行動回数 = デバフが持続する回数を決定する。デバフが関係ない行動を取っても減少する
	;アビ汎用変数:持続被ダメ回数 = デバフが持続する被ダメ回数を決定する。TAや複数回攻撃を食らっても、１行動で減る値は１のみ

	;アビ汎用変数:累積上限_割合 = 累積デバフを設定する場合の上限値
	;アビ汎用変数:累積上限_固定値 = 累積デバフを設定する場合の上限値
	;			これらを設定していない場合、上限が０とみなされて累積デバフが発動しないので注意
	;			累積デバフの場合、基本的にバフ・デバフ枠は「攻撃力累積」「防御力累積」のように累積枠として設定すること

	;アビ汎用変数:基礎成功確率 = デバフが成功する確率。0％～100％

	;アビ汎用変数:消去不可オプション = アビテンプレート_有利効果_デバフ消去やアビテンプレート_不利効果_バフ消去で消えないように設定可能
	;アビ汎用変数:弱体耐性貫通オプション = デバフが弱体無効バフを貫通するようになる。弱体無効バフの回数を消費させない
	;アビ汎用変数:特殊表示オプション = 1にするとバフ・デバフ確認画面で任意の文字列を表示出来るように
	;			バフ・デバフ特殊表示_（任意のバフ・デバフ枠名）で関数を作らないと何も表示されないので注意
	;			-1にすると非表示になる（バフ一覧で表示されず、矢印も出ない）

		;CALL アビテンプレート_不利効果_デバフ効果セット
		;CALL アビテンプレート_不利効果_累積デバフ効果セット

;----------------------------------------------------------------------------------
;付随デバフについて
;----------------------------------------------------------------------------------

		;CALL アビテンプレート_不利効果_付随デバフ効果セット("付随先Ａ")
		;		付随先Ａが指定された、非表示・消去不可のデバフＢを設定する。
		;		持続ターン・持続回数が独立したデバフＢとして設定されるが、付随先Ａに指定したバフまたはデバフが存在しない場合、効果を発揮しない

	;	下記のアビ汎用変数は付随先を指定されたバフに関してのみ有効
	;アビ汎用変数:付随先_隊列設定 = 付随先Ａが存在するか否かを参照する隊列を指定する。
	;			なにも設定しない場合、付随デバフＢが付与されたキャラ自身に付随先Ａが存在するか否かを参照する
	;アビ汎用変数:付随割合 = 付随デバフＢの効果割合を、（付随先Ａの効果量 x 付随割合）に設定する。付随先Ａの効果量が変動することで付随デバフＢの効果割合も変動する。
	;アビ汎用変数:付随量 = 付随デバフＢの効果量を、（付随先Ａの効果量 x 付随割合）に設定する。付随先Ａの効果量が変動することで付随デバフＢの効果量も変動する。

;----------------------------------------------------------------------------------
;特殊デバフ一覧
;----------------------------------------------------------------------------------
	;魅了
	;麻痺
	;睡眠
	;封印
	;			一定確率で行動がスキップされる。行動後効果は発動する（再生や毒など）
	;			効果割合：行動不能になる確率
	;			効果量：効果なし

	;混乱：行動がランダムな味方または敵１体への無属性攻撃になる。
	;			効果割合、効果量：効果なし

	;毒
	;火傷
	;氷結
	;自傷
	;			行動終了後に属性のないダメージを受ける
	;			効果割合：バフが掛かっているキャラの最大ＨＰに対する割合でダメージ決定
	;			効果量：固定値でダメージ追加

	;消耗
	;ＭＰ自傷
	;			行動終了後にＭＰが減少する
	;			効果割合：バフが掛かっているキャラの最大ＭＰに対する割合で減少量決定
	;			効果量：固定値で減少量追加

	;暗闇：通常攻撃が失敗することがある。通常攻撃以外には無意味。
	;			効果割合：攻撃が失敗になる確率
	;			効果量：効果なし

	;呪い：ＨＰを回復するとき、代わりにダメージを受ける
	;			効果割合：回復するはずだったＨＰに対する％でダメージ量増加
	;			効果量：ダメージ上限

	;強圧：ＨＰを回復することができない
	;			効果割合、効果量：効果なし

	;恐怖：通常攻撃や再生・高揚による奥義ゲージ増加/チャージターン増加が発生しない。特殊行動による増加は発生する
	;			効果割合、効果量：効果なし

	;連続攻撃率：DA率とTA率を下降補正する
	;			効果割合：効果なし
	;			効果量：固定値でDA/TA率補正

	;全強化：全ての属性攻撃威力を下降補正する
	;			効果割合：効果なし
	;			効果量：固定値で属性強化補正

	;全耐性：全ての属性耐性を下降補正する
	;			効果割合：効果なし
	;			効果量：固定値で属性耐性補正

	;最大ＣＴ増加：最大チャージターンが増加する。
	;			効果割合：効果なし
	;			効果量：増加チャージターン数

	;与ダメージ：与えるダメージを減少補正する
	;			効果割合：デバフが掛かっているキャラが与えるダメージに対する割合で補正
	;			効果量：固定値でダメージ量補正
	;			効果割合が100％を超えた時、効果量は0に固定される（＝100％与ダメ減少は必ずダメージ０になる）
	;			処理順は与ダメージ＞被ダメージ＞ダメージ補正_(ダメージ種類)

	;被ダメージ：受けるダメージを増加補正する
	;			効果割合：デバフが掛かっているキャラが受けたダメージに対する割合で補正
	;			効果量：固定値でダメージ量補正
	;			処理順は与ダメージ＞被ダメージ＞ダメージ補正_(ダメージ種類)

	;与回復量：与える回復量を減少補正する
	;			効果割合：デバフが掛かっているキャラが与える回復量に対する割合で補正
	;			効果量：固定値で回復量補正

	;被回復量：受ける回復量を減少補正する
	;			効果割合：デバフが掛かっているキャラが受けた回復量に対する割合で補正
	;			効果量：固定値で回復量補正
	;			効果割合が100％を超えた時、効果量は0に固定される（＝与/被回復量100％カットは必ず回復量０になる）
	;			処理順は与回復量バフ＞与回復量デバフ＞被回復量バフ＞被回復量デバフ

;----------------------------------------------------------------------------------
;チャージターン減少
;----------------------------------------------------------------------------------
	;関数を呼ぶ前に、アビ汎用変数にアビリティの性能を入れておく
	;味方にチャージターンは存在しないので敵対象でしか効果を発揮しない。たぶん味方を対象にするとエラー落ちする

	;アビ汎用変数:効果割合 = 効果なし
	;アビ汎用変数:効果量 = いくつチャージターンを減少するか

	;アビ汎用変数:基礎成功確率 = チャージターン減少が成功する確率。0％～100％

		;CALL アビテンプレート_不利効果_スロウ

;----------------------------------------------------------------------------------
;バフ消去
;----------------------------------------------------------------------------------
	;バフ消去はアビ汎用変数に一切関係せず、バフを一つ消去する。
	;複数消したい場合は複数回呼ぶこと
	;消去枠の名称を指定することで、任意のバフを消すことも可能

		;CALL アビテンプレート_不利効果_バフ消去()
		;CALL アビテンプレート_不利効果_バフ消去(消去枠)

;----------------------------------------------------------------------------------
;奥義ゲージDOWN
;----------------------------------------------------------------------------------
	;奥義ゲージを直接減少させる。
	;アビ汎用変数:効果割合 = 現在のゲージ量に対する減少割合
	;アビ汎用変数:効果量 = 減少量固定値

		;CALL アビテンプレート_不利効果_奥義ゲージDOWN

;----------------------------------------------------------------------------------
;ドロップ率UP
;----------------------------------------------------------------------------------
	;対象にドロップ率UP効果を与える
	;複数付けたい場合は複数回呼ぶこと
	;成功率を設定するとその成功率で、設定しない場合は現在のドロップ率UPレベルに応じて成功失敗が決まる

		;CALL アビテンプレート_不利効果_トレハン

;----------------------------------------------------------------------------------
;即死
;----------------------------------------------------------------------------------
	;対象を即死させる
	;エネミーにボスフラグが付いていると効かない
	;成功率を設定するとその成功率で、設定しない場合は100％効いてしまうので「アビ汎用変数:基礎成功確率」は設定すること

		;CALL アビテンプレート_不利効果_即死

;----------------------------------------------------------------------------------
;テンション
;----------------------------------------------------------------------------------
	;攻撃力が上昇した状態。Lvが高い（Lv1＝10％, Lv2＝30％, Lv3＝60％, Lv4＝100％）ほど効果量が高い。乗算の攻撃力バフ
	;アビ汎用変数:効果割合：無意味
	;アビ汎用変数:効果量：固定値でダメージ追加
	;効果枠と対象能力は常にテンション。
	;対象キャラにテンションが付与されてない時は１～４までの効果が付与効果量に応じて付与され。（4＝5％, 3＝15％, 2＝30％, 1＝50％）
	;既にテンションが付与されてる場合、+1効果量

		;CALL アビテンプレート_有利効果_テンション	
		
;----------------------------------------------------------------------------------
;便利な関数
;----------------------------------------------------------------------------------
;CALL バフ込み数値算出(対象能力, 対象キャラ, 補正前数値)
;----------------------------------------------------------------------------------
	;バフ・デバフの回数を消費せずに補正後数値だけを取り出す関数
	;対象キャラは省略可能。省略すると戦闘行動キャラが入る
	;補正前数値は与ダメージや被ダメージなどのダメージ関連バフ・デバフでのみ使用

;----------------------------------------------------------------------------------
;CALL バフ番号取得(対象バフ, 対象キャラ)
;CALL デバフ番号取得(対象デバフ, 対象キャラ)
;----------------------------------------------------------------------------------
	;単純にバフ・デバフが存在するかどうかだけを見るFUNCTION関数、こちらは対象能力を見る（※攻撃力バフや行動速度バフを見る）
	;対象キャラは省略可能。省略すると戦闘行動対象が入る
	;存在するならデータベースの行数(0行目から数える)を、しないなら-1が帰ってくる

;----------------------------------------------------------------------------------
;CALL バフ番号取得_枠(対象バフ, 対象キャラ)
;CALL デバフ番号取得_枠(対象デバフ, 対象キャラ)
;----------------------------------------------------------------------------------
	;単純にバフ・デバフが存在するかどうかだけを見るFUNCTION関数、こちらは枠を見る（※「攻撃力A」や「竜吟虎嘯」といったものを見る）
	;対象キャラは省略可能。省略すると戦闘行動対象が入る
	;存在するならデータベースの行数(0行目から数える)を、しないなら-1が帰ってくる

;----------------------------------------------------------------------------------
;CALL バフ存在判定(対象バフ, 対象キャラ)
;CALL デバフ存在判定(対象デバフ, 対象キャラ)
;----------------------------------------------------------------------------------
	;単純にバフ・デバフが存在するかどうか（対象にしたバフデバフを得ているキャラがいるかどうか）だけを見るFUNCTION関数
	;対象キャラは省略可能。省略すると戦闘行動対象が入る
	;存在するなら１が、しないなら０が返ってくる
	;（上記「バフ番号取得」とほぼ同様だが返り値のみ違う）

;----------------------------------------------------------------------------------
;CALL バフ所持者検索(対象バフ)
;CALL デバフ所持者検索(対象バフ)
;----------------------------------------------------------------------------------
	;対象バフで指定したバフを持っている人数を返すFUNCTION関数、こちらは対象能力を見る
	;所持しているキャラがいるならその所持者の人数を、所持者がいないならゼロを返す

;----------------------------------------------------------------------------------
;CALL バフ所持者検索_枠(対象バフ)
;CALL デバフ所持者検索_枠(対象バフ)
;----------------------------------------------------------------------------------
	;対象バフで指定したバフを持っている人数を返すFUNCTION関数、こちらは枠を見る
	;所持しているキャラがいるならその所持者の人数を、所持者がいないならゼロを返す

;----------------------------------------------------------------------------------
;強化存在判定(判定隊列)
;強化数算出(判定隊列, 非表示分カウント = 0)
;弱体存在判定(判定隊列)
;弱体数算出(判定隊列, 非表示分カウント = 0)
;----------------------------------------------------------------------------------
	;対象とした隊列位置にいるキャラクターのバフ・デバフを確認する
	;「バフを持っているか」（持っていれば１、持っていなければゼロを返す）
	;「バフを何個持っているか」（持っていればその数、持っていなければゼロを返す）
	;「デバフを持っているか」（持っていれば１、持っていなければゼロを返す）
	;「デバフを何個持っているか」（持っていればその数、持っていなければゼロを返す）
	;非表示分カウントフラグに１を渡した場合、非表示フラグの立った、いわば「隠しバフ」についても数えるようになる


;----------------------------------------------------------------------------------
;キャラNO生存_存在判定(対象キャラNO)
;----------------------------------------------------------------------------------
	;特定のNOのキャラが生存し、隊列内にいるかを判定する
	;ただし「あなた」のゼロ番は指定不可（ゼロが返ってくる）
	;存在し生存しているなら１が、そうでないなら０が返ってくる

;----------------------------------------------------------------------------------
;CALL アビ汎用変数文字列リセット
;----------------------------------------------------------------------------------
	;アビ汎用変数、アビ汎用文字列を全部リセットする関数。対象はそのまま維持される
	;複数効果を持つアビリティなどを実装する際、合間に入れておくと思わぬ数値ミスを防げるのでオススメ

;----------------------------------------------------------------------------------
;バフ、デバフに使用できる能力値一覧
;----------------------------------------------------------------------------------
	;Lv, 最大ＨＰ, ＨＰ, 最大ＭＰ, ＭＰ, 攻撃力, 防御力, 回復力, 行動速度, DA率, TA率
	;ゲージ上昇効率, ゲージ最大値, 命中率, 回避率, 属性, 得意武器, クリティカル率, クリティカルダメージ率
	;敵対心, 弱体成功率, 弱体耐性
	;火耐性, 水耐性, 風耐性, 土耐性, 光耐性, 闇耐性, 無耐性
	;火強化, 水強化, 風強化, 土強化, 光強化, 闇強化, 無強化

