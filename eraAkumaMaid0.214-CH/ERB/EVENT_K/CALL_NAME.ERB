;--------------------------------------------------
;下で長々と記述している人称管理関数@CNAMEのTARGET以外も指定できる版
;ARGに発言者の番号を入れてください
;--------------------------------------------------
@CNAMET(ARG, ARGS, ARGS:1, ARGS:2, ARGS:3, ARGS:4)
#FUNCTIONS
#DIM MEMO_TARGET

MEMO_TARGET = TARGET

;変換が必要なARGSの処理
SELECTCASE ARGS
;partner呼びはTARGETの名前呼びに変換する
CASE "partner"
	SIF ARG != TARGET
		ARGS = %CALLNAME:TARGET%
ENDSELECT

TARGET = ARG

LOCALS = %CNAME(ARGS, ARGS:1, ARGS:2, ARGS:3, ARGS:4)%

TARGET = MEMO_TARGET

RETURNF LOCALS

;--------------------------------------------------
;TARGETの人称管理関数@CNAME
;ARGSに何人称か、または誰への呼びかけかを入れる。
;ARGS:1～にはどもり、甘え、かな、～など変化をつけたい内容を入れる
;基本的な人称はPERSON_DEFで設定し、特殊なケースの呼び名はPERSONを用いて設定する
;具体的には、PERSONが設定されている場合にはPERSON、そうでない場合にはPERSON_DEFを用いることになる
;また、CEVENTを用いた称呼変更はPERSONが設定されている場合には無視されるので注意
;--------------------------------------------------
@CNAME(ARGS, ARGS:1, ARGS:2, ARGS:3, ARGS:4)
#FUNCTIONS
#DIM LCOUNT
#DIM LCOUNT2
#DIM MEMO_PLAYER
#DIM MEMO_ASSI
#DIMS MEMO_ARGS
;呼び名未設定の場合に他の呼び名を見るフラグ
#DIMS USE_CNAME
;名前を呼ぶ相手の角色番号の代入に使う
#DIM ACTOR
;呼び名
#DIMS PERSON
;よびな
#DIMS KANA
;基本呼び名
#DIMS PERSON_DEF
;基本よびな
#DIMS KANA_DEF

MEMO_PLAYER = PLAYER
MEMO_ASSI = ASSI

USE_CNAME = 

;基本呼び名の重置
VARSET PERSON_DEF
VARSET KANA_DEF

;普段とは異なる呼び名の重置
VARSET PERSON
VARSET KANA

;変換が必要なARGSの処理
SELECTCASE ARGS
CASE "partner"
	ARGS = %NAMES("partner")%
ENDSELECT
MEMO_ARGS = %ARGS%

;ARGSが角色のCALLNAMEに等しい場合は、呼び名未設定なら他の場合を見る
SELECTCASE FIND_NO(ARGS)
CASE IS <= 0
CASE PLAYER
	USE_CNAME = 二人称
;CASE MASTER
;	USE_CNAME = 主人
;CASE ASSI
;	USE_CNAME = 助手
CASEELSE
	USE_CNAME = 助手
ENDSELECT

$CNAME_LOOP

STR:基本呼び名 = 
;TRYCALLFORMさえ使えればなー
;追加した角色の番号に応じて増やす
SELECTCASE NO:TARGET
CASE 1
	STR:基本呼び名 = %CNAME_K1(ARGS)%
CASE 2
	STR:基本呼び名 = %CNAME_K2(ARGS)%
CASE 3
	STR:基本呼び名 = %CNAME_K3(ARGS)%
CASE 4
	STR:基本呼び名 = %CNAME_K4(ARGS)%
CASE 5
	STR:基本呼び名 = %CNAME_K5(ARGS)%
CASE 6
	STR:基本呼び名 = %CNAME_K6(ARGS)%
CASE 7
	STR:基本呼び名 = %CNAME_K7(ARGS)%
CASE 8
	STR:基本呼び名 = %CNAME_K8(ARGS)%
CASE 9
	STR:基本呼び名 = %CNAME_K9(ARGS)%
CASE 10
	STR:基本呼び名 = %CNAME_K10(ARGS)%
CASE 11
	STR:基本呼び名 = %CNAME_K11(ARGS)%
CASE 12
	STR:基本呼び名 = %CNAME_K12(ARGS)%
CASE 13
	STR:基本呼び名 = %CNAME_K13(ARGS)%
CASE 14
	STR:基本呼び名 = %CNAME_K14(ARGS)%
CASE 15
	STR:基本呼び名 = %CNAME_K15(ARGS)%
CASE 16
	STR:基本呼び名 = %CNAME_K16(ARGS)%
CASE 17
	STR:基本呼び名 = %CNAME_K17(ARGS)%
CASE 18
	STR:基本呼び名 = %CNAME_K18(ARGS)%
CASE 19
	STR:基本呼び名 = %CNAME_K19(ARGS)%
CASE 20
	STR:基本呼び名 = %CNAME_K20(ARGS)%
CASE 21
	STR:基本呼び名 = %CNAME_K21(ARGS)%
CASE 22
	STR:基本呼び名 = %CNAME_K22(ARGS)%
CASE 23
	STR:基本呼び名 = %CNAME_K23(ARGS)%
CASE 24
	STR:基本呼び名 = %CNAME_K24(ARGS)%
CASE 25
	STR:基本呼び名 = %CNAME_K25(ARGS)%
CASE 26
	STR:基本呼び名 = %CNAME_K26(ARGS)%
CASE 27
	STR:基本呼び名 = %CNAME_K27(ARGS)%
CASE 28
	STR:基本呼び名 = %CNAME_K28(ARGS)%
CASE 29
	STR:基本呼び名 = %CNAME_K29(ARGS)%
CASE 30
	STR:基本呼び名 = %CNAME_K30(ARGS)%
CASE 31
	STR:基本呼び名 = %CNAME_K31(ARGS)%
CASE 32
	STR:基本呼び名 = %CNAME_K32(ARGS)%
CASE 33
	STR:基本呼び名 = %CNAME_K33(ARGS)%
CASE 34
	STR:基本呼び名 = %CNAME_K34(ARGS)%
CASE 35
	STR:基本呼び名 = %CNAME_K35(ARGS)%
CASE 36
	STR:基本呼び名 = %CNAME_K36(ARGS)%
CASE 37
	STR:基本呼び名 = %CNAME_K37(ARGS)%
CASE 38
	STR:基本呼び名 = %CNAME_K38(ARGS)%
CASE 39
	STR:基本呼び名 = %CNAME_K39(ARGS)%
CASE 40
	STR:基本呼び名 = %CNAME_K40(ARGS)%
CASE 41
	STR:基本呼び名 = %CNAME_K41(ARGS)%
CASE 42
	STR:基本呼び名 = %CNAME_K42(ARGS)%
CASE 43
	STR:基本呼び名 = %CNAME_K43(ARGS)%
CASE 44
	STR:基本呼び名 = %CNAME_K44(ARGS)%
CASE 45
	STR:基本呼び名 = %CNAME_K45(ARGS)%
CASE 46
	STR:基本呼び名 = %CNAME_K46(ARGS)%
CASE 47
	STR:基本呼び名 = %CNAME_K47(ARGS)%
CASE 48
	STR:基本呼び名 = %CNAME_K48(ARGS)%
CASE 49
	STR:基本呼び名 = %CNAME_K49(ARGS)%
CASE 50
	STR:基本呼び名 = %CNAME_K50(ARGS)%
CASE 51
	STR:基本呼び名 = %CNAME_K51(ARGS)%
CASE 52
	STR:基本呼び名 = %CNAME_K52(ARGS)%
CASE 53
	STR:基本呼び名 = %CNAME_K53(ARGS)%
CASE 54
	STR:基本呼び名 = %CNAME_K54(ARGS)%
CASE 55
	STR:基本呼び名 = %CNAME_K55(ARGS)%
CASE 56
	STR:基本呼び名 = %CNAME_K56(ARGS)%
CASE 57
	STR:基本呼び名 = %CNAME_K57(ARGS)%
CASE 58
	STR:基本呼び名 = %CNAME_K58(ARGS)%
CASE 59
	STR:基本呼び名 = %CNAME_K59(ARGS)%
CASE 60
	STR:基本呼び名 = %CNAME_K60(ARGS)%
CASE 61
	STR:基本呼び名 = %CNAME_K61(ARGS)%
CASE 62
	STR:基本呼び名 = %CNAME_K62(ARGS)%
CASE 63
	STR:基本呼び名 = %CNAME_K63(ARGS)%
CASE 64
	STR:基本呼び名 = %CNAME_K64(ARGS)%
CASE 65
	STR:基本呼び名 = %CNAME_K65(ARGS)%
CASE 66
	STR:基本呼び名 = %CNAME_K66(ARGS)%

CASE 69
	STR:基本呼び名 = %CNAME_K69(ARGS)%
CASE 70
	STR:基本呼び名 = %CNAME_K70(ARGS)%
CASE 71
	STR:基本呼び名 = %CNAME_K71(ARGS)%
CASE 73
	STR:基本呼び名 = %CNAME_K73(ARGS)%
CASE 77
	STR:基本呼び名 = %CNAME_K77(ARGS)%

CASE 100
	STR:基本呼び名 = %CNAME_K100(ARGS)%



;以下空き番号
CASE 67
	STR:基本呼び名 = %CNAME_K67(ARGS)%
CASE 68
	STR:基本呼び名 = %CNAME_K68(ARGS)%

ENDSELECT

;TEXTRを默认で内蔵しておく(死に分岐になりやすいため)
STR:基本呼び名 = %TEXTR(STR:基本呼び名)%

;他の呼び名を見るフラグが立っているか格子
IF STR:基本呼び名 == "" && USE_CNAME != ""
	SELECTCASE USE_CNAME
	CASE "二人称"
		PLAYER = FIND_NO(ARGS)
	CASE "助手"
		ASSI = FIND_NO(ARGS)
	ENDSELECT

	ARGS = %USE_CNAME%
	USE_CNAME = 
	GOTO CNAME_LOOP
ENDIF

;ARGS,ASSI,PLAYERを元に戻す
ARGS = %MEMO_ARGS%
ASSI = MEMO_ASSI
PLAYER = MEMO_PLAYER

;呼び名が設定されている
IF STR:基本呼び名 != ""
	VARSET LOCALS
	SPLIT STR:基本呼び名, "_", LOCALS
	PERSON_DEF = %LOCALS%
	KANA_DEF = %LOCALS:1%
;されていない場合は汎用呼び名
ELSE
	SELECTCASE ARGS
	CASE "一人称"
		PERSON_DEF = 我
		KANA_DEF = 我
	CASE "二人称"
		;相手が主人
		IF PLAYER == MASTER
			PERSON_DEF = 你
			KANA_DEF = 你
		;相手が主人ではない
		ELSE
			PERSON_DEF = 你
			KANA_DEF = 你
		ENDIF
	CASE "主人"
		PERSON_DEF = 主人様
		KANA_DEF = 主人大人
	CASEELSE
		;名前を呼ぶ相手の角色番号をACTORに代入する
		SELECTCASE ARGS
		;相手が助手
		CASE "助手"
			ACTOR = ASSI
		;ここにはARGSに角色のCALLNAMEが入ったりしている場合(ARGS == "弗理希艾尔" など)に来る
		CASEELSE
			ACTOR = FIND_NO(ARGS)
		ENDSELECT

		IF ACTOR <= 0
			PERSON_DEF = %ARGS%
			KANA_DEF = %ARGS%
		ELSE
			;相手が教員
			IF COND("教員", ACTOR)
				STR:基本呼び名 = %CALLNAME:ACTOR%老师_%CSTR:ACTOR:ふりがな%老师

			;自分も相手も学生なら学年比較
			ELSEIF COND("学生") && COND("学生", ACTOR)
				;相手が同学年
				IF COND("学年") == COND("学年", ACTOR)
					STR:基本呼び名 = %CALLNAME:ACTOR%_%CSTR:ACTOR:ふりがな%
				;相手が下の学年
				ELSEIF COND("学年") > COND("学年", ACTOR)
					IF TALENT:ACTOR:男性
						STR:基本呼び名 = %CALLNAME:ACTOR%_%CSTR:ACTOR:ふりがな%
					ELSE
						STR:基本呼び名 = %CALLNAME:ACTOR%酱_%CSTR:ACTOR:ふりがな%酱
					ENDIF
				;相手が上級生
				ELSE
					STR:基本呼び名 = %CALLNAME:ACTOR%前輩_%CSTR:ACTOR:ふりがな%前輩
				ENDIF

			;それ以外
			ELSE
				STR:基本呼び名 = %CALLNAME:ACTOR%桑_%CSTR:ACTOR:ふりがな%桑
			ENDIF

			VARSET LOCALS
			SPLIT STR:基本呼び名, "_", LOCALS
			PERSON_DEF = %LOCALS%
			KANA_DEF = %LOCALS:1%
		ENDIF
	ENDSELECT
ENDIF


;ここまでで人称の変化が起きていない場合には、人称変更をしているならそれを、していないなら默认の人称を使う
IF PERSON == ""
	PERSON = %PERSON_DEF%
	KANA = %KANA_DEF%

	SELECTCASE ARGS
	CASE "一人称"
		IF PLAYER == MASTER && CEVENT("一人称主人")
			PERSON = %CEVENTS("一人称主人")%
			KANA = %CEVENTS("一人称主人かな")%
		ELSEIF PLAYER == ASSI && CEVENT("一人称助手")
			PERSON = %CEVENTS("一人称助手")%
			KANA = %CEVENTS("一人称助手かな")%
		ELSEIF CEVENT("一人称")
			PERSON = %CEVENTS("一人称")%
			KANA = %CEVENTS("一人称かな")%
		ENDIF
	CASE "二人称"
		IF PLAYER == MASTER && CEVENT("二人称主人")
			PERSON = %CEVENTS("二人称主人")%
			KANA = %CEVENTS("二人称主人かな")%
		ELSEIF PLAYER == ASSI && CEVENT("二人称助手")
			PERSON = %CEVENTS("二人称助手")%
			KANA = %CEVENTS("二人称助手かな")%
		ELSEIF CEVENT("二人称")
			PERSON = %CEVENTS("二人称")%
			KANA = %CEVENTS("二人称かな")%
		ENDIF
	CASE "主人"
		IF CEVENT("二人称主人")
			PERSON = %CEVENTS("二人称主人")%
			KANA = %CEVENTS("二人称主人かな")%
		ELSEIF CEVENT("二人称")
			PERSON = %CEVENTS("二人称")%
			KANA = %CEVENTS("二人称かな")%
		ENDIF
	CASE "助手"
		IF CEVENT("二人称助手")
			PERSON = %CEVENTS("二人称助手")%
			KANA = %CEVENTS("二人称助手かな")%
		ELSEIF CEVENT("二人称")
			PERSON = %CEVENTS("二人称")%
			KANA = %CEVENTS("二人称かな")%
		ENDIF
	ENDSELECT
ENDIF


;以下で細かい変化をつける

;ひらがな化
FOR LCOUNT, 1, 5
	SELECTCASE ARGS:LCOUNT
	CASE "かな", "・"
		PERSON = %KANA%
	ENDSELECT
NEXT

;お・に・い・桑（ひらがな化は上で既に完了）
FOR LCOUNT, 1, 5
	SIF ARGS:LCOUNT != "・"
		CONTINUE

	FOR LCOUNT2, 0, 20
		SIF STRLENS(PERSON) <= 2 + LCOUNT2 * 4
			BREAK
		PERSON = %SUBSTRING(PERSON, 0, 2 + LCOUNT2 * 4)%・%SUBSTRING(PERSON, 2 + LCOUNT2 * 4, -1)%
	NEXT
	SELECTCASE PERSON
	;特殊変化
	CASE "老・师"
		PERSON = 老・师
	CASEELSE
		SELECTCASE SUBSTRING(PERSON, MAX(STRLENS(PERSON) - 6, 0), -1)
		CASE "桑"
			PERSON = %SUBSTRING(PERSON, 0, STRLENS(PERSON) - 6)%桑
		CASE "君"
			PERSON = %SUBSTRING(PERSON, 0, STRLENS(PERSON) - 6)%君
		CASEELSE
			SELECTCASE SUBSTRING(PERSON, MAX(STRLENS(PERSON) - 10, 0), -1)
			CASE "酱"
				PERSON = %SUBSTRING(PERSON, 0, STRLENS(PERSON) - 10)%酱
			ENDSELECT
		ENDSELECT
	ENDSELECT
NEXT
;甘え(おぬしとかみたいな甘える事が異常な呼び方もあるので個別管理)
FOR LCOUNT, 1, 5
	SIF ARGS:LCOUNT != "甘え"
		CONTINUE

	SELECTCASE PERSON
	CASE "Master"
		PERSON = Master
	CASE "你", "小哥", "妈妈", "まま", "爸爸", "爸爸"
		PERSON = %PERSON%ぁ
	CASE "我", "我", "主上", "我", "我", "我", "我"
		PERSON = %PERSON%ぃ
	CASE "僕", "僕", "僕"
		PERSON = %PERSON%ぅ
	CASE "俺", "俺", "母上", "母上", "父上", "父上", "姉上", "姉上", "兄上", "兄上"
		PERSON = %PERSON%ぇ
	CASE "老师"
		PERSON = 老师
	CASE "前輩"
		PERSON = 前輩
	;甘え口調が無い
	CASE "貴方", "貴女", "君", "你", "你", "Master", "Master"
	CASEELSE
		SELECTCASE SUBSTRING(PERSON, MAX(STRLENS(PERSON) - 2, 0), -1)
		CASE "様"
			PERSON = %PERSON%ぁ
		CASE "君"
			SIF STRLENS(PERSON) >= 3
				PERSON = %SUBSTRING(PERSON, 0, STRLENS(PERSON) - 2)%君
		CASEELSE
			SELECTCASE SUBSTRING(PERSON, MAX(STRLENS(PERSON) - 4, 0), -1)
			CASE "老师"
				PERSON = %SUBSTRING(PERSON, 0, STRLENS(PERSON) - 4)%老师
			CASE "大人"
				PERSON = %PERSON%ぁ
			CASE "桑"
				PERSON = %SUBSTRING(PERSON, 0, STRLENS(PERSON) - 4)%桑
			CASE "君"
				PERSON = %SUBSTRING(PERSON, 0, STRLENS(PERSON) - 4)%君

			CASEELSE
				SELECTCASE SUBSTRING(PERSON, MAX(STRLENS(PERSON) - 6, 0), -1)
				CASE "酱"
					PERSON = %SUBSTRING(PERSON, 0, STRLENS(PERSON) - 6)%酱
				CASE "大涅"
					PERSON = %PERSON%ぁ
				ENDSELECT
			ENDSELECT
		ENDSELECT
	ENDSELECT
NEXT

;音引きとか波ダッシュとか
FOR LCOUNT, 1, 5
	SELECTCASE ARGS:LCOUNT
	CASE "ー", "～", "、", "…", "……"
		SELECTCASE SUBSTRING(PERSON, MAX(STRLENS(PERSON) - 2, 0), -1)
		CASE "ん"
			PERSON = %SUBSTRING(PERSON, 0, STRLENS(PERSON) - 2)%%ARGS:LCOUNT%ん
		ENDSELECT
	ENDSELECT
NEXT
;どもり
FOR LCOUNT, 1, 5
	SIF STRLENS(KANA) <= 2
		BREAK
	SIF ARGS:LCOUNT != "どもり"
		CONTINUE

	PERSON = %SUBSTRING(KANA, 0, 2)%、%PERSON%
NEXT

PLAYER = MEMO_PLAYER

RETURNF PERSON


