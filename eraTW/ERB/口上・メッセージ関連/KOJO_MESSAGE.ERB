;====================================================================
;KOJO表示総合管理
;@KOJO_MESSAGE_SEND
;ARGS   => 口上種類 ("ENCOUNTER" "SP_EVENT" "EVENT" "COMMAND" "COUNTER" "PALAM" "MARK" "DIRECT" "SUCCESS" "ENDING"）
;       => さらに追加分："ONABARE" "PERMISSION" "LOST_VIRGIN_STOP" "CHILD" "DANMAKU" "IRAI" "GIFT" "DAILY" "DIARY" "MUSHI_BATTLE" "GRAVITY" "SUIKA" "ODEKAKE" "SEX_FRIEND" "BEFORETRAIN"
;ARG:1 => 口上タイミング(イベント番号、PALAM系タイミング番号、COMMAND番号等)
;ARG:2 => 発言者（口上主）ナンバー
;ARG:3 => 其他口上向け引数buffer
;ARG:4 => 其他口上向け引数buffer2
;ARGS:1 => 文字列ver.口上タイミング(ARG:1は無視する)
;ARGS:2 => 文字列ver.其他口上向け引数(ARGS:1がある時のみ)
;ARG:5 => 其他口上向け引数buffer3
;ARG:6 => 其他口上向け引数buffer4
;RESULTSによる汎用化に関しては仕様が読めないので取り敢えずベタ移植
;====================================================================
@KOJO_MESSAGE_SEND(ARGS, ARG:1, ARG:2, ARG:3, ARG:4, ARGS:1, ARGS:2, ARG:5, ARG:6)
#DIM  DYNAMIC KOJO_VALID
#DIMS DYNAMIC KOJO_NAME
#DIM  DYNAMIC SKIP_MESSAGE
#DIM  DYNAMIC SKIP_KOJO
#DIM  DYNAMIC KOJO_RESULT
IF ARG:2 == MASTER && ARGS == "MUSHI_BATTLE"
	RESULTS = 
	RETURN -1
ELSEIF ARG:2 == MASTER && !GROUPMATCH(ARGS, "COMMAND", "COM")
	RETURN -1
ENDIF
VARSET RESULTS 
VARSET RESULT
VARSET LOCAL
RESETCOLOR
SELECTCASE ARGS
;------------------------------------------------------------
;ファーストインプレッション系KOJO出力処理（俗に言うエクストラ構文）
;------------------------------------------------------------
	CASE "ENCOUNTER"
		;TARGETに発言者設定（現在的TARGETはLOCALへ退避）
		LOCAL = TARGET
		TARGET = ARG:2
		;口上の存在判定 and RESULTSに文字列代入
		CALL KOJO_ACTIVE_INFO(TARGET)
		;口上存在しないなら終了
		IF !RESULT
			TARGET = LOCAL
			RETURN 0
		ENDIF
		;口上表示設定なら表示
		IF FLAG:口上文本設定 > 0
			SIF FLAG:口上色
				TRYCALLFORM M_KOJO%RESULTS%_COLOR_K{NO:TARGET}
			TRYCALLFORM M_KOJO%RESULTS%_ENCOUNTER_K{NO:TARGET}
		ENDIF
		RESETCOLOR
		TARGET = LOCAL
;------------------------------------------------------------
;SPイベント系KOJO出力処理
;------------------------------------------------------------
	CASE "SP_EVENT"
		SIF FLAG:情景文本設定 <= 0 && FLAG:口上文本設定 <= 0
			RETURN -1

		;TARGETに発言者設定（現在のTARGETはLOCALへ退避）
		LOCAL = TARGET
		TARGET = ARG:2
		;テキスト設定
		IF FLAG:口上文本設定 <= 0
		ELSE
			CALL KOJO_ACTIVE_INFO(TARGET)
			KOJO_VALID = RESULT
			KOJO_NAME '= RESULTS
				
			RESULT = 0
			TRYCALLFORM M_KOJO%KOJO_NAME%_SPEVENT_MESSAGECHECK_K{NO:TARGET}_{ARG:1}
			SKIP_MESSAGE = GETBIT(RESULT, 0)
			SKIP_KOJO = GETBIT(RESULT, 1)
		ENDIF

		SIF !SKIP_MESSAGE && FLAG:情景文本設定 > 0
			TRYCALLFORM SPEVENT_MESSAGE_{ARG:1}(ARG:3,ARG:4)
		RESULT = 0
		IF KOJO_VALID && !SKIP_KOJO
			SIF FLAG:口上色
				TRYCALLFORM M_KOJO%KOJO_NAME%_COLOR_K{NO:TARGET}
			RESULT = 0
			TRYCALLFORM M_KOJO%KOJO_NAME%_SPEVENT_K{NO:TARGET}_{ARG:1}(ARG:3,ARG:4)
		ENDIF
		KOJO_RESULT = RESULT
		TARGET = LOCAL
		RESETCOLOR
		RETURN KOJO_RESULT
		; IF FLAG:口上文本設定 <= 0
		; 	;共通口上出力
		; 	CALLFORM SPEVENT_MESSAGE_{ARG:1}(ARG:3,ARG:4)
		; 	TARGET = LOCAL
		; 	RETURN 0
		; ENDIF
		; RESULT = 0
		; RESULTS =
		; ;TARGETの発言
		; ;@M_KOJO_KXにてRESULTSを定義すると口上が被らず起動する
		; ;口上の存在判定 and RESULTSに文字列代入
		; IF CFLAG:TARGET:口上セレクタ
		; 	TRYCALLFORM M_KOJO_K{NO:TARGET}_{CFLAG:TARGET:口上セレクタ}
		; ELSE
		; 	TRYCALLFORM M_KOJO_K{NO:TARGET}
		; ENDIF
		; ;口上が存在しないなら共通口上へ
		; IF !RESULT
		; 	;口上表示設定なら共通表示
		; 	IF FLAG:口上文本設定 > 0
		; 		;共通口上出力
		; 		CALLFORM SPEVENT_MESSAGE_{ARG:1}(ARG:3,ARG:4)
		; 		TARGET = LOCAL
		; 		RETURN 0
		; 	ENDIF
		; ENDIF
		; ;口上表示
		; IF FLAG:口上文本設定 > 0
		; 	;TARGET口上出力
		; 	;M_KOJO_KXでRESULTSを定義すると切り替え可
		; 	SIF FLAG:口上色
		; 		TRYCALLFORM M_KOJO%RESULTS%_COLOR_K{NO:TARGET}
		; 	TRYCCALLFORM M_KOJO%RESULTS%_SPEVENT_K{NO:TARGET}_{ARG:1}(ARG:3,ARG:4)
		; 	CATCH
		; 		RESETCOLOR
		; 		IF FLAG:口上文本設定 > 0
		; 			;共通口上出力
		; 			CALLFORM SPEVENT_MESSAGE_{ARG:1}(ARG:3,ARG:4)
		; 			TARGET = LOCAL
		; 			RETURN 0
		; 		ENDIF
		; 	ENDCATCH
		; ENDIF
		; RESETCOLOR
		; TARGET = LOCAL
;------------------------------------------------------------
;イベント系KOJO出力処理
;------------------------------------------------------------
	CASE "EVENT"
		;TARGETに発言者設定（現在的TARGETはLOCALへ退避）
		LOCAL = TARGET
		TARGET = ARG:2
		;口上未表示なら共通口上へ
		IF FLAG:口上文本設定 <= 0
			;共通口上出力
			TRYCALLFORM M_KOJO_EVENT_{ARG:1}(ARG:3,ARG:4)
			TARGET = LOCAL
			RETURN 0
		ENDIF
		RESULT = 0
		RESULTS =
		;TARGETの発言
		;口上の存在判定 and RESULTSに文字列代入
		CALL KOJO_ACTIVE_INFO(TARGET)
		;口上が存在しないなら共通口上へ
		IF !RESULT || (FLAG:70 && !CFLAG:(NO:TARGET):時間停止口上有) || (FLAG:扮演 && !CFLAG:(NO:TARGET):扮演口上有)
			;口上表示設定なら共通表示
			IF FLAG:口上文本設定 > 0
				;共通口上出力
				TRYCALLFORM M_KOJO_EVENT_{ARG:1}(ARG:3,ARG:4)
				TARGET = LOCAL
				RETURN 0
			ENDIF
		ENDIF
		;口上表示
		IF FLAG:口上文本設定 > 0
			;TARGET口上出力
			SIF FLAG:口上色
				TRYCALLFORM M_KOJO%RESULTS%_COLOR_K{NO:TARGET}
			IF ARGS:1 != ""
				TRYCALLFORM M_KOJO%RESULTS%_EVENT_K{NO:TARGET}_%ARGS:1%(ARGS:2,ARG:3,ARG:4)
			ELSE
				TRYCALLFORM M_KOJO%RESULTS%_EVENT_K{NO:TARGET}_{ARG:1}(ARG:3,ARG:4)
			ENDIF
			KOJO_RESULT = RESULT
		ENDIF
		TARGET = LOCAL
		RESETCOLOR
		RETURN KOJO_RESULT
;------------------------------------------------------------
;指令系KOJO出力処理
;------------------------------------------------------------
	CASE "COMMAND"
		SIF FLAG:情景文本設定 <= 0 && FLAG:口上文本設定 <= 0
			RETURN -1

		;テキスト設定
		IF FLAG:口上文本設定 <= 0
		ELSEIF TEQUIP:(ARG:2):20 && SELECTCOM != 107
		ELSEIF (FLAG:70 && !CFLAG:(ARG:2):時間停止口上有) || (CFLAG:(ARG:2):恶作剧 >= 1 && !CFLAG:(ARG:2):眠姦口上有) || (FLAG:扮演 && !CFLAG:(ARG:2):扮演口上有)
		ELSE
			CALL KOJO_ACTIVE_INFO(TARGET)
			KOJO_VALID = RESULT
			KOJO_NAME '= RESULTS

			IF RESULT
				IF TFLAG:50
					LOCAL = TFLAG:50
					LOCALS = SCOM
				ELSE
					LOCAL = SELECTCOM
					LOCALS = COM
				ENDIF				
				RESULT = 0
				TRYCALLFORM M_KOJO%KOJO_NAME%_MESSAGE_MESSAGECHECK_%LOCALS%_K{NO:TARGET}_{LOCAL}
				SKIP_MESSAGE = GETBIT(RESULT, 0)
				SKIP_KOJO = GETBIT(RESULT, 1)
			ENDIF
		ENDIF
		CALL DISPLAY_COM_IMAGE(SELECTCOM)

		SIF !SKIP_MESSAGE && FLAG:情景文本設定 > 0
			CALL TRAIN_MESSAGE

		RESULT = 0
		IF KOJO_VALID && !SKIP_KOJO
			SIF FLAG:口上色
				TRYCALLFORM M_KOJO%KOJO_NAME%_COLOR_K{NO:TARGET}
			RESULT = 0
			TRYCCALLFORM M_KOJO%KOJO_NAME%_MESSAGE_%LOCALS%_K{NO:TARGET}_{LOCAL}
			CATCH
				;埋めていないところは汎用的な処理が可能
				RESULT = 0
				TRYCALLFORM M_KOJO%KOJO_NAME%_MESSAGE_COM_K{NO:TARGET}_00
			ENDCATCH
		ENDIF
		KOJO_RESULT = RESULT

		SIF !KOJO_RESULT && CFLAG:TARGET:自動喘息
			CALL AUTO_AEGI(TARGET)

		RESETCOLOR
		RETURN KOJO_RESULT
		; ;文本設定
		; IF FLAG:口上文本設定 <= 0
		; 	;情景文本出力
		; 	SIF FLAG:6 > 0
		; 		CALL TRAIN_MESSAGE
		; 	CALL DISPLAY_COM_IMAGE(SELECTCOM)
		; 	RETURN 0
		; ENDIF
		; ;口球時
		; IF TEQUIP:(ARG:2):20 && SELECTCOM != 107
		; 	; SIF CFLAG:(ARG:2):口球口上有
		; 	; 	GOTO 口球口上有_1
		; 	SIF FLAG:6 > 0
		; 		CALL TRAIN_MESSAGE
		; 	CALL DISPLAY_COM_IMAGE(SELECTCOM)
		; ELSEIF (FLAG:70 && !CFLAG:(ARG:2):時間停止口上有) || (CFLAG:(ARG:2):恶作剧 >= 1 && !CFLAG:(ARG:2):眠姦口上有) || (FLAG:扮演 && !CFLAG:(ARG:2):扮演口上有)
		; 	SIF FLAG:6 > 0
		; 		CALL TRAIN_MESSAGE
		; 	CALL DISPLAY_COM_IMAGE(SELECTCOM)
		; ELSE
		; 	; $口球口上有_1
		; 	RESULT = 0
		; 	RESULTS =
		; 	;口上の存在判定 and RESULTSに文字列代入
		; 	IF CFLAG:TARGET:口上セレクタ
		; 		TRYCALLFORM M_KOJO_K{NO:TARGET}_{CFLAG:TARGET:口上セレクタ}
		; 	ELSE
		; 		TRYCALLFORM M_KOJO_K{NO:TARGET}
		; 	ENDIF
		; 	IF !RESULT
		; 		SIF FLAG:6 > 0
		; 			CALL TRAIN_MESSAGE
		; 		SIF CFLAG:(NO:TARGET):自動喘息
		; 			CALL AUTO_AEGI(NO:TARGET)
		; 		CALL DISPLAY_COM_IMAGE(SELECTCOM)
		; 		RETURN 0
		; 	ENDIF
		; 	;SIF FLAG:口上色
		; 		;TRYCALLFORM M_KOJO%RESULTS%_COLOR_K{NO:TARGET}
		; 	IF TFLAG:50
		; 		LOCAL = TFLAG:50
		; 		LOCALS = SCOM
		; 	ELSE
		; 		LOCAL = SELECTCOM
		; 		LOCALS = COM
		; 	ENDIF
		; 	CALL DISPLAY_COM_IMAGE(SELECTCOM)
		; 	IF TCVAR:外に出すから && ((LOCALS == "COM" && GROUPMATCH(LOCAL, 60, 61, 65, 67, 68)) || (LOCALS == "SCOM" && GROUPMATCH(LOCAL, 6, 7)))
		; 		SIF FLAG:6 > 0
		; 			CALL TRAIN_MESSAGE
		; 			RESETCOLOR
		; 		RETURN -1
		; 	ELSE
		; 	TRYCCALLFORM M_KOJO%RESULTS%_MESSAGE_%LOCALS%_K{NO:TARGET}_{LOCAL}
		; 	CATCH
		; 		;埋めていないところは汎用的な処理が可能
		; 		RESULT = 0
		; 		TRYCALLFORM M_KOJO%RESULTS%_MESSAGE_COM_K{NO:TARGET}_00
		; 		IF !RESULT
		; 			IF FLAG:6 > 0
		; 				CALL TRAIN_MESSAGE
		; 				SIF CFLAG:(NO:TARGET):自動喘息
		; 					CALL AUTO_AEGI(NO:TARGET)
		; 				RESETCOLOR
		; 				RETURN 0
		; 			ENDIF
		; 		ENDIF
		; 	ENDCATCH
		; 	ENDIF
		; ENDIF
		; RESETCOLOR
;------------------------------------------------------------
;Counter系KOJO出力処理
;------------------------------------------------------------
	CASE "COUNTER"
		CALL KOJO_MESSAGE_SEND_COUNTER(ARG:1, ARG:2, ARG:3, ARG:4, ARGS:1, ARGS:2, ARG:5, ARG:6)
		RETURN RESULT
		; LOCAL = TARGET
		; TARGET = ARG:2
		; IF FLAG:口上文本設定 <= 0
		; 	IF FLAG:6 > 0
		; 		CALL EVENT_COUNTER_MESSAGE
		; 		TARGET = LOCAL
		; 	ENDIF
		; 	RETURN 0
		; ENDIF
		
		; ;口球
		; IF TEQUIP:(ARG:2):20 && FLAG:6 > 0
		; 	; SIF CFLAG:(ARG:2):口球口上有
		; 	; 	GOTO 口球口上有_2
		; 	CALL EVENT_COUNTER_MESSAGE
		; 	TARGET = LOCAL
		; ELSE
		; 	; $口球口上有_2
		; 	RESULTS =	
		; 	RESULT = 0
		; 	;口上の存在判定 and RESULTSに文字列代入
		; 	IF CFLAG:TARGET:口上セレクタ
		; 		TRYCALLFORM M_KOJO_K{NO:TARGET}_{CFLAG:TARGET:口上セレクタ}
		; 	ELSE
		; 		TRYCALLFORM M_KOJO_K{NO:TARGET}
		; 	ENDIF
		; 	IF !RESULT || (FLAG:扮演 && !CFLAG:(ARG:2):扮演口上有)
		; 		SIF FLAG:6 > 0
		; 			CALL EVENT_COUNTER_MESSAGE
		; 		TARGET = LOCAL
		; 		RESETCOLOR
		; 		RETURN 0
		; 	ENDIF
		; 	TRYCCALLFORM M_KOJO%RESULTS%_MESSAGE_COUNTER_K{NO:TARGET}_{TCVAR:20}
		; 	CATCH
		; 		IF FLAG:6 > 0
		; 			CALL EVENT_COUNTER_MESSAGE
		; 			TARGET = LOCAL
		; 			RESETCOLOR
		; 			RETURN 0
		; 		ENDIF
		; 	ENDCATCH
		; 	TARGET = LOCAL
		; ENDIF
		; RESETCOLOR
;------------------------------------------------------------
;パラメータ系KOJO出力処理
;------------------------------------------------------------
	CASE "PALAM"
		SIF FLAG:情景文本設定 <= 0 && FLAG:口上文本設定 <= 0
			RETURN -1

		SELECTCASE ARG:1
		;==== 射精時口上 ============
			CASE 1
				; VARSET LOCAL
				; IF FLAG:口上文本設定 <= 0
				; 	SIF FLAG:6 > 0
				; 		CALL PALAM_MESSAGE_A
				; 	RETURN 0
				; ENDIF
				FOR LOCAL, GET_TARGETNUM(), -1 ,-1
					RESETCOLOR
					SKIP_MESSAGE = 0
					SKIP_KOJO = 0
					SIF TARGET:LOCAL < 1
						CONTINUE
					;TARGETを降順に出力
					SIF LOCAL > 0 && TARGET:LOCAL == TARGET
						CONTINUE
					;口上出力用のフラグがないと飛ばす
					SIF !TCVAR:(TARGET:LOCAL):口上出力用射精部位
						CONTINUE
					LOCAL:1 = TARGET
					TARGET = TARGET:LOCAL
					; RESULT = 0
					; RESULTS =
					; ;口上の存在判定 and RESULTSに文字列代入
					; IF CFLAG:TARGET:口上セレクタ
					; 	TRYCALLFORM M_KOJO_K{NO:TARGET}_{CFLAG:TARGET:口上セレクタ}
					; ELSE
					; 	TRYCALLFORM M_KOJO_K{NO:TARGET}
					; ENDIF
					; IF (!RESULT &&  FLAG:6 > 0) || (FLAG:70 && !CFLAG:(NO:TARGET):時間停止口上有) || (FLAG:扮演 && !CFLAG:(NO:TARGET):扮演口上有)
					; 	CALL PALAM_MESSAGE_A
					; 	TARGET = LOCAL:1
					; 	RETURN 0
					; ENDIF
					; ;射精口上出力ギミック
					CALL KOJO_MESSAGE_PALAMCNG_A2(LOCAL)
					; RESETCOLOR
					; SIF !RESULT
					; 	LOCAL:2 ++
					TARGET = LOCAL:1
					;避孕套口上は対象一人のみ
					SIF GETBIT(TFLAG:1,0)
						BREAK
				NEXT
				VARSET LOCAL
				RESETCOLOR
				
		;==== 絶頂時口上 ============
			CASE 2
				LOCAL = TARGET
				TARGET = ARG:2

				;テキスト設定
				IF FLAG:口上文本設定 <= 0
				ELSEIF FLAG:70 && !CFLAG:時間停止口上有
				ELSEIF FLAG:扮演 && !CFLAG:扮演口上有
				ELSE
					CALL KOJO_ACTIVE_INFO(TARGET)
					KOJO_VALID = RESULT
					KOJO_NAME '= RESULTS
						
					RESULT = 0
					IF CFLAG:恶作剧
						TRYCALLFORM M_KOJO%KOJO_NAME%_MESSAGE_PALAMCNG_MESSAGECHECK_B2_K{NO:TARGET}
					ELSE
						TRYCALLFORM M_KOJO%KOJO_NAME%_MESSAGE_PALAMCNG_MESSAGECHECK_B_K{NO:TARGET}
					ENDIF
					SKIP_MESSAGE = GETBIT(RESULT, 0)
					SKIP_KOJO = GETBIT(RESULT, 1)
				ENDIF

				SIF !SKIP_MESSAGE && FLAG:情景文本設定 > 0
					CALL PALAM_MESSAGE_B

				RESULT = 0
				IF KOJO_VALID && !SKIP_KOJO
					SIF FLAG:口上色
						TRYCALLFORM M_KOJO%KOJO_NAME%_COLOR_K{NO:TARGET}
					RESULT = 0
					IF CFLAG:恶作剧
						TRYCALLFORM M_KOJO%KOJO_NAME%_MESSAGE_PALAMCNG_B2_K{NO:TARGET}
					ELSE
						TRYCALLFORM M_KOJO%KOJO_NAME%_MESSAGE_PALAMCNG_B_K{NO:TARGET}
					ENDIF
				ENDIF
				KOJO_RESULT = RESULT
				TARGET = LOCAL
				RESETCOLOR
				RETURN KOJO_RESULT
				; IF FLAG:口上文本設定 <= 0
				; 	SIF FLAG:6 > 0
				; 		CALL PALAM_MESSAGE_B
				; 	RETURN 0
				; ENDIF
				; RESULT = 0
				; RESULTS =
				; ;口上の存在判定 and RESULTSに文字列代入
				; IF CFLAG:TARGET:口上セレクタ
				; 	TRYCALLFORM M_KOJO_K{NO:TARGET}_{CFLAG:TARGET:口上セレクタ}
				; ELSE
				; 	TRYCALLFORM M_KOJO_K{NO:TARGET}
				; ENDIF
				; IF (!RESULT &&  FLAG:6 > 0) || (FLAG:70 && !CFLAG:(NO:TARGET):時間停止口上有) || (FLAG:扮演 && !CFLAG:(NO:TARGET):扮演口上有)
				; 	CALL PALAM_MESSAGE_B
				; 	RETURN 0
				; ENDIF
				; IF CFLAG:(NO:TARGET):恶作剧
				; 	TRYCCALLFORM M_KOJO%RESULTS%_MESSAGE_PALAMCNG_B2_K{NO:TARGET}
				; 	CATCH
				; 		CALL PALAM_MESSAGE_B
				; 	ENDCATCH
				; ELSE
				; 	TRYCCALLFORM M_KOJO%RESULTS%_MESSAGE_PALAMCNG_B_K{NO:TARGET}
				; 	CATCH
				; 		CALL PALAM_MESSAGE_B
				; 	ENDCATCH
				; ENDIF
				; RESETCOLOR
		;==== 調教後口上 ============
			CASE 3
				LOCAL = TARGET
				TARGET = ARG:2

				;テキスト設定
				IF FLAG:口上文本設定 <= 0
				ELSEIF FLAG:70 && !CFLAG:時間停止口上有
				ELSEIF FLAG:扮演 && !CFLAG:扮演口上有
				ELSE
					CALL KOJO_ACTIVE_INFO(TARGET)
					KOJO_VALID = RESULT
					KOJO_NAME '= RESULTS
					RESULT = 0
					TRYCALLFORM M_KOJO%KOJO_NAME%_MESSAGE_PALAMCNG_MESSAGECHECK_C_K{NO:TARGET}
					SKIP_MESSAGE = GETBIT(RESULT, 0)
					SKIP_KOJO = GETBIT(RESULT, 1)
				ENDIF

				SIF !SKIP_MESSAGE && FLAG:情景文本設定 > 0
					CALL PALAM_MESSAGE_C

				RESULT = 0
				IF KOJO_VALID && !SKIP_KOJO
					SIF FLAG:口上色
						TRYCALLFORM M_KOJO%KOJO_NAME%_COLOR_K{NO:TARGET}
					RESULT = 0
					TRYCALLFORM M_KOJO%KOJO_NAME%_MESSAGE_PALAMCNG_C_K{NO:TARGET}
				ENDIF
				KOJO_RESULT = RESULT
				TARGET = LOCAL
				RESETCOLOR
				RETURN KOJO_RESULT
				; IF FLAG:口上文本設定 <= 0
				; 	SIF FLAG:6 > 0
				; 		CALL PALAM_MESSAGE_C
				; 	RETURN 0
				; ENDIF
				; RESULT = 0
				; RESULTS =
				; ;口上の存在判定 and RESULTSに文字列代入
				; IF CFLAG:TARGET:口上セレクタ
				; 	TRYCALLFORM M_KOJO_K{NO:TARGET}_{CFLAG:TARGET:口上セレクタ}
				; ELSE
				; 	TRYCALLFORM M_KOJO_K{NO:TARGET}
				; ENDIF
				; IF (!RESULT &&  FLAG:6 > 0) || (FLAG:70 && !CFLAG:(NO:TARGET):時間停止口上有) || (FLAG:扮演 && !CFLAG:(NO:TARGET):扮演口上有)
				; 	CALL PALAM_MESSAGE_C
				; 	RETURN 0
				; ENDIF
				; TRYCALLFORM M_KOJO%RESULTS%_MESSAGE_PALAMCNG_C_K{NO:TARGET}
				; RESETCOLOR
		;==== パラメータ変動口上 ====
			CASE 4
				LOCAL = TARGET
				TARGET = ARG:2

				;テキスト設定
				IF FLAG:口上文本設定 <= 0
				ELSEIF FLAG:70 && !CFLAG:時間停止口上有
				ELSEIF FLAG:扮演 && !CFLAG:扮演口上有
				ELSE
					CALL KOJO_ACTIVE_INFO(TARGET)
					KOJO_VALID = RESULT
					KOJO_NAME '= RESULTS
						
					RESULT = 0
					TRYCALLFORM M_KOJO%KOJO_NAME%_MESSAGE_PALAMCNG_MESSAGECHECK_D_K{NO:TARGET}
					SKIP_MESSAGE = GETBIT(RESULT, 0)
					SKIP_KOJO = GETBIT(RESULT, 1)
				ENDIF

				SIF !SKIP_MESSAGE && FLAG:情景文本設定 > 0
					CALL PALAM_MESSAGE_D

				RESULT = 0
				IF KOJO_VALID && !SKIP_KOJO
					SIF FLAG:口上色
						TRYCALLFORM M_KOJO%KOJO_NAME%_COLOR_K{NO:TARGET}
					RESULT = 0
					TRYCALLFORM M_KOJO%KOJO_NAME%_MESSAGE_PALAMCNG_D_K{NO:TARGET}
				ENDIF
				KOJO_RESULT = RESULT
				TARGET = LOCAL
				RESETCOLOR
				RETURN KOJO_RESULT
				; IF FLAG:口上文本設定 <= 0
				; 	SIF FLAG:情景文本設定 > 0
				; 		CALL PALAM_MESSAGE_D
				; 	RETURN 0
				; ENDIF
				; RESULT = 0
				; RESULTS =
				; IF CFLAG:TARGET:口上セレクタ
				; 	TRYCALLFORM M_KOJO_K{NO:TARGET}_{CFLAG:TARGET:口上セレクタ}
				; ELSE
				; 	TRYCALLFORM M_KOJO_K{NO:TARGET}
				; ENDIF
				; IF (!RESULT &&  FLAG:6 > 0) || (FLAG:70 && !CFLAG:(NO:TARGET):時間停止口上有) || (FLAG:扮演 && !CFLAG:(NO:TARGET):扮演口上有)
				; 	CALL PALAM_MESSAGE_D
				; 	RETURN 0
				; ENDIF
				; SIF FLAG:口上色
				; 	TRYCALLFORM M_KOJO%RESULTS%_COLOR_K{NO:TARGET}
				; TRYCALLFORM M_KOJO%RESULTS%_MESSAGE_PALAMCNG_D_K{NO:TARGET}
				; RESETCOLOR
		;==== 触手の射精 ============
			CASE 5
				LOCAL = TARGET
				TARGET = ARG:2

				;テキスト設定
				IF FLAG:口上文本設定 <= 0
				ELSEIF FLAG:70 && !CFLAG:時間停止口上有
				ELSEIF FLAG:扮演 && !CFLAG:扮演口上有
				ELSE
					CALL KOJO_ACTIVE_INFO(TARGET)
					KOJO_VALID = RESULT
					KOJO_NAME '= RESULTS
						
					RESULT = 0
					TRYCALLFORM M_KOJO%KOJO_NAME%_MESSAGE_PALAMCNG_MESSAGECHECK_E_K{NO:TARGET}
					SKIP_MESSAGE = GETBIT(RESULT, 0)
					SKIP_KOJO = GETBIT(RESULT, 1)
				ENDIF

				SIF !SKIP_MESSAGE && FLAG:情景文本設定 > 0
					CALL PALAM_MESSAGE_E

				RESULT = 0
				IF KOJO_VALID && !SKIP_KOJO
					SIF FLAG:口上色
						TRYCALLFORM M_KOJO%KOJO_NAME%_COLOR_K{NO:TARGET}
					RESULT = 0
					TRYCALLFORM M_KOJO%KOJO_NAME%_MESSAGE_PALAMCNG_E_K{NO:TARGET}
				ENDIF
				KOJO_RESULT = RESULT
				TARGET = LOCAL
				RESETCOLOR
				RETURN KOJO_RESULT
				; IF FLAG:口上文本設定 <= 0
				; 	SIF FLAG:情景文本設定 > 0
				; 		CALL PALAM_MESSAGE_E
				; 	RETURN 0
				; ENDIF
				; RESULT = 0
				; RESULTS =
				; ;口上の存在判定 and RESULTSに文字列代入
				; IF CFLAG:TARGET:口上セレクタ
				; 	TRYCALLFORM M_KOJO_K{NO:TARGET}_{CFLAG:TARGET:口上セレクタ}
				; ELSE
				; 	TRYCALLFORM M_KOJO_K{NO:TARGET}
				; ENDIF
				; IF !RESULT && FLAG:情景文本設定 > 0
				; 	CALL PALAM_MESSAGE_E
				; 	RETURN 0
				; ENDIF
				; TRYCALLFORM M_KOJO%RESULTS%_MESSAGE_PALAMCNG_E_K{NO:TARGET}
		;==== 挑逗 ============
			CASE 6
				LOCAL = TARGET
				TARGET = ARG:2

				;テキスト設定
				IF FLAG:口上文本設定 <= 0
				ELSEIF FLAG:70 && !CFLAG:時間停止口上有
				ELSEIF FLAG:扮演 && !CFLAG:扮演口上有
				ELSE
					CALL KOJO_ACTIVE_INFO(TARGET)
					KOJO_VALID = RESULT
					KOJO_NAME '= RESULTS
						
					RESULT = 0
					TRYCALLFORM M_KOJO%KOJO_NAME%_MESSAGE_PALAMCNG_MESSAGECHECK_F_K{NO:TARGET}
					SKIP_MESSAGE = GETBIT(RESULT, 0)
					SKIP_KOJO = GETBIT(RESULT, 1)
				ENDIF

				SIF !SKIP_MESSAGE && FLAG:情景文本設定 > 0
					CALL PALAM_MESSAGE_F

				RESULT = 0
				IF KOJO_VALID && !SKIP_KOJO
					SIF FLAG:口上色
						TRYCALLFORM M_KOJO%KOJO_NAME%_COLOR_K{NO:TARGET}
					RESULT = 0
					TRYCALLFORM M_KOJO%KOJO_NAME%_MESSAGE_PALAMCNG_F_K{NO:TARGET}
				ENDIF
				KOJO_RESULT = RESULT
				TARGET = LOCAL
				RESETCOLOR
				RETURN KOJO_RESULT
		ENDSELECT
		; 		IF FLAG:口上文本設定 <= 0
		; 			SIF FLAG:情景文本設定 > 0
		; 				CALL PALAM_MESSAGE_F
		; 			RETURN 0
		; 		ENDIF
		; 		RESULT = 0
		; 		RESULTS =
		; 		;口上の存在判定 and RESULTSに文字列代入
		; 		IF CFLAG:TARGET:口上セレクタ
		; 			TRYCALLFORM M_KOJO_K{NO:TARGET}_{CFLAG:TARGET:口上セレクタ}
		; 		ELSE
		; 			TRYCALLFORM M_KOJO_K{NO:TARGET}
		; 		ENDIF
		; 		IF !RESULT && FLAG:情景文本設定 > 0
		; 			CALL PALAM_MESSAGE_F
		; 			RETURN 0
		; 		ENDIF
		; 		TRYCALLFORM M_KOJO%RESULTS%_MESSAGE_PALAMCNG_F_K{NO:TARGET}
		; ENDSELECT
;	;刻印系KOJO出力処理
	CASE "MARK"
		SIF FLAG:情景文本設定 <= 0 && FLAG:口上文本設定 <= 0
			RETURN -1

		LOCAL = TARGET
		TARGET = ARG:2

		;テキスト設定
		IF FLAG:口上文本設定 <= 0
		ELSE
			CALL KOJO_ACTIVE_INFO(TARGET)
			KOJO_VALID = RESULT
			KOJO_NAME '= RESULTS
				
			RESULT = 0
			
			TRYCALLFORM M_KOJO%KOJO_NAME%_MESSAGE_MARKCNG_MESSAGECHECK_K{NO:TARGET}
			SKIP_MESSAGE = GETBIT(RESULT, 0)
			SKIP_KOJO = GETBIT(RESULT, 1)
		ENDIF

		SIF !SKIP_MESSAGE && FLAG:情景文本設定 > 0
			CALL MARK_MESSAGE

		RESULT = 0
		IF KOJO_VALID && !SKIP_KOJO
			SIF FLAG:口上色
				TRYCALLFORM M_KOJO%KOJO_NAME%_COLOR_K{NO:TARGET}
			RESULT = 0
			TRYCALLFORM M_KOJO%KOJO_NAME%_MESSAGE_MARKCNG_K{NO:TARGET}
		ENDIF
		KOJO_RESULT = RESULT
		TARGET = LOCAL
		RESETCOLOR
		RETURN KOJO_RESULT
		; IF FLAG:口上文本設定 <= 0
		; 	SIF FLAG:情景文本設定 > 0
		; 		CALL MARK_MESSAGE
		; 	RETURN 0
		; ENDIF
		; RESULT = 0
		; RESULTS =
		; ;口上の存在判定 and RESULTSに文字列代入
		; IF CFLAG:TARGET:口上セレクタ
		; 	TRYCALLFORM M_KOJO_K{NO:TARGET}_{CFLAG:TARGET:口上セレクタ}
		; ELSE
		; 	TRYCALLFORM M_KOJO_K{NO:TARGET}
		; ENDIF
		; IF !RESULT && FLAG:情景文本設定 > 0
		; 	CALL MARK_MESSAGE
		; 	RETURN 0
		; ENDIF
		; TRYCCALLFORM M_KOJO%RESULTS%_MESSAGE_MARKCNG_K{NO:TARGET}
		; CATCH
		; ENDCATCH
		; RESETCOLOR
	;指令系直接呼び出し
	CASE "DIRECT"
			; CALL MARK_MESSAGE
		SELECTCASE ARG:1
			CASE 351
				;口球
				IF TEQUIP:(ARG:2):20 && SELECTCOM != 107 && FLAG:情景文本設定 > 0
					; SIF CFLAG:(ARG:2):口球口上有
					; 	GOTO 口球口上有_3
					RETURN 1
				ELSE
					; $口球口上有_3
					RESULT = 0
					RESULTS =
					;口上の存在判定 and RESULTSに文字列代入
					CALL KOJO_ACTIVE_INFO(TARGET)
					IF FLAG:口上文本設定 > 0
						IF FLAG:口上色
							TRYCALLFORM M_KOJO%RESULTS%_COLOR_K{NO:TARGET}
						ELSE
							RESETCOLOR
						ENDIF
					ELSE
						RESETCOLOR
						RETURN 1
					ENDIF
					TRYCALLFORM M_KOJO%RESULTS%_MESSAGE_COM_K{NO:TARGET}_351
					RESETCOLOR
				ENDIF
		ENDSELECT
	;口上内でソースを追加する処理,TARGET固定
	CASE "EXTRASOURCE"
		RESULTS = 
		;口上表示
		IF FLAG:口上文本設定 > 0
			CALL KOJO_ACTIVE_INFO(TARGET)
			IF TFLAG:50
				LOCAL = TFLAG:50
				LOCALS = SCOM
			ELSE
				LOCAL = SELECTCOM
				LOCALS = COM
			ENDIF
			;TRYCALLFORM M_KOJO%RESULTS%_EXTRASOURCE_%LOCALS%_K{NO:TARGET}_{LOCAL}
			TRYCCALLFORM M_KOJO%RESULTS%_EXTRASOURCE_%LOCALS%_K{NO:TARGET}_{LOCAL}
			;(魔改)增加EXTRASOURCE一括管理，如果此處函數有效且選擇的命令沒有專門的EXTRASOURCE函數，那麽此處函數會運行并進行EXTRASOURCE處理
			;如果有需要請進行以下操作:
			;1.請在本函數内部進行命令判斷
			;2.請直接對各個命令的EXTRASOURCE進行定義
			;3.不要填寫此函數
			;现已转正（呲牙）
			CATCH
				TRYCALLFORM M_KOJO%RESULTS%_EXTRASOURCE_%LOCALS%_K{NO:TARGET}_GENERAL
			ENDCATCH
		ENDIF

	;基本フラグ設定
	CASE "FLAGSETTING"
		LOCAL = TARGET
		TARGET = ARG:2
		RESULT = 0
		RESULTS = 
		RESULTS:1 = 
		;口上表示
		IF FLAG:口上文本設定 > 0
			CALL KOJO_ACTIVE_INFO(TARGET)
			IF RESULT
				CFLAG:TARGET:眠姦口上有 = 0
				CFLAG:TARGET:時間停止口上有 = 0
				CFLAG:TARGET:扮演口上有 = 0
				CFLAG:TARGET:破瓜中止口上有 = 0
				CFLAG:TARGET:口上内抱き寄せ判定_初回 = 0
				CFLAG:TARGET:口上内抱き寄せ判定_通常 = 0
				CFLAG:TARGET:推倒禁止 = 0
				CFLAG:TARGET:来訪不能 = 0
				TRYCCALLFORM M_KOJO%RESULTS%_FLAGSETTING_K{NO:TARGET}
				CATCH
					PRINTFORMW ※警告：(%NAME_OUTPUT_TRANSLATION("CALLNAME", TARGET)%\@ RESULTS:1 != "" ? _ # \@%RESULTS:1%口上)的基本标志未设定
				ENDCATCH
			ENDIF
		ELSE
			RESULT = 0
		ENDIF
		TARGET = LOCAL
		RETURN RESULT
	;オナバレ
	CASE "ONABARE"
		LOCAL = TARGET
		TARGET = ARG:2
		RESULT = 0
		RESULTS = 
		;口上表示
		IF FLAG:口上文本設定 > 0
			CALL KOJO_ACTIVE_INFO(TARGET)
			;TARGET口上出力
			SIF FLAG:口上色
				TRYCALLFORM M_KOJO%RESULTS%_COLOR_K{NO:TARGET}
			SELECTCASE ARG:1
			CASE 1, 2
				TRYCCALLFORM M_KOJO%RESULTS%_EVENT_K{NO:TARGET}_ONABARE_{ARG:1}(ARG:3)
				CATCH
					;うっかりRETURN 1しちゃってもカバーできるようにRESULT = 2に設定
					RESULT = 2
				ENDCATCH
			CASE 3
				TRYCCALLFORM M_KOJO%RESULTS%_EVENT_K{NO:TARGET}_ONABARE_{ARG:1}(ARG:3, ARG:4, ARG:5, ARG:6)
				CATCH
					RESULT = 2
				ENDCATCH
			CASE 4
				TRYCALLFORM M_KOJO_EVENT_K{NO:TARGET}_26_1(ARGS:1)
			ENDSELECT
			RESETCOLOR
		ELSE
			RESULT = 2
		ENDIF
		TARGET = LOCAL
		RETURN RESULT

	;指令成否口上制御
	CASE "SUCCESS"
		RESULT = 0
		RESULTS =
		;口上の存在判定 and RESULTSに文字列代入
		CALL KOJO_ACTIVE_INFO(TARGET)
		IF !RESULT
			TFLAG:192 = 0
			RETURN 0
		ENDIF
		IF TFLAG:50
			LOCAL = TFLAG:50
			LOCALS = SCOM
		ELSE
			LOCAL = SELECTCOM
			LOCALS = COM
		ENDIF
		TRYCCALLFORM M_KOJO%RESULTS%_SUCCESS_%LOCALS%_K{NO:TARGET}_{LOCAL}
		CATCH
			TRYCCALLFORM M_KOJO%RESULTS%_SUCCESS_K{NO:TARGET}_GENERAL
			CATCH
				TFLAG:192 = 0
			ENDCATCH
		ENDCATCH
	;推倒成否口上制御,破瓜中止口上制御
	CASE "PERMISSION", "LOST_VIRGIN_STOP"
		LOCAL = TARGET
		TARGET = ARG:2
		RESULT = 0
		;口上表示
		IF FLAG:口上文本設定 > 0
			CALL KOJO_ACTIVE_INFO(TARGET)
			;TARGET口上出力
			SIF FLAG:口上色
				TRYCALLFORM M_KOJO%RESULTS%_COLOR_K{NO:TARGET}
			SELECTCASE ARGS
			CASE "PERMISSION"
				TRYCALLFORM M_KOJO%RESULTS%_EVENT_K{NO:TARGET}_PERMISSION_{ARG:1}
			CASE "LOST_VIRGIN_STOP"
				TRYCALLFORM M_KOJO%RESULTS%_EVENT_K{NO:TARGET}_LOST_VIRGIN_STOP
			ENDSELECT
			RESETCOLOR
		ENDIF
		TARGET = LOCAL
		RETURN RESULT

	;育児
	CASE "CHILD"
		LOCAL = TARGET
		TARGET = ARG:2
		RESULT = 0
		RESULTS = 
		;口上表示
		IF FLAG:口上文本設定 > 0
			CALL KOJO_ACTIVE_INFO(TARGET)
			SIF FLAG:口上色
				TRYCALLFORM M_KOJO%RESULTS%_COLOR_K{NO:TARGET}
			SELECTCASE ARGS:1
			CASE "DAILY_口上手紙"
				TRYCCALLFORM M_KOJO%RESULTS%_EVENT_K{NO:TARGET}_CHILD_DAILY_口上手紙(ARG:3)
				CATCH
					;うっかりRETURN 1しちゃってもカバーできるようにRESULT = 2に設定
					RESULT = 2
				ENDCATCH
			CASE "DAILY_共通手紙"
				TRYCCALLFORM M_KOJO%RESULTS%_EVENT_K{NO:TARGET}_CHILD_DAILY_共通手紙(ARG:3, ARGS:2)
				CATCH
					RESULT = 2
				ENDCATCH
			CASEELSE
				TRYCCALLFORM M_KOJO%RESULTS%_EVENT_K{NO:TARGET}_CHILD_%ARGS:1%
				CATCH
					RESULT = 2
				ENDCATCH
			ENDSELECT
			RESETCOLOR
		ENDIF
		TARGET = LOCAL
		RETURN RESULT
		

	;弾幕勝負
	CASE "DANMAKU"
		LOCAL = TARGET
		TARGET = ARG:2
		RESULT = 0
		;エンカウント路人子用口上表示
		IF ARG:3 == 1 && FLAG:口上文本設定 > 0
			CALL TALK_MOBGIRL(ARGS:1, ARG:1)
			RESETCOLOR
		;口上表示
		ELSEIF FLAG:口上文本設定 > 0
			CALL KOJO_ACTIVE_INFO(TARGET)
			;TARGET口上出力
			SIF FLAG:口上色
				TRYCALLFORM M_KOJO%RESULTS%_COLOR_K{NO:TARGET}
			TRYCALLFORM M_KOJO%RESULTS%_MESSAGE_COM_K{NO:TARGET}_DANMAKU(ARGS:1, ARG:1)
			RESETCOLOR
		ENDIF
		TARGET = LOCAL
	;依頼
	CASE "IRAI"
		LOCAL = TARGET
		TARGET = ARG:1
		RESULT = 0
		;口上表示
		IF FLAG:口上文本設定 > 0
			CALL KOJO_ACTIVE_INFO(TARGET)
			;TARGET口上出力
			SIF FLAG:口上色
				TRYCALLFORM M_KOJO%RESULTS%_COLOR_K{NO:TARGET}
			RESULT = 0
			TRYCALLFORM M_KOJO%RESULTS%_IRAI_K{NO:TARGET}(ARGS:1, ARGS:2, ARG:2)
			RESETCOLOR
		ENDIF
		TARGET = LOCAL
		RETURN RESULT
	;贈り物
	CASE "GIFT"
		LOCAL = TARGET
		TARGET = ARG:2
		;口上表示
		IF FLAG:口上文本設定 > 0
			CALL KOJO_ACTIVE_INFO(TARGET)
			;TARGET口上出力
			SIF FLAG:口上色
				TRYCALLFORM M_KOJO%RESULTS%_COLOR_K{NO:TARGET}
			TRYCALLFORM M_KOJO%RESULTS%_EVENT_K{NO:TARGET}_GIFT(ARG:1, ARG:3, ARG:4, ARGS:1, ARGS:2)
			RESETCOLOR
		ENDIF
		TARGET = LOCAL
	;デイリーイベント,DIARYと綴り間違えなように
	CASE "DAILY"
		SIF FLAG:情景文本設定 <= 0 && FLAG:口上文本設定 <= 0
			RETURN -1

		LOCAL = TARGET
		TARGET = ARG:2

		;テキスト設定
		IF FLAG:口上文本設定 <= 0
		ELSE
			CALL KOJO_ACTIVE_INFO(TARGET)
			KOJO_VALID = RESULT
			KOJO_NAME '= RESULTS
			RESULT = 0
			TRYCALLFORM M_KOJO%KOJO_NAME%_DAILY_EVENT_MESSAGECHECK_K{NO:TARGET}_{ARG:1}
			SKIP_MESSAGE = GETBIT(RESULT, 0)
			SKIP_KOJO = GETBIT(RESULT, 1)
		ENDIF

		SIF !SKIP_MESSAGE && FLAG:情景文本設定 > 0
			CALLFORM DAILY_MESSAGE_{ARG:1}(ARG:2, ARG:3, ARG:4, ARG:5, ARG:6, ARGS:1, ARGS:2)
		RESULT = 0
		IF KOJO_VALID && !SKIP_KOJO
			SIF FLAG:口上色
				TRYCALLFORM M_KOJO%KOJO_NAME%_COLOR_K{NO:TARGET}
			RESULT = 0
			TRYCALLFORM M_KOJO%KOJO_NAME%_DAILY_EVENT_K{NO:TARGET}_{ARG:1}(ARG:2, ARG:3, ARG:4, ARG:5, ARG:6, ARGS:1, ARGS:2)
		ENDIF
		KOJO_RESULT = RESULT
		; ;口上表示
		; IF FLAG:口上文本設定 > 0
		; 	IF CFLAG:TARGET:口上セレクタ
		; 		TRYCALLFORM M_KOJO_K{NO:TARGET}_{CFLAG:TARGET:口上セレクタ}
		; 	ELSE
		; 		TRYCALLFORM M_KOJO_K{NO:TARGET}
		; 	ENDIF
		; 	IF RESULT
		; 		SIF FLAG:口上色
		; 			TRYCALLFORM M_KOJO%RESULTS%_COLOR_K{NO:TARGET}
		; 		TRYCCALLFORM M_KOJO%RESULTS%_DAILY_EVENT_K{NO:TARGET}_{ARG:1}(ARG:2, ARG:3, ARG:4, ARG:5, ARG:6, ARGS:1, ARGS:2)
		; 		CATCH
		; 			TRYCALLFORM DAILY_MESSAGE_{ARG:1}(ARG:2, ARG:3, ARG:4, ARG:5, ARG:6, ARGS:1, ARGS:2)
		; 		ENDCATCH
		; 		RESETCOLOR
		; 	ELSE
		; 		TRYCALLFORM DAILY_MESSAGE_{ARG:1}(ARG:2, ARG:3, ARG:4, ARG:5, ARG:6, ARGS:1, ARGS:2)
		; 	ENDIF
		; ELSE
		; 	TRYCALLFORM DAILY_MESSAGE_{ARG:1}(ARG:2, ARG:3, ARG:4, ARG:5, ARG:6, ARGS:1, ARGS:2)
		; ENDIF
		TARGET = LOCAL
		RESETCOLOR
		RETURN KOJO_RESULT
	;日記
	CASE "DIARY"
		LOCAL = TARGET
		TARGET = ARG:2
		RESULT = 0
		RESULTS = 
		;口上表示
		IF FLAG:口上文本設定 > 0
			CALL KOJO_ACTIVE_INFO(TARGET)
			;日記の存在判定
			RESULT = 0
			TRYCALLFORM DIARY%RESULTS%_K{NO:TARGET}_EXIST
			IF RESULT
				SIF FLAG:口上色
					TRYCALLFORM M_KOJO%RESULTS%_COLOR_K{NO:TARGET}
				SELECTCASE ARGS:1
				CASE "EXIST"
					RESULT = 1
				;存在判定を通っているので強制呼び出しで関数抜けチェックを兼ねる
				CASE "BEFORE_CHECK", "AFTER_CHECK"
					CALLFORM DIARY%RESULTS%_%ARGS:1%_K{NO:TARGET}
				CASE "TEXT"
					CALLFORM DIARY%RESULTS%_TEXT_K{NO:TARGET}(ARG:3, ARGS:2, ARG:4)
				ENDSELECT
				RESETCOLOR
			ENDIF
		ELSE
			RESULT = 0
		ENDIF
		TARGET = LOCAL
		RETURN RESULT
	;斗虫
	CASE "MUSHI_BATTLE"
		LOCAL = TARGET
		TARGET = ARG:2
		RESULT = 0
		RESULTS = 
		RESULTS:1 = 
		;口上表示
		IF FLAG:口上文本設定 > 0
			CALL KOJO_ACTIVE_INFO(TARGET)
			;RESULTSを使用ので退避してリセットしておく
			RESULTS:1 = %RESULTS%
			RESULTS = 
			MUSHI_NAME = %MUSHI_NAME:(MUSHI_STANDNUM:(ARG:3))%
			IF ARGS:1 == "口上色"
				TRYCALLFORM M_KOJO%RESULTS:1%_COLOR_K{NO:TARGET}
			ELSEIF GROUPMATCH(ARGS:1, "戦場に出した", "攻撃時", "倒れた時", "敗退時")
				TRYCALLFORM M_KOJO%RESULTS:1%_MESSAGE_COM_K{NO:TARGET}_MUSHI_BATTLE(ARGS:1, ARG:1)
				IF RESULTS != ""
					CALL MUSHI_MSGSET(@"%RESULTS%")
					SIF MUSHI_COLOR:(ARG:3) != MUSHI_COLOR:1
						MUSHI_MSGCL:(RESULT) = MUSHI_COLOR:(ARG:3)
				ENDIF
			ELSE
				TRYCALLFORM M_KOJO%RESULTS:1%_MESSAGE_COM_K{NO:TARGET}_MUSHI_BATTLE(ARGS:1, ARG:1)
			ENDIF
		ENDIF
		TARGET = LOCAL
	;引力
	CASE "GRAVITY"
		LOCAL = TARGET
		TARGET = ARG:2
		RESULT = 0
		;口上表示
		IF FLAG:口上文本設定 > 0
			CALL KOJO_ACTIVE_INFO(TARGET)
			TRYCALLFORM M_KOJO%RESULTS%_EVENT_K{NO:TARGET}_GRAVITY(ARG:1)
		ENDIF
		TARGET = LOCAL
	;打西瓜
	CASE "SUIKA"
		LOCAL = TARGET
		TARGET = ARG:2
		RESULT = 0
		RESULTS = 
		RESULTS:1 = 
		;口上表示
		IF FLAG:口上文本設定 > 0
			CALL KOJO_ACTIVE_INFO(TARGET)
			;RESULTSを使用ので退避してリセットしておく
			RESULTS:1 = %RESULTS%
			RESULTS = 
			SIF GROUPMATCH(ARGS:1, "衝突", "結果")
				TRYCALLFORM M_KOJO%RESULTS:1%_COLOR_K{NO:TARGET}
			TRYCALLFORM M_KOJO%RESULTS:1%_MESSAGE_COM_K{NO:TARGET}_SUIKA(ARGS:1, ARG:3)
		ENDIF
		TARGET = LOCAL
	;お出かけイベント
	CASE "ODEKAKE"
		LOCAL = TARGET
		TARGET = ARG:2
		RESULT = 0
		;口上表示
		IF FLAG:口上文本設定 > 0
			CALL KOJO_ACTIVE_INFO(TARGET)
			;TARGET口上出力
			SIF FLAG:口上色
				TRYCALLFORM M_KOJO%RESULTS%_COLOR_K{NO:TARGET}
			TRYCALLFORM RUN_INTO%RESULTS%_EVENT_K{NO:TARGET}(ARG:1)
			RESETCOLOR
		ENDIF
		TARGET = LOCAL
	;炮友契約
	CASE "SEX_FRIEND"
		LOCAL = TARGET
		TARGET = ARG:2
		RESULT = 0
		;口上表示
		IF FLAG:口上文本設定 > 0
			CALL KOJO_ACTIVE_INFO(TARGET)
			;TARGET口上出力
			SIF FLAG:口上色
				TRYCALLFORM M_KOJO%RESULTS%_COLOR_K{NO:TARGET}
			TRYCALLFORM KOJO%RESULTS%_SF_CONTRACT_EVENT_K{NO:TARGET}(ARGS:1)
			RESETCOLOR
		ENDIF
		TARGET = LOCAL
		RETURN RESULT
	;毎朝
	CASE "BEFORETRAIN"
		LOCAL = TARGET
		TARGET = ARG:2
		;口上表示
		IF FLAG:口上文本設定 > 0
			CALL KOJO_ACTIVE_INFO(TARGET)
			;TARGET口上出力
			SIF FLAG:口上色
				TRYCALLFORM M_KOJO%RESULTS%_COLOR_K{NO:TARGET}
			TRYCALLFORM K{NO:TARGET}_BEFORETRAIN%RESULTS%
			RESETCOLOR
		ENDIF
		TARGET = LOCAL
	;風チラ
	CASE "PANCHIRA", "REV_PANCHIRA"
		LOCAL = TARGET
		TARGET = ARG:2
		RESULT = 0
		;口上表示
		IF FLAG:口上文本設定 > 0
			CALL KOJO_ACTIVE_INFO(TARGET)
			;TARGET口上出力
			SIF FLAG:口上色
				TRYCALLFORM M_KOJO%RESULTS%_COLOR_K{NO:TARGET}
			SELECTCASE ARGS
			CASE "PANCHIRA"
				PRINTL 
				TRYCALLFORM M_KOJO%RESULTS%_EVENT_K{NO:TARGET}_PANCHIRA
			CASE "REV_PANCHIRA"
				PRINTL 
				TRYCALLFORM M_KOJO%RESULTS%_EVENT_K{NO:TARGET}_REV_PANCHIRA
			ENDSELECT
			RESETCOLOR
		ENDIF
		TARGET = LOCAL
		RETURN RESULT

	;いつか来る終わりの為に
	CASE "ENDING"
		;custom code, fixed to work
		LOCAL = TARGET
		TARGET = ARG:2
		RESULT = 0
		CALL KOJO_ACTIVE_INFO(TARGET)
		SIF FLAG:口上色
			TRYCALLFORM M_KOJO%RESULTS%_COLOR_K{NO:TARGET}
		TRYCALLFORM M_KOJO%RESULTS%_MESSAGE_ENDING_K{NO:TARGET}
		RESETCOLOR
		TARGET = LOCAL
		
	;カスタム素質
	CASE "CUSTOM_TALENT"
		RESULTS = 
		OriginTarget = TARGET
		TARGET = ARG:2
		CALL KOJO_ACTIVE_INFO(TARGET)
		TRYCALLFORM KOJO%RESULTS%_CUSTOM_TALENT_SET_K{NO:TARGET}
		TARGET = OriginTarget

	;自定义SHOP指令条件
	CASE "SHOP_BUTTON_CONDITION"
		RESULTS =
		;TARGET退让
		OriginTarget = TARGET
		TARGET = ARG:2
		CALL KOJO_ACTIVE_INFO(TARGET)
		TRYCCALLFORM KOJO%RESULTS%_CUSTOM_BUTTON_CONDITION_K{NO:TARGET}_{ARG:1}
			TARGET = OriginTarget
			RETURN RESULT
		CATCH
			TARGET = OriginTarget
			RETURN 0
		ENDCATCH
	;自定义SHOP指令执行
	CASE "SHOP_BUTTON"
		RESULTS =
		;TARGET退让
		OriginTarget = TARGET
		TARGET = ARG:2
		CALL KOJO_ACTIVE_INFO(TARGET)
		TRYCALLFORM KOJO%RESULTS%_CUSTOM_BUTTON_K{NO:TARGET}_{ARG:1}
		TARGET = OriginTarget
	;口上更新
	CASE "KOJO_VERSION"
		OriginTarget = TARGET
		TARGET = ARG:2
		CALL KOJO_ACTIVE_INFO(TARGET)
		;get the version of this kojo
		;if there is no such function, remain to 0
		TRYCCALLFORM KOJO%RESULTS%_VERSION_K{NO:TARGET}
			IF CFLAG:kojo_version < RESULT
				TRYCCALLFORM KOJO%RESULTS%_VERSION_UPDATE_K{NO:TARGET}
					CFLAG:kojo_version = RESULT
				CATCH
				ENDCATCH
			ENDIF
		CATCH
			CFLAG:kojo_version = 0
		ENDCATCH
		TARGET = OriginTarget
;------------------------------------------------------------
;口上自定义COM
;------------------------------------------------------------
	CASE "COM"
		SIF TARGET < 0 || TARGET >= CHARANUM
			RETURN 0
		CALL KOJO_ACTIVE_INFO(TARGET)
		SELECTCASE ARG:1
		;==== COM名称 ============
			CASE 0
				TRYCALLFORM KOJO%RESULTS%_COM_NAME_K{NO:TARGET}_{ARG:3}
		;==== COM_ABLE ===========
			CASE 1
				TRYCJUMPFORM KOJO%RESULTS%_COM_ABLE_K{NO:TARGET}_{ARG:3}
				CATCH
					RETURN 0
				ENDCATCH
		;==== COM本体 ===========-
			CASE 2
				TRYCJUMPFORM KOJO%RESULTS%_COM_K{NO:TARGET}_{ARG:3}
				CATCH
					THROW [口上COM ERROR](%NAME_OUTPUT_TRANSLATION("CALLNAME", TARGET)%\@ RESULTS:1 != "" ? _ # \@%RESULTS:1%口上)的{ARG:3}号自定义COM函数找不到
				ENDCATCH
		;==== CAN_COM ===========-
			CASE 3
				TRYCJUMPFORM KOJO%RESULTS%_CAN_COM_K{NO:TARGET}_{ARG:3}(ARG:4)
				CATCH
					RETURN -1
				ENDCATCH
		ENDSELECT
	CASE "COMMAND_ASSISTANT"
		;テキスト設定
		IF FLAG:口上文本設定 <= 0
			RETURN 0
		ENDIF
		;ボールギャグ時
		IF TEQUIP:(ARG:2):20 && SELECTCOM != 107
		ELSEIF (FLAG:70 && !CFLAG:(ARG:2):時間停止口上有) || (CFLAG:(ARG:2):恶作剧 >= 1 && !CFLAG:(ARG:2):眠姦口上有) || (FLAG:扮演 && !CFLAG:(ARG:2):扮演口上有)
		ELSE
			LOCAL:10 = TARGET
			TARGET = ARG:2
			RESULT = 0
			RESULTS =
			;口上の存在判定 and RESULTSに文字列代入
			CALL KOJO_ACTIVE_INFO(TARGET)
			IF !RESULT
				TARGET = LOCAL:10
				RETURN 0
			ENDIF
			KOJO_VALID = RESULT
			KOJO_NAME '= RESULTS
			SIF FLAG:口上色
				CALL SET_KOJO_COLOR()
			IF TFLAG:50
				LOCAL = TFLAG:50
				LOCALS = SCOM
			ELSE
				LOCAL = SELECTCOM
				LOCALS = COM
			ENDIF

			TRYCALLFORM M_KOJO%KOJO_NAME%_MESSAGE_%LOCALS%_K{NO:TARGET}_{LOCAL}_2
			TARGET = LOCAL:10
			RESETCOLOR
		ENDIF
	CASE "CHECK"
		SIF FLAG:口上文本設定 <= 0
			RETURN 0
			
		LOCAL = TARGET
		TARGET = ARG:2
		CALL KOJO_ACTIVE_INFO(TARGET)
		IF !RESULT
			TARGET = LOCAL
			RETURN 0
		ENDIF
		KOJO_VALID = RESULT
		KOJO_NAME '= RESULTS
		LOCAL:1 = GETCOLOR()
		SIF FLAG:口上色
			TRYCALLFORM M_KOJO%KOJO_NAME%_COLOR_K{NO:TARGET}
		KOJO_RESULT = 0
		RESULT = 0
		IF FLAG:口上文本設定 > 0
			TRYCCALLFORM M_KOJO%KOJO_NAME%_CHECK_K{NO:TARGET}_%ARGS:1%(ARGS:2,ARG:3,ARG:4)
				SIF RESULT == 0 	;对于口上侧等于0的情况，用-1以保证能覆盖掉原版设定
					RESULT = -1 
			CATCH

			ENDCATCH
		ENDIF 
		KOJO_RESULT = RESULT
		SETCOLOR LOCAL:1
		TARGET = LOCAL
		RETURN KOJO_RESULT
ENDSELECT

;COUNTER has been split from the others because it is called through TRAIN_MESSAGE, which would lead to the local variables being overwritten in KOJO_MESSAGE_SEND
@KOJO_MESSAGE_SEND_COUNTER(ARG:1, ARG:2, ARG:3, ARG:4, ARGS:1, ARGS:2, ARG:5, ARG:6)
#DIM  DYNAMIC KOJO_VALID
#DIMS DYNAMIC KOJO_NAME
#DIM  DYNAMIC SKIP_MESSAGE
#DIM  DYNAMIC SKIP_KOJO
#DIM  DYNAMIC KOJO_RESULT

SIF FLAG:情景文本設定 <= 0 && FLAG:口上文本設定 <= 0
	RETURN -1

LOCAL = TARGET
TARGET = ARG:2

;テキスト設定
IF FLAG:口上文本設定 <= 0
ELSEIF TEQUIP:TARGET:口球
ELSEIF FLAG:扮演 && !CFLAG:TARGET:扮演口上有
ELSE
	CALL KOJO_ACTIVE_INFO(TARGET)
	KOJO_VALID = RESULT
	KOJO_NAME '= RESULTS
		
	RESULT = 0
	TRYCALLFORM M_KOJO%KOJO_NAME%_MESSAGE_COUNTER_MESSAGECHECK_K{NO:TARGET}_{TCVAR:20}
	SKIP_MESSAGE = GETBIT(RESULT, 0)
	SKIP_KOJO = GETBIT(RESULT, 1)
ENDIF

SIF !SKIP_MESSAGE && FLAG:情景文本設定 > 0
	CALL EVENT_COUNTER_MESSAGE

RESULT = 0
IF KOJO_VALID && !SKIP_KOJO
	SIF FLAG:口上色
		TRYCALLFORM M_KOJO%KOJO_NAME%_COLOR_K{NO:TARGET}
	RESULT = 0
	TRYCALLFORM M_KOJO%KOJO_NAME%_MESSAGE_COUNTER_K{NO:TARGET}_{TCVAR:20}
ENDIF
KOJO_RESULT = RESULT
TARGET = LOCAL
RESETCOLOR
RETURN KOJO_RESULT


@KOJO_MESSAGE_PALAMCNG_CHECK(ARG, ARGS, ARGS:1, ARGS:2)
;if a MESSAGECHECK exists, we assume that the matching dialogue function exists, too
TRYCCALLFORM M_KOJO%ARGS%_MESSAGE_PALAMCNG_MESSAGECHECK_%ARGS:1%_K{NO:TARGET}_%ARGS:2%
    SIF !RESULT && FLAG:情景文本設定 > 0
        CALL PALAM_MESSAGE_A

    SIF FLAG:口上色
        TRYCALLFORM M_KOJO%ARGS%_COLOR_K{NO:TARGET}
    TRYCALLFORM M_KOJO%ARGS%_MESSAGE_PALAMCNG_%ARGS:1%_K{NO:TARGET}_%ARGS:2%(ARG)
    RETURN 1
CATCH ;no message check, try to handle it in the old style. These functions will be expected to call PALAM_MESSAGE_A themselves if they want to use it
    SIF FLAG:口上色
        TRYCALLFORM M_KOJO%ARGS%_COLOR_K{NO:TARGET}
    TRYCCALLFORM M_KOJO%ARGS%_MESSAGE_PALAMCNG_%ARGS:1%_K{NO:TARGET}_%ARGS:2%(ARG)
        RETURN 1
    CATCH
    ENDCATCH
ENDCATCH
RETURN 0

;魔改内容，增加口上来源者名字
;直接这么加不行，先注释掉，总感觉这个可能没法加
;SELECTCASE ARGS
;	CASE "EXTRASOURCE", "FLAGSETTING"
;		
;	CASEELSE
;		IF RESULT && (NO:TARGET)
;			PRINTL
;			PRINTFORML ————————%NAME_OUTPUT_TRANSLATION("CALLNAME", (NO:TARGET))%
;		ENDIF
;ENDSELECT
;-------------------------------------------------
;@KOJO_MESSAGE_PALAMCNG_A2
;射精口上出力のギミック
;-------------------------------------------------
@KOJO_MESSAGE_PALAMCNG_A2(ARG)
#DIM KOJO_VALID
#DIMS KOJO_NAME
VARSET RESULTS
VARSET RESULT
;ARG Wフェラ等でTARGETならARG=0、二人目ならARG=1
CALL KOJO_ACTIVE_INFO(TARGET)
KOJO_VALID = RESULT
KOJO_NAME '= RESULTS

IF !KOJO_VALID
ELSEIF FLAG:口上文本設定 <= 0
ELSEIF FLAG:70 && !CFLAG:時間停止口上有
ELSEIF FLAG:扮演 && !CFLAG:扮演口上有
ELSE
	;-------------------------------------------------
	;射精対象が非ターゲットかつ非複数角色SCOMF射精
	;-------------------------------------------------
	IF MASTER_POSE(0,SET_P) != TARGET && !ARG
		IF CFLAG:恶作剧 
			CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A2", "00")
		ELSE
			CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A", "00")
		ENDIF
		SIF RESULT
			RETURN
	ENDIF
	;-------------------------------------------------
	;避孕套
	;-------------------------------------------------
	IF GETBIT(TCVAR:50,0)
		IF CFLAG:恶作剧 
			CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A2", "0")
		ELSE
			CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A", "0")
		ENDIF
		SIF RESULT
			RETURN
	ENDIF
	;-------------------------------------------------
	;授乳PLAY
	;-------------------------------------------------
	IF GETBIT(TCVAR:50,26)
		CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A", "26")
		SIF RESULT
		RETURN
	ENDIF
	;魔改内容（但这个算少了个接口吧，这原版有问题啊）
	;-------------------------------------------------
	;子宮口責め
	;-------------------------------------------------
	IF GETBIT(TCVAR:50,24)
		IF CFLAG:恶作剧 
			CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A2", "24")
		ELSE
			CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A", "24")
		ENDIF
		SIF RESULT
			RETURN
	ENDIF
	;魔改完成
	;-------------------------------------------------
	;深喉插入
	;-------------------------------------------------
	IF GETBIT(TCVAR:50,23)
		IF CFLAG:恶作剧 
			CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A2", "23")
		ELSE
			CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A2", "23")
		ENDIF
		SIF RESULT
			RETURN
	ENDIF
	;-------------------------------------------------
	;六九式
	;-------------------------------------------------
	IF GETBIT(TCVAR:50,22)
		CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A", "22")
		SIF RESULT
			RETURN
	ENDIF
	;-------------------------------------------------
	;乳夾口交
	;-------------------------------------------------
	IF GETBIT(TCVAR:50,21)
		CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A", "21")
		SIF RESULT
			RETURN
	ENDIF
	;-------------------------------------------------
	;手淫口交
	;-------------------------------------------------
	IF GETBIT(TCVAR:50,20)
		CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A", "20")
		SIF RESULT
			RETURN
	ENDIF
	;-------------------------------------------------
	;肛門奉仕
	;-------------------------------------------------
	IF GETBIT(TCVAR:50,9)
		CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A", "9")
		SIF RESULT
			RETURN
	ENDIF
	;-------------------------------------------------
	;泡泡浴
	;-------------------------------------------------
	IF GETBIT(TCVAR:50,8)
		CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A", "8")
		SIF RESULT
			RETURN
	ENDIF
	;-------------------------------------------------
	;足交
	;-------------------------------------------------
	IF GETBIT(TCVAR:50,7)
		IF CFLAG:恶作剧 
			CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A2", "7")
		ELSE
			CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A", "7")
		ENDIF
		SIF RESULT
			RETURN
	ENDIF
	;-------------------------------------------------
	;素股
	;-------------------------------------------------
	IF GETBIT(TCVAR:50,6)
		CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A", "6")
		SIF RESULT
			RETURN
	ENDIF
	;-------------------------------------------------
	;乳交
	;-------------------------------------------------
	IF GETBIT(TCVAR:50,5)
		IF CFLAG:恶作剧 
			CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A2", "5")
		ELSE
			CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A", "5")
		ENDIF
		SIF RESULT
			RETURN
	ENDIF
	;-------------------------------------------------
	;口交
	;-------------------------------------------------
	IF GETBIT(TCVAR:50,4)
		IF CFLAG:恶作剧 
			CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A2", "4")
		ELSE
			CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A", "4")
		ENDIF
		SIF RESULT
			RETURN
	ENDIF
	;-------------------------------------------------
	;手淫
	;-------------------------------------------------
	IF GETBIT(TCVAR:50,3)
		IF CFLAG:恶作剧 
			CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A2", "3")
		ELSE
			CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A", "3")
		ENDIF
		SIF RESULT
			RETURN
	ENDIF
	;-------------------------------------------------
	;肛門
	;-------------------------------------------------
	IF GETBIT(TCVAR:50,2)
		IF CFLAG:恶作剧 
			CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A2", "2")
		ELSE
			CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A", "2")
		ENDIF
		SIF RESULT
			RETURN
	ENDIF
	;-------------------------------------------------
	;膣内
	;-------------------------------------------------
	IF GETBIT(TCVAR:50,1)
		IF CFLAG:恶作剧 
			CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A2", "1")
		ELSE
			IF TCVAR:TARGET:外に出すから
				RETURN
			ELSE
			CALL KOJO_MESSAGE_PALAMCNG_CHECK(ARG, KOJO_NAME, "A", "1")
			ENDIF
		ENDIF
		SIF RESULT
			RETURN
	ENDIF
ENDIF

;nothing found, show normal description
SIF FLAG:情景文本設定 > 0
    CALL PALAM_MESSAGE_A
; CALL PALAM_MESSAGE_A
; RESETCOLOR
; RETURN 0

@SILENCE_TSTOP(ARG)
#FUNCTION
;時間停止中には喋らない角色を指定
SIF GROUPMATCH(ARG,39,41,54,86,87,88)
	RETURNF 1

;展示口上自定义变量
@showKojoCustomTalent(chara)
	#DIM chara
	#DIM index
	#DIM DYNAMIC length = 1
	#DIM DYNAMIC titlePrint
	FOR index, 0, MAX_CUSTOM_TALENT
		IF custom_talent:chara:index
			;初个
			IF !titlePrint
				PRINT 　 口上 　：
				titlePrint = 1
			ENDIF
			IF length > 60
				length = 1
				PRINTL
				PRINT 　　　　　　
			ENDIF
			;打印
			SIF custom_talent_color:chara:index
				SETCOLOR custom_talent_color:chara:index
			PRINTFORM [%custom_talent_name:chara:index%]
			RESETCOLOR
			length += 2
			length += STRLENS(custom_talent_name:chara:index)
		ENDIF
	NEXT
	PRINTL

;创建有知道他shop指令的角色列表
@createKojoShopButtonTargetList
	#DIM chara
	#DIM index
	VARSET ShopButtonTargetList, 0
	ShopButtonTargetNum = 0
	FOR chara, 0, CHARANUM
		;判断这个角色是否有自定义button
		FOR index, 0, 10
			CALL KOJO_MESSAGE_SEND("SHOP_BUTTON_CONDITION", index, chara)
			IF RESULT == 1
				ShopButtonTargetList:ShopButtonTargetNum = chara
				ShopButtonTargetNum ++
				BREAK
			ENDIF
		NEXT
	NEXT
	;没有
	SIF ShopButtonTargetNum == 0
		RETURN
	ShopButtonTargetId = FINDELEMENT(ShopButtonTargetList, ShopButtonTarget)
	;默认选第一个
	IF ShopButtonTargetId == -1 || ShopButtonTargetId >= ShopButtonTargetNum
		ShopButtonTargetId = 0
		ShopButtonTarget = ShopButtonTargetList:ShopButtonTargetId
	ENDIF

;展示口上自定义shop指令
@showKojoShopButton
	#DIM index
	#DIMS DYNAMIC buttonList, 10
	#DIM DYNAMIC buttonIndex
	#DIM DYNAMIC printNum
	;没有
	SIF ShopButtonTargetNum == 0
		RETURN
	PRINTL
	SETCOLOR 103,228,126
	PRINT 【天堂之门】
	;上个角色
	IF ShopButtonTargetId <= 0
		SETCOLOR 0x747474
		PRINTPLAIN 【＜】
		RESETCOLOR
	ELSE
		SETCOLOR 103,228,126
		PRINTBUTTON "【＜】", 798
	ENDIF
	SETCOLOR 103,228,126
	PRINTBUTTON @"【%NAME_OUTPUT_TRANSLATION("CALLNAME", ShopButtonTarget)%】", 797
	RESETCOLOR
	IF ShopButtonTargetId + 1 >= ShopButtonTargetNum
		SETCOLOR 0x747474
		PRINTPLAIN 【＞】
	ELSE
		SETCOLOR 103,228,126
		PRINTBUTTON "【＞】", 799
	ENDIF
	RESETCOLOR
	;统计可用的button
	FOR index, 0, 10
		CALL KOJO_MESSAGE_SEND("SHOP_BUTTON_CONDITION", index, ShopButtonTarget)
		IF RESULT
			SIF printNum % 3 == 0
				PRINTL
			PRINTFORMLC [{800 + index}] %custom_button_name:ShopButtonTarget:index%
			printNum ++
		ENDIF
	NEXT
	PRINTL

;使用口上自定义shop指令
@useKojoShopButton, comId
	#DIM comId
	;PRINTFORML comid {comId} ShopButtonTarget{ShopButtonTarget}
	CALL KOJO_MESSAGE_SEND("SHOP_BUTTON_CONDITION", comId, ShopButtonTarget)
	SIF RESULT
		CALL KOJO_MESSAGE_SEND("SHOP_BUTTON", comId, ShopButtonTarget)
	WAIT
;切换自定义shop按钮的角色
@choiceButtonTarget
	#DIM line
	#DIM DYNAMIC page
	#DIM DYNAMIC maxPage
	#DIM index
	maxPage = ShopButtonTargetNum / 20
	SIF ShopButtonTargetNum % 20
		maxPage ++
	line = LINECOUNT
	WHILE 1
		DRAWLINE
		PRINTFORML 拥有SHOP指令口上的角色 ＜page.{page + 1}/{maxPage}＞
		DRAWLINE
		FOR index, page * 20, MIN(page * 20 + 20, ShopButtonTargetNum)
			CALL CHARA_BUTTON(index, ShopButtonTargetList:index)
		NEXT
		DRAWLINE
		IF page > 0
			PRINTLC [4444] 上一页
		ELSE
			PRINTLC 　
		ENDIF
		PRINTLC [5555] 返回
		IF page + 1 < maxPage
			PRINTLC [6666] 下一页
		ELSE
			PRINTLC 　
		ENDIF
		INPUT
		SELECTCASE RESULT
			CASE page * 20 TO MIN(page * 20 + 20, ShopButtonTargetNum)
				ShopButtonTargetId = RESULT
				ShopButtonTarget = ShopButtonTargetList:ShopButtonTargetId
				RETURN
			CASE 4444
				SIF page > 0
					page --
			CASE 6666
				SIF page + 1 < maxPage
					page ++
			CASE 5555
				RETURN
		ENDSELECT
		CLEARLINE LINECOUNT - line
	WEND
