;===================================================================
;this plusin is used for claculating color, you can use it to claculate the color
;
;function introduce:
;about word color
;	set word color:							a_setcolor, color(0xrrggbb), alpha(0-255)
;	reset word color:						a_resetcolor, alpha(0-255)
;	set word color to the callname color	set_callname_color, target_id, alpha = -999
;
;utils function:
;	claculate the color with alpha			alpha_color, color, alpha
;	mix two color with weight:				color_mix, color1, weight1, color2, weight2
;	translator 0xRRGGBB to r,g,b			hex_to_rgb
;	translator r,g,b to 0xRRGGBB			rgb_to_hex
;
;other:
;	judge the cartoon can be playing		judge the cartoon can be playing
;===================================================================

;set word color
@a_setcolor, color, alpha
	#DIM color
	#DIM alpha
	color = alpha_color(color, LIMIT(alpha, 0, 255))
	SETCOLOR color

;reset background color
@a_resetcolor, alpha
	#DIM color
	#DIM alpha
	SETCOLOR alpha_color(GETDEFCOLOR(), LIMIT(alpha, 0, 255))

;claculate the color with alpha, background color is GETBGCOLOR()
@alpha_color, color, alpha
	#FUNCTION
	#DIM color
	#DIM alpha
	alpha = LIMIT(alpha, 0, 255)
	RETURNF color_mix(color, alpha, GETBGCOLOR(), (255 - alpha))

;set word color to the callname color, you can ignore alpha
@set_callname_color, target_id, alpha = -999
	#DIM target_id
	#DIM alpha
	#DIM color
	SIF alpha == -999
		alpha = 255
	;IF FLAG:10 & 16
		IF TALENT:target_id:性別 == 3
			color = 0x00FF00
		ELSEIF TALENT:target_id:性別 == 2
			color = 0x0080FF
		ELSE
			color = 0xFF80FF
		ENDIF
	;ELSE
	;	color = GETDEFCOLOR()
	;ENDIF
	SETCOLOR alpha_color(color, LIMIT(alpha, 0, 255))

;mix two color
@color_mix, color1, weight1, color2, weight2
	#FUNCTION
	#DIM color1
	#DIM weight1
	#DIM color2
	#DIM weight2
	#DIM red, 3
	#DIM green, 3
	#DIM blue, 3
	;color1
	blue:0 = color1 % 256
	color1 /= 256
	green:0 = color1 % 256
	red:0 = color1 / 256
	;color2
	blue:1 = color2 % 256
	color2 /= 256
	green:1 = color2 % 256
	red:1 = color2 / 256
	;mix
	red:2 = (red:0 * weight1 + red:1 * weight2) / (weight1 + weight2)
	blue:2 = (blue:0 * weight1 + blue:1 * weight2) / (weight1 + weight2)
	green:2 = (green:0 * weight1 + green:1 * weight2) / (weight1 + weight2)
	RETURNF rgb_to_hex(red:2, green:2, blue:2)

;from 0xRRGGBB to rgb
@hex_to_rgb, color
	#DIM color
	#DIM red
	#DIM green
	#DIM blue
	blue = color % 256
	color /= 256
	green = color % 256
	red = color / 256
	RETURN red, green, blue

;from rgb to 0xRRGGBB
@rgb_to_hex, red, green, blue
	#FUNCTION
	#DIM color
	#DIM red
	#DIM green
	#DIM blue
	RETURNF red * 65536 + green * 256 + blue

;judge the cartoon can be playing
;when it isn't mouse skip and the cartoon setting is open
;it will return 0
;else it will return 1
@cartoon_play
	#FUNCTION
;	SIF !(FLAG:10 & 1024)
;		RETURNF 0
	MESSKIP
	SIF RESULT
		RETURNF 0
	RETURNF 1

@hex_to_str, num
	#FUNCTIONS
	#DIM num
	#DIM unit
	#DIMS DYNAMIC out
	SIF num > 0xFFFFFF
		DEBUGPRINTFORML 警告大于0xFFFFFF的数被传入({num})
	WHILE 1
		unit = num % 16
		SELECTCASE unit
			CASE 0 TO 9
				out = {unit}%out%
			CASE 10
				out = A%out%
			CASE 11
				out = B%out%
			CASE 12
				out = C%out%
			CASE 13
				out = D%out%
			CASE 14
				out = E%out%
			CASE 15
				out = F%out%
		ENDSELECT
		num /= 16
		SIF num == 0
			BREAK
	WEND
	DEBUGPRINTFORML 返回值 = %out%
	RETURNF out