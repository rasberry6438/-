[SKIPSTART]
;;;ラッパー関数
@カラム生成, カラム, カラムメニュー:0, カラムメニュー:1, カラムメニュー:2, カラムメニュー:3, カラムメニュー:4, カラムメニュー:5, カラムメニュー:6, カラムメニュー:7, カラムメニュー:8, カラムメニュー:9
#DIMS カラム
#DIMS DYNAMIC カラムメニュー, 10
#DIM DYNAMIC LINE

DO
	LINE = LINECOUNT
	CALL カラム生成2, カラム, カラムメニュー:0, カラムメニュー:1, カラムメニュー:2, カラムメニュー:3, カラムメニュー:4, カラムメニュー:5, カラムメニュー:6, カラムメニュー:7, カラムメニュー:8, カラムメニュー:9
	CLEARLINE LINECOUNT - LINE
LOOP 1


@カラム生成2, カラム, カラムメニュー:0, カラムメニュー:1, カラムメニュー:2, カラムメニュー:3, カラムメニュー:4, カラムメニュー:5, カラムメニュー:6, カラムメニュー:7, カラムメニュー:8, カラムメニュー:9, MAX_LINE = 31
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC LINE
;MAX_LINEは可変にしてみる
#DIM MAX_LINE
#DIM 表示カラム
#DIM DYNAMIC 文字数計算用
#DIM DYNAMIC 行文字数 = STRLENSU(GETLINESTR("─"))
#DIM DYNAMIC 平文文字数
#DIMS DYNAMIC カラムメニュー, 10
#DIM DYNAMIC カラム数
#DIMS カラム
REDRAW 0

ARRAYCOPY "カラムメニュー", "カラム名"

FOR LCOUNT, 0, VARSIZE("カラムメニュー")
	IF カラムメニュー:LCOUNT == ""
		カラム数 = LCOUNT
		BREAK
	ENDIF
NEXT

CALL CHECKDRAWLINE

FOR LCOUNT, 0, VARSIZE("カラムメニュー")
	文字数計算用 = MAX(STRLENSU(カラムメニュー:LCOUNT)+3, 文字数計算用)
NEXT

;罫線3つ分引いてSTRLENSU→STRLENS変換で2倍
平文文字数 = (行文字数-文字数計算用-3)*2

;VARSET カラム行
VARSET COLUMNDIVLOG

CALL COLUMNDIVRESIZE, 0, (行文字数-文字数計算用-3)*100, MAX_LINE*GETCONFIG("一行の高さ")
CALL COLUMNDIVMOVE, 0, (文字数計算用+2)*100, MAX_LINE*GETCONFIG("一行の高さ")

CALLFORM %カラム%_%カラムメニュー:選択カラム%

FOR LINE, 0, MAX_LINE+2
	FOR LCOUNT, 0, 行文字数
		SELECTCASE LINE
			CASE 0
				SELECTCASE LCOUNT
					CASE 0
						PRINT ┌
					CASE 行文字数-1
						PRINT ┐
					CASEELSE
						IF LCOUNT == 文字数計算用+1 && 選択カラム != 0
							PRINT ┬
						ELSE
							PRINT ─
						ENDIF
				ENDSELECT
			CASE MAX_LINE+1
				SELECTCASE LCOUNT
					CASE IS < 文字数計算用+1
						PRINT 　
					CASE 文字数計算用+1
						PRINT └
					CASE 行文字数-1
						PRINT ┘
					CASEELSE
						PRINT ─
				ENDSELECT
			CASEELSE
				IF LINE/2 < カラム数
					IF LINE%2
						SELECTCASE LCOUNT
							CASE 0
								PRINTFORM │[{LINE/2+100}] %カラムメニュー:(LINE/2), (文字数計算用-3)*2, LEFT%
							CASE 行文字数-1
								PRINT │
							CASE IS > 文字数計算用
								IF LCOUNT == 文字数計算用+1
									IF 選択カラム != LINE/2
										PRINTPLAIN │
									ELSE
										PRINTPLAIN 　
									ENDIF
								ELSEIF LCOUNT == 文字数計算用+2
									PRINTFORM %" ", 平文文字数, LEFT%
									LCOUNT = 行文字数 - 2
								ENDIF
						ENDSELECT
					ELSE
						SELECTCASE LCOUNT
							CASE 0
								PRINT ├
							CASE IS <= 文字数計算用
								PRINT ─
							CASE 文字数計算用+1
								IF 選択カラム < LINE/2
									IF LINE == (選択カラム*2)+2
										PRINTPLAIN ┐
									ELSE
										PRINTPLAIN ┤
									ENDIF
								ELSE
									IF LINE == (選択カラム*2)
										PRINTPLAIN ┘
									ELSE
										PRINTPLAIN ┤
									ENDIF
								ENDIF
							CASE 行文字数-1
								PRINTPLAIN │
							CASE 文字数計算用+2
								PRINTFORM %" ", 平文文字数, LEFT%
								LCOUNT = 行文字数 - 2
						ENDSELECT
					ENDIF
				ELSEIF LINE/2 == カラム数 && LINE%2 == 0
					SELECTCASE LCOUNT
						CASE 0
							PRINT └
						CASE IS <= 文字数計算用
							PRINT ─
						CASE 文字数計算用+1
							IF LINE == (選択カラム*2)+2
								PRINTPLAIN ┐
							ELSE
								PRINTPLAIN ┤
							ENDIF
						CASE 行文字数-1
							PRINTPLAIN │
						CASE 文字数計算用+2
							PRINTFORM %" ", 平文文字数, LEFT%
							LCOUNT = 行文字数 - 2
					ENDSELECT
				ELSE
					SELECTCASE LCOUNT
						CASE IS < 文字数計算用+1
							PRINT 　
						CASE 文字数計算用+1
							PRINTPLAIN │
						CASE 行文字数-1
							PRINTPLAIN │
						CASE 文字数計算用+2
							PRINTFORM %" ", 平文文字数, LEFT%
							LCOUNT = 行文字数 - 2
					ENDSELECT
				ENDIF
		ENDSELECT
	NEXT
	IF LINE == MAX_LINE+1
		CALL COLUMNDIVSHOW, MAX_LINE
	ELSE
		PRINTL 
	ENDIF
NEXT

INPUT

SELECTCASE RESULT
	CASE 100 TO 110
		選択カラム = RESULT-100
		CRESULT:1 = -1
	CASEELSE
		CRESULT:0 = 選択カラム
		CRESULT:1 = RESULT
		CALLFORM %カラム%_%カラムメニュー:選択カラム%_INPUT
		REDRAW 1
ENDSELECT

@COLUMNDIVCREATE, ARG
SIF COLUMNDIV:ARG:COLUNMDIV_CREATED
	RETURN 0

COLUMNDIV:ARG:COLUNMDIV_CREATED = 1
RETURN 1

@COLUMNDIVRESIZE, ARG, ARG:1, ARG:2
COLUMNDIV:ARG:COLUNMDIV_WIDTH = ARG:1
COLUMNDIV:ARG:COLUNMDIV_HEIGHT = ARG:2

@COLUMNDIVMOVE, ARG, ARG:1, ARG:2
COLUMNDIV:ARG:COLUNMDIV_XPOS = ARG:1
COLUMNDIV:ARG:COLUNMDIV_YPOS = -ARG:2

@COLUMNDIVPRINT, ARG, ARGS, ARGS:1
CALL COLUMNDIVSHIFT(ARG, ARGS, ARGS:1)

@COLUMNDIVPRINTL, ARG, ARGS, ARGS:1
CALL COLUMNDIVSHIFT(ARG, ARGS, ARGS:1)
COLUMNDIV:ARG:COLUNMDIV_LINE++

@COLUMNDIVIMG, ARG, ARGS, ARG:1, ARG:2
CALL GCREATESTACK, ARGS
COLUMNDIVLOG:ARG:(COLUMNDIV:ARG:COLUNMDIV_LINE) += @"<img src='%ESCAPE(ARGS)%' srcb='' width='{ARG:1}' height='{ARG:2}'>"

@COLUMNDIVSHIFT, ARG, ARGS, ETC
#DIM DYNAMIC LCOUNT
#DIMS DYNAMIC ETC

SIF COLOR_FROMNAME(ETC) >= 0
	ARGS = <font color='%ETC%'>%ARGS%</font>

COLUMNDIVLOG:ARG:(COLUMNDIV:ARG:COLUNMDIV_LINE) += ARGS

@COLUMNDIVBGCOLOR, ARG, ARG:1
COLUMNDIV:ARG:COLUNMDIV_BGCOLOR = ARG:1

@COLUMNDIVBORDER, ARG, ARG:1
COLUMNDIV:ARG:COLUNMDIV_BORDER = ARG:1

@COLUMNDIVBCOLOR, ARG, ARG:1
COLUMNDIV:ARG:COLUNMDIV_BCOLOR = ARG:1

@COLUMNDIVRADIUS, ARG, ARG:1
COLUMNDIV:ARG:COLUNMDIV_RADIUS = ARG:1

@COLUMNDIVSHOW, MAX_LINE = 31
#DIM DYNAMIC LCOUNT
#DIM DYNAMIC LCOUNT2
#DIM DYNAMIC LCOUNT3
#DIMS DYNAMIC HTML
#DIMS DYNAMIC REVERSELOG, 10000
#DIM DYNAMIC LOGCOUNT

#DIMS DYNAMIC 本文, 10
#DIM DYNAMIC ボタン, 10
#DIMS DYNAMIC 文字列ボタン, 10
#DIM DYNAMIC ボタン化
#DIM DYNAMIC 括弧, 2
#DIM DYNAMIC ボタン数
#DIM DYNAMIC 開始位置

#DIM DYNAMIC 改行回数

#DIM MAX_LINE

CLEARLINE 1

;ボタンの数値が指定されたボタン番号と一致すると困るので、ボタン化されなさそうな数値に 元ネタ分かる人はすごい
VARSET ボタン, -3189415

HTML += "<nobr>"

FOR LCOUNT, 0, 10
	SIF COLUMNDIV:LCOUNT:0 == 0
		CONTINUE
	HTML += @"<div rect='{COLUMNDIV:LCOUNT:COLUNMDIV_XPOS}, {COLUMNDIV:LCOUNT:COLUNMDIV_YPOS}px, {COLUMNDIV:LCOUNT:COLUNMDIV_WIDTH}, {COLUMNDIV:LCOUNT:COLUNMDIV_HEIGHT}px'"
	
	SIF COLUMNDIV:LCOUNT:COLUNMDIV_BGCOLOR
		HTML += @"color='#%CONVERT(COLUMNDIV:LCOUNT:COLUNMDIV_BGCOLOR, 16)%' "
	SIF COLUMNDIV:LCOUNT:COLUNMDIV_BORDER
		HTML += @"border='{COLUMNDIV:LCOUNT:COLUNMDIV_BORDER}px' "
	SIF COLUMNDIV:LCOUNT:COLUNMDIV_BCOLOR
		HTML += @"bcolor='#%CONVERT(COLUMNDIV:LCOUNT:COLUNMDIV_BCOLOR, 16)%' "
	SIF COLUMNDIV:LCOUNT:COLUNMDIV_RADIUS
		HTML += @"radius='{COLUMNDIV:LCOUNT:COLUNMDIV_RADIUS}px' "
	
	HTML += ">"

	FOR LCOUNT2, 0, COLUMNDIV:LCOUNT:COLUNMDIV_LINE
		SIF MAX_LINE <= LCOUNT2
			BREAK
		VARSET 本文
		本文:0 = %COLUMNDIVLOG:LCOUNT:LCOUNT2%
		開始位置 = 0
		FOR LCOUNT3, 0, 10
			括弧 = STRFINDU(本文:LCOUNT3, "[")
			括弧:1 = STRFINDU(本文:LCOUNT3, "]")

			IF 括弧 != -1 && 括弧:1 != -1
				;STRFIND系使うと"[～]"の範囲を取得してるので"["と"]"を省くために+1と-1する
				文字列ボタン:LCOUNT3 = %SUBSTRINGU(本文:LCOUNT3, 括弧+1, 括弧:1-括弧-1)%
				SIF ISNUMERIC(文字列ボタン:LCOUNT3)
					ボタン:LCOUNT3 = TOINT(文字列ボタン:LCOUNT3)
			ENDIF
			開始位置 = STRFINDU(本文:LCOUNT3, "[", 括弧:1)
			;DEBUGPRINTFORML 開始位置 {開始位置}
			IF 開始位置 > 0
				本文:(LCOUNT3+1) = %SUBSTRINGU(本文:LCOUNT3, 開始位置, -1)%
				IF LCOUNT3 == 0
					本文:LCOUNT3 = %SUBSTRINGU(本文:LCOUNT3, 0, 開始位置)%
				ELSE
					本文:LCOUNT3 = %SUBSTRINGU(本文:LCOUNT3, 括弧, 開始位置-括弧)%
				ENDIF
			ELSE
				BREAK
			ENDIF
		NEXT
		FOR LCOUNT3, 0, 10
			IF ボタン:LCOUNT3 != -3189415
				HTML += @"<button value ='{ボタン:LCOUNT3}'>%本文:LCOUNT3%</button>"
			ELSEIF 文字列ボタン:LCOUNT3 != ""
				HTML += @"<button value ='%文字列ボタン:LCOUNT3%'>%本文:LCOUNT3%</button>"
			ELSE
				HTML += @"%本文:LCOUNT3%"
			ENDIF
		NEXT
		HTML += "<br>"
		VARSET ボタン, -3189415
		VARSET 文字列ボタン
	NEXT
	COLUMNDIV:LCOUNT:COLUNMDIV_LINE = 0
	HTML += "</div></nobr>"
NEXT


HTML_PRINT HTML

;;;現在表示してる最後の行がDRAWLINE行かどうかをチェックし、そうでなければDRAWLINEを引く関数
@CHECKDRAWLINE
SIF HTML_TOPLAINTEXT(HTML_GETPRINTEDSTR(0)) != DRAWLINESTR
	DRAWLINE

;;;上記CHECKDRAWLINEのWAIT付き版
@CHECKDRAWLINEW
IF HTML_TOPLAINTEXT(HTML_GETPRINTEDSTR(0)) != DRAWLINESTR
	WAIT
	DRAWLINE
ENDIF
[SKIPEND]