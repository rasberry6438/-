;-----------------------------------------------------------
;MOB割当の覚書
; 0～19はゲーム毎にリセット/着衣のみ
;20～39は毎日リセット/裸画像有り
;90以降はCSV割当の固定枠
;0～10	各地域土産物屋
;11		（拠点増設時予備）
;12		索道人里側
;13		鈴奈庵（小鈴不在時）
;14		人里温泉
;15		守谷くじ
;16		索道守谷側
;17		紅魔賭場
;18		月酒屋
;19		人里酒屋
;20		エンカウント販売員
;21～23	エンカウント子分貉
;24		エンカウント野篦坊
;25～26	丁半博打参加者
;27		受付水子作成枠

;90		土産物屋路人男
;91～94	路人博徒（山童/河童/鴉天狗/蟒蛇）
;95		賭場代貸

;-----------------------------------------------------------
;路人子作成の改変
@路人店員画像作成(店員番号, ARGS = "")
{
#DIMS 種族, 路人子店員最大枠 =  "赤巫女", "尼", "人妻", "女仆妖精", "因幡",
								"妖精", "僵尸妖精", "死库水河童", "白狼天狗", "鬼",
								"玉兎", "", "人妻", "看店", "番台ちゃん", 
								"緑巫女", "河童", "兔女郎妖精", "玉兎", "人妻",
								"販売員", "茨狸", "茨狸", "茨狸", "野篦坊"
}
#DIM 角色番号
#DIM GID
#DIMS 生成文字列
#DIMS 合成文字列配列, 50
#DIMS 色合成
#DIMS 指定色
#DIMS 感情 = "通常", "笑顔", "憤怒"
#DIMS 着衣
#DIM 合成数
#DIM リソースカウント
#DIM リソース種類
#DIM 店員番号
リソース種類 = 店員番号 > 19 ? 6 # 3
種族:5 = %TEXTR("妖精/妖怪狸/妖怪猫/妖怪狐/茨狸")%
;３日に一度販売員が看店に入る
SIF ((GETTIME()/1000000000) % 100) % 3 == 0
	種族:4 = 販売員
SIF ((GETTIME()/1000000000) % 100) % 2
	種族:7 = 山童
SIF ARGS != ""
	種族:店員番号 = %ARGS%
CALL SET_MOB_IMAGE_STR(0, 種族:店員番号, 店員番号)
IF 種族:店員番号 == "野篦坊"
	路人子店員画像文字列:店員番号:3 = %DIC_REMOVE(路人子店員画像文字列:店員番号:3, "目瞳")%
	路人子店員画像文字列:店員番号:3 = %DIC_REMOVE(路人子店員画像文字列:店員番号:3, "表情")%
ENDIF
FOR リソースカウント, 0, リソース種類
	;初期化
	GID = 0
	VARSET LOCAL
	VARSET 合成文字列配列,
	合成数 = 0
	
	;画像合成下地用のダミーを配置する
	CALL 画像合成(GID,"ダミー")
	;別絵路人店員の処理
	IF GROUPMATCH(種族:店員番号, "販売員", "茨狸")
		CALL 別絵路人子リソース探索(合成文字列配列, 合成数, 路人子店員画像文字列:店員番号:リソースカウント, 1)
		指定色 = %合成文字列配列:49%
		FOR LOCAL, 0, 合成数
			IF 合成文字列配列:LOCAL != ""
				SIF 指定色 != ""
					色合成 = %\@ STRFIND(合成文字列配列:LOCAL, "髪") > -1 ? %指定色% # \@%
				CALL 画像合成(GID, 合成文字列配列:LOCAL, 0, 0, 0, 0, 色合成)
			ENDIF
		NEXT
	ELSE
		;使用リソースの名称を配列に取得する
		CALL 路人子リソース探索(合成文字列配列, 合成数, 路人子店員画像文字列:店員番号:リソースカウント, 1)
		;路人子画像は高い番号のリソースから先に合成していく必要があるので降順にソートする
		ARRAYSORT 合成文字列配列, BACK, 0, 合成数
		;路人子用画像を順番に合成していく
		FOR LOCAL, 0, 合成数
			色合成 '= ""
			IF 合成文字列配列:LOCAL != ""
				;色合成確認
				FOR LOCAL:1, 0 ,路人子素材色種別数
					IF STRFIND(合成文字列配列:LOCAL, @"_%路人子素材色種別:(LOCAL:1)%_") != -1 && DIC_CONTAINSKEY(路人子店員画像文字列:店員番号:リソースカウント, @"%路人子素材色種別:(LOCAL:1)%色")
						色合成 = %DIC_GET(路人子店員画像文字列:店員番号:リソースカウント, @"%路人子素材色種別:(LOCAL:1)%色")%
						LOCAL:1 = 路人子素材色種別数
					ENDIF
				NEXT
				CALL 画像合成(GID, 合成文字列配列:LOCAL, 0, 0, 0, 0, 色合成)
			ENDIF
		NEXT
	ENDIF
	;汎用貂プレートで使用できるように名前を統一する
	着衣 = %\@ リソースカウント < 3 ? 服 # 裸 \@%
	LOCAL = リソースカウント % 3
	CALL リソース登録(@"顔絵_%着衣%_%感情:LOCAL%_MOB_{店員番号}", GID)
	路人子店員GID:店員番号:リソースカウント = GID
NEXT

;=========================================================
;別絵路人子用の画像文字列を設定
;CID		角色番号
;ARGS		別絵使用の種族名	
;NUMBER		CID=0で路人店員番号、CID=RANDOM_CHARNUMの場合 =1なら風俗嬢
;=========================================================
@別絵路人子STR設定(CID, ARGS, NUMBER = 0)
#DIM CID
#DIM NUMBER
#DIMS HAIR_TYPE
#DIMS HAIR_COLOR
#DIMS FACE_TYPE
#DIMS BODY_TYPE
#DIM CLOTHES
#DIM JOB
#DIMS ACCESSORY_TYPE1
#DIMS ACCESSORY_TYPE2
#DIMS 路人子パーツ
#DIMS 路人子パーツ_裸
#DIMS 感情_通常
#DIMS 感情_笑顔
#DIMS 感情_憤怒
#DIMS LAYER
#DIM WORD_COLOR_TYPE
#DIM BUST
;kaoruセットとの識別子を入れておく
路人子パーツ = [00:%ARGS%別絵描画]
JOB = (CID && NUMBER)
;路人店員の胸圍は随机
BUST = (CID == RANDOM_CHARANUM) ? TALENT:CID:胸圍 # (RAND:3) - 1
SELECTCASE ARGS
	CASE "販売員"
		;髪型を設定
		HAIR_TYPE = %TEXTR("長髪/セミロング/姫カット/ほわほわ/ショートカット/短髪/一つ結び/ポニテ/ツインテ/三つ編み/おさげ髪/こけし")%
		;瞳型を設定
		FACE_TYPE = %TEXTR("丸目/垂れ目/釣魚目")%
		;胸圍にあわせて素体決め。因幡は貧乳気味
		BUST = BUST - (RAND:2)
		SELECTCASE BUST
			CASE 0
				BODY_TYPE = 普乳素体
			CASE IS > 0
				BODY_TYPE = 巨乳素体
			CASE IS < 0
				BODY_TYPE = 素体
		ENDSELECT
		;髪の毛と服が被るか判定
		CLOTHES = GROUPMATCH(HAIR_TYPE, "長髪", "セミロング", "姫カット")
		;たまに眼镜/发卡。他に個性ないので裸でもつけっぱ
		ACCESSORY_TYPE1 = %\@ RAND:8 ? # %TEXTR("赤/黒")%眼镜 \@%
		ACCESSORY_TYPE2 = %\@ RAND:6 ? # 发卡 \@%
		
		;可変画像の設定。
		路人子パーツ += 販売員髪型(HAIR_TYPE)
		路人子パーツ += 別絵路人子アクセ(ARGS, ACCESSORY_TYPE1, 9, ACCESSORY_TYPE2, 10)
		路人子パーツ_裸 = %路人子パーツ%

		路人子パーツ += 販売員素体(BODY_TYPE, 0, JOB, CLOTHES)
		路人子パーツ_裸 += 販売員素体(BODY_TYPE, 1, JOB, CLOTHES)
		感情_通常 = %販売員表情(FACE_TYPE, "通常")%
		感情_笑顔 = %販売員表情(FACE_TYPE, "笑顔")%
		感情_憤怒 = %販売員表情(FACE_TYPE, "憤怒")%
		
		LAYER = 08
	CASE "茨狸"
		FACE_TYPE = %TEXTR("イト目/垂れ目/ジト目/まる目/普通目/")%
		HAIR_TYPE = %TEXTR("ロング/ほわほわ/ウェーブ/ショートカット/一つ結び/ポニテ/ツインテ/みつ編みＡ/みつ編みＢ/おさげ髪/こけし/固有Ａ/固有Ｂ/固有Ｃ/固有Ｄ")%
		;色変更はコレジャナイ感出さないように髪色だけ
		LOCALS = 褐色/日焼け/不健康/悪魔/%\@ STRFIND(HAIR_TYPE, "固有") > -1 ? 栗/ # 橙/ \@%
		SIF RAND:5
			路人子パーツ = [00:%ARGS%別絵描画-色/%TEXTR(LOCALS)%]
		SELECTCASE BUST
			CASE 0
				BODY_TYPE = 普素体
			CASE IS > 0
				BODY_TYPE = 巨素体
			CASE IS < 0
				BODY_TYPE = 貧素体
		ENDSELECT
		;たまに親分と同じ眼镜
		ACCESSORY_TYPE1 = %\@ RAND:7 ? # 丸めがね \@%
		ACCESSORY_TYPE2 = 
		
		;可変画像の設定。
		路人子パーツ = %路人子パーツ%[11:茨狸_狸猫耳][13:茨狸_叶子]
		路人子パーツ += 茨狸髪型(HAIR_TYPE)
		路人子パーツ += 別絵路人子アクセ(ARGS, ACCESSORY_TYPE1, 12, ACCESSORY_TYPE2, 12)
		路人子パーツ_裸 = %路人子パーツ%
		路人子パーツ += 茨狸素体(BODY_TYPE, 0, JOB)
		路人子パーツ_裸 += 茨狸素体(BODY_TYPE, 1, JOB)
		感情_通常 = %茨狸表情(FACE_TYPE, "通常")%
		感情_笑顔 = %茨狸表情(FACE_TYPE, "笑顔")%
		感情_憤怒 = %茨狸表情(FACE_TYPE, "憤怒")%
		
		LAYER = 15
ENDSELECT
;口上色は随机
WORD_COLOR_TYPE = GET_CN_WORD_COLOR(STR:(RAND:13 + 2050))
IF CID
	CSTR:CID:路人子画像文字列_服_通常 = %路人子パーツ%%感情_通常%
	CSTR:CID:路人子画像文字列_服_笑顔 = %路人子パーツ%%感情_笑顔%
	CSTR:CID:路人子画像文字列_服_憤怒 = %路人子パーツ%%感情_憤怒%
	CSTR:CID:路人子画像文字列_裸_通常 = %路人子パーツ_裸%%感情_通常%
	CSTR:CID:路人子画像文字列_裸_笑顔 = %路人子パーツ_裸%%感情_笑顔%[%LAYER%:%ARGS%_装飾_照れ]
	CSTR:CID:路人子画像文字列_裸_憤怒 = %路人子パーツ_裸%%感情_憤怒%
	CFLAG:CID:1000 = WORD_COLOR_TYPE
ELSE
	路人子店員画像文字列:NUMBER:0 = %路人子パーツ%%感情_通常%
	路人子店員画像文字列:NUMBER:1 = %路人子パーツ%%感情_笑顔%
	路人子店員画像文字列:NUMBER:2 = %路人子パーツ%%感情_憤怒%
	路人子店員画像文字列:NUMBER:3 = %路人子パーツ_裸%%感情_通常%
	路人子店員画像文字列:NUMBER:4 = %路人子パーツ_裸%%感情_笑顔%[%LAYER%:%ARGS%_装飾_照れ]
	路人子店員画像文字列:NUMBER:5 = %路人子パーツ_裸%%感情_憤怒%
	路人子店員口上色:NUMBER = WORD_COLOR_TYPE
ENDIF
RETURN RESULT

;=========================================================
;販売員髪型文字列の取得
;=========================================================
@販売員髪型(HAIR_TYPE)
#FUNCTIONS
#DIMS HAIR_TYPE

SELECTCASE HAIR_TYPE
	CASE "長髪"
		LOCALS = [01:販売員_長い][04:販売員_もみあげ]
	CASE "セミロング"
		LOCALS = [01:販売員_ほわほわ][04:販売員_もみあげ]
	CASE "姫カット"
		LOCALS = [01:販売員_ショート][04:販売員_もみあげ]
	CASE "ほわほわ"
		LOCALS = [01:販売員_ほわほわ]
	CASE "ショートカット"
		LOCALS = [01:販売員_ショート][04:販売員_短]
	CASE "短髪"
		LOCALS = [01:販売員_結ぶ]
	CASE "一つ結び"
		LOCALS = [01:販売員_結ぶ][02:販売員_一つ結び][04:販売員_中]
	CASE "三つ編み"
		LOCALS = [01:販売員_結ぶ][02:販売員_三つ編み][04:販売員_中]
	;テール系と兔耳は相性悪いけど水増しのため入れる
	CASE "ツインテ"
		LOCALS = [01:販売員_結ぶ][02:販売員_ツインテ][04:販売員_中]
	CASE "ポニテ"
		LOCALS = [01:販売員_結ぶ][02:販売員_ポニテ]
	CASE "おさげ髪"
		LOCALS = [01:販売員_結ぶ][02:販売員_おさげ]
	CASE "こけし"
		LOCALS = [01:販売員_切り揃え][04:販売員_中][05:販売員_ぱっつん]
ENDSELECT
SIF HAIR_TYPE != "こけし" 
	LOCALS = %LOCALS%[05:販売員_%TEXTR("短い/ぱっつん/粗め/真ん中寄せ/真ん中分け/斜め/")%]
RETURNF LOCALS

;=========================================================
;	茨狸髪型文字列の取得
;=========================================================
@茨狸髪型(HAIR_TYPE)
#FUNCTIONS
#DIMS HAIR_TYPE
#DIMS MATCH_TYPE
MATCH_TYPE = [03:茨狸_頭%\@ STRFIND(HAIR_TYPE, "固有") > -1 ? %HAIR_TYPE% # 汎用 \@%]
SELECTCASE HAIR_TYPE
	CASE "ロング"
		LOCALS = [02:茨狸_髪_ロング]
	CASE "ほわほわ"
		LOCALS = [02:茨狸_髪_ほわほわ]
	CASE "ウェーブ"
		LOCALS = [02:茨狸_髪_ウェーブ]
	CASE "ショートカット"
		LOCALS = [02:茨狸_髪_ショート]
	CASE "一つ結び"
		LOCALS = [02:茨狸_髪_結ぶ][01:茨狸_髪_一つ結び]
	;テール系とけも耳は相性悪いけど水増しのため入れる
	CASE "ポニテ"
		LOCALS = [02:茨狸_髪_結ぶ][01:茨狸_髪_ポニテ]
	CASE "ツインテ"
		LOCALS = [02:茨狸_髪_結ぶ][01:茨狸_髪_ツインテ]
	CASE "みつ編みＡ"
		LOCALS = [02:茨狸_髪_結ぶ][01:茨狸_髪_みつ編みＡ]
	CASE "みつ編みＢ"
		LOCALS = [01:茨狸_髪_みつ編みＢ][02:茨狸_髪_結ぶ]
	CASE "おさげ髪"
		LOCALS = [02:茨狸_髪_結ぶ][01:茨狸_髪_おさげ]
	CASE "こけし"
		LOCALS = [02:茨狸_髪_切り揃え][07:茨狸_髪_ぱっつん]
		GOTO SKIP
	CASE "固有Ａ", "固有Ｂ", "固有Ｃ", "固有Ｄ"
		LOCALS = [02:茨狸_髪_%HAIR_TYPE%]
		GOTO SKIP
	CASEELSE
		LOCALS = [02:茨狸_髪_ロング]
ENDSELECT
LOCALS = %LOCALS%[07:茨狸_髪_%TEXTR("流す/ぱっつん/でこ出し/真ん中寄せ/真ん中分け/")%]
SIF RAND:3
	LOCALS = %LOCALS%[06:茨狸_髪_もみあげ%TEXTR("Ａ/Ｂ/")%]
$SKIP
MATCH_TYPE = %MATCH_TYPE%%LOCALS%
RETURNF MATCH_TYPE

;=========================================================
;	販売員表情文字列の取得
;;=========================================================
@販売員表情(FACE_TYPE, moodStr)
#FUNCTIONS
#DIMS FACE_TYPE
#DIMS moodStr

SELECTCASE FACE_TYPE
	CASE "丸目"
		SELECTCASE moodStr
			CASE "通常"
				RETURNF "[06:販売員_丸通常]"
			CASE "笑顔"
				RETURNF "[06:販売員_丸笑い]"
			CASE "憤怒"
				RETURNF "[06:販売員_丸憤怒]"
		ENDSELECT
	CASE "釣魚目"
		SELECTCASE moodStr
			CASE "通常"
				RETURNF "[06:販売員_釣通常]"
			CASE "笑顔"
				RETURNF "[06:販売員_釣笑い]"
			CASE "憤怒"
				RETURNF "[06:販売員_釣憤怒]"
		ENDSELECT
	CASE "垂れ目"
		SELECTCASE moodStr
			CASE "通常"
				RETURNF "[06:販売員_垂通常]"
			CASE "笑顔"
				RETURNF "[06:販売員_垂笑い]"
			CASE "憤怒"
				RETURNF "[06:販売員_垂憤怒]"
		ENDSELECT
ENDSELECT
RETURNF LOCALS

;=========================================================
;	茨狸表情文字列の取得
;	口を随机にしてパターン水増し
;;=========================================================
@茨狸表情(FACE_TYPE, moodStr)
#FUNCTIONS
#DIMS FACE_TYPE
#DIMS moodStr

SELECTCASE moodStr
		CASE "通常"
			LOCALS = [09:茨狸_%FACE_TYPE%][08:茨狸_普通口%TEXTR("Ａ/Ｂ/Ｃ/")%][10:茨狸_まろ眉普]
		CASE "憤怒"
			LOCALS = [09:茨狸_%FACE_TYPE%怒][08:茨狸_憤怒口%TEXTR("Ａ/Ｂ/Ｃ/")%][10:茨狸_まろ眉怒]
		CASE "笑顔"
			SELECTCASE FACE_TYPE
				CASE "イト目"
					LOCALS =  [09:茨狸_イト目]
				CASE "垂れ目"
					LOCALS =  [09:茨狸_笑い目垂]
				CASE "まる目"
					LOCALS =  [09:茨狸_笑い目吊]
				CASEELSE
					LOCALS =  [09:茨狸_笑い目普]
			ENDSELECT
			LOCALS = %LOCALS%[08:茨狸_笑い口%TEXTR("Ａ/Ｂ/Ｃ/")%][10:茨狸_まろ眉笑]
ENDSELECT
RETURNF LOCALS

;=========================================================
;	販売員服装文字列の取得
;	NUDE	=1 裸
;	JOB		=1 風俗嬢
;	CLOTHES	=1 透過処理衣服を着せる 
;=========================================================
@販売員素体(BODY_TYPE, NUDE, JOB, CLOTHES)
#FUNCTIONS
#DIM NUDE
#DIM JOB
#DIM CLOTHES
#DIMS BODY_TYPE
#DIMS SETBODY
IF NUDE
	SETBODY = [03:販売員_%BODY_TYPE%]
ELSEIF JOB
	SETBODY = [03:販売員_%BODY_TYPE%][07:販売員_%BODY_TYPE%%\@ CLOTHES ? もみあげ # \@%浴衣]
ELSE
	SETBODY = [03:販売員_%\@ CLOTHES ? もみあげ # \@%服素体]
ENDIF
RETURNF SETBODY

;=========================================================
;	茨狸服装文字列の取得
;	NUDE	=1 裸
;	JOB		=1 風俗嬢
;=========================================================
@茨狸素体(BODY_TYPE, NUDE, JOB)
#FUNCTIONS
#DIM NUDE
#DIM JOB
#DIMS BODY_TYPE
#DIMS SETBODY
IF NUDE
	SETBODY = [04:茨狸_%BODY_TYPE%]
ELSEIF JOB
	SETBODY = [04:茨狸_%BODY_TYPE%][05:茨狸_%BODY_TYPE%浴巾]
ELSE
	SETBODY = [04:茨狸_%\@ STRFIND(BODY_TYPE, "巨") > -1 ? 巨 # \@%法被]
ENDIF
RETURNF SETBODY

;=========================================================
;	装飾品文字列の取得
;	ここだけ共通化
;=========================================================
@別絵路人子アクセ(TYPE, ACC_TYPE1, ARG:1, ACC_TYPE2, ARG:2)
#FUNCTIONS
#DIMS TYPE
#DIMS ACC_TYPE1
#DIMS ACC_TYPE2
#DIMS SET_ACC
SET_ACC = 
SIF ACC_TYPE1 != ""
	SET_ACC = [%TOSTR(ARG:1, "D2")%:%TYPE%_%ACC_TYPE1%]
SIF ACC_TYPE2 != ""
	SET_ACC = %SET_ACC%[%TOSTR(ARG:2, "D2")%:%TYPE%_%ACC_TYPE2%]
RETURNF SET_ACC

;*******************************************************************************************************
;別絵路人子画像生成用関数
;*******************************************************************************************************
;既存路人子と規格が違うので流用して簡略化した(してない)専用関数で生成
;*******************************************************************************************************
@別絵路人子画像生成(角色番号, 立絵種類)
#DIM 角色番号
#DIM 立絵種類
#DIM GID
#DIMS 着衣
#DIMS 感情 = "通常", "笑顔", "憤怒"
#DIMS 種類
#DIMS 生成文字列
#DIMS 合成文字列配列, 50
#DIMS 指定色
#DIMS 色合成
#DIM 合成数
#DIM リソースカウント
;路人子素材CSTR開始位置 = 30	CSTR:路人子画像文字列_服_通常のCSTR番号
;路人子素材CFLAG開始位置 = 923	路人子画像GraphicsIDが入る場所。1枚の画像につき1個のIDらしい。
;路人子素材リソース数 = 6		CSTR:RANDOM_CHARANUM:路人子画像文字列_服_通常～裸_憤怒までの６個

;リソース作成
;=====================================
FOR リソースカウント, 0, 路人子素材リソース数
	;初期化
	GID = 0
	VARSET LOCAL
	VARSET 合成文字列配列,
	合成数 = 0

	;画像合成下地用のダミーを配置する。GID(GraphicsID)にREF関数で登録可能な空き番号が入って戻ってくる
	CALL 画像合成(GID,"ダミー")
	
	;使用リソースの名称を配列に取得する。CSTR:RANDOM_CHARANUM:路人子画像文字列を渡すと
	;REF関数で合成文字列配列にリソース名、合成数にスプライトの数が入って戻ってくる
	CALL 別絵路人子リソース探索(合成文字列配列, 合成数, CSTR:角色番号:(路人子素材CSTR開始位置 + リソースカウント), 立絵種類)
	
	;重ねる順番で配列に入るのでARRAYSORTは不要
	;ARRAYSORT 合成文字列配列, FORWARD, 0, 合成数
	
	;髪色指定を取り出す
	 指定色 = %合成文字列配列:49%
	
	;路人子用画像を順番に合成していく
	FOR LOCAL, 0, 合成数
		SIF 合成文字列配列:LOCAL == ""
			CONTINUE
		;髪色指定があって合成用リソース名に"髪"が含まれていたらカラーブレンドを指定
		SIF 指定色 != ""
			色合成 = %\@ STRFIND(合成文字列配列:LOCAL, "髪") > -1 ? %指定色% # \@%
		CALL 画像合成(GID, 合成文字列配列:LOCAL, 0, 0, 0, 0, 色合成)
	NEXT
	;合成した画像をリソースに登録する
	CFLAG:角色番号:(路人子素材CFLAG開始位置 + リソースカウント) = GID
	;汎用貂プレートで使用できるように名前を統一する
	LOCAL = リソースカウント % 3
	着衣 = %\@ リソースカウント < 3 ? 服 # 裸\@%
	種類 = %\@ 立絵種類 ? 顔絵 # 立絵 \@%
	CALL リソース登録(@"%種類%_%着衣%_%感情:LOCAL%_{角色番号}", GID)
NEXT
RETURN 1

;*******************************************************************************************************
;別絵路人子画像リソース探索用関数
;チェックサム的なのを無くしてただ尋找だけ
;*******************************************************************************************************
@別絵路人子リソース探索(合成文字列配列, 合成数, 生成文字列, 立絵種類)
#DIMS REF 合成文字列配列,0
#DIM REF 合成数
#DIMS 生成文字列
#DIM 立絵種類
#DIMS キー
VARSET LOCAL
VARSET LOCALS
;ゴミ取り
生成文字列 = %REPLACE(生成文字列, "^\"\"", "")%

キー = %TOSTR(LOCAL,"D2")%
;[00:別絵描画]に色指定が含まれるかを見る
IF STRFIND(DIC_GET(生成文字列, キー), "色/") > -1
	SPLIT DIC_GET(生成文字列, キー), "/", LOCALS
	合成文字列配列:49 = %LOCALS:1%
ENDIF

;素材のレイヤー数増やしたらカウントを適宜増やす
FOR LOCAL, 1, 16
	キー = %TOSTR(LOCAL,"D2")%
	SIF !DIC_CONTAINSKEY(生成文字列, キー)
		CONTINUE
	合成文字列配列:(合成数++) = %キー%_%DIC_GET(生成文字列, キー)%%\@ 立絵種類 ? _顔 # \@%
NEXT
RETURN 1


;*******************************************************************************************************
;お出かけイベント用路人子の画像を消す関数
;*******************************************************************************************************
@路人店員画像リセット
#DIM 番号
FOR 番号, 20, 路人子店員最大枠
	SIF !SPRITECREATED(@"顔絵_服_通常_MOB_{番号}")
		CONTINUE
	SPRITEDISPOSE @"顔絵_服_通常_MOB_{番号}"
	SPRITEDISPOSE @"顔絵_服_笑顔_MOB_{番号}"
	SPRITEDISPOSE @"顔絵_服_憤怒_MOB_{番号}"
	SPRITEDISPOSE @"顔絵_裸_通常_MOB_{番号}"
	SPRITEDISPOSE @"顔絵_裸_笑顔_MOB_{番号}"
	SPRITEDISPOSE @"顔絵_裸_憤怒_MOB_{番号}"
	FOR COUNT, 0, 6
		GDISPOSE 路人子店員GID:番号:COUNT
		路人子店員GID:番号:COUNT = 0
		路人子店員画像文字列:番号:COUNT = 
	NEXT
NEXT
RETURN
