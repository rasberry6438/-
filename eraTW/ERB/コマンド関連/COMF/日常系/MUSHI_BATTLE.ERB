;-------------------------------------------------
;斗虫：戦闘の統括関数
;-------------------------------------------------
@MUSHI_BATTLE
#DIM LPCOUNT
VARSET MUSHI_FINISH
;全員のETB処理
FOR LOCAL, 1, MUSHI_CHARANUM + 1
	CALL MUSHI_BATTLE_ETB(LOCAL, MUSHI_STANDNUM:LOCAL)
NEXT
MUSHI_ROUND = 0

;以下ループ
WHILE !MUSHI_FINISH
	;最初に戦場状態を表示
	IF !MUSHI_ROUND
		CALL MUSHI_BATTLE_FIELD
	ELSE
		CALL MUSHI_MSGSET(@"%" " * 30%＜回合　%TOFULL(TOSTR(MUSHI_ROUND))%＞")
		MUSHI_MSGCL:RESULT = C_YELLOW
		CALL MUSHI_BATTLE_MSG
	ENDIF
	;行動順判定
	VARSET MUSHI_ORDER
	FOR LPCOUNT, 1, MUSHI_CHARANUM + 1
		;一番高いものを抽出していく
		MUSHI_ORDER:0 = 0
		FOR LOCAL, 1, MUSHI_CHARANUM + 1
			;すでに抽出してたら弾く
			SIF MATCH(MUSHI_ORDER, MUSHI_STANDNUM:LOCAL)
				CONTINUE
			IF MUSHI_ORDER:0 < MUSHI_SPD:(MUSHI_STANDNUM:LOCAL)
				MUSHI_ORDER:LPCOUNT = MUSHI_STANDNUM:LOCAL
				MUSHI_ORDER:0 = MUSHI_SPD:(MUSHI_STANDNUM:LOCAL)
			ENDIF
		NEXT
	NEXT
;	[IF_DEBUG]
;		FOR LPCOUNT, 1, MUSHI_CHARANUM + 1
;			LOCAL = MUSHI_ORDER:LPCOUNT / 10
;			DRAWLINE
;			PRINTFORML MUSHI_ORDER:{LPCOUNT}＝{MUSHI_ORDER:LPCOUNT}
;			PRINTFORML MUSHI_STANDNUM:{LOCAL} ＝ {MUSHI_STANDNUM:LOCAL}
;			PRINTFORML %BATTLERNAME:LOCAL%
;			PRINTFORML %MUSHI_NAME:(MUSHI_STANDNUM:LOCAL)%
;			PRINTFORML MUSHI_HP:{(MUSHI_STANDNUM:LOCAL)} ＝ {MUSHI_HP:(MUSHI_STANDNUM:LOCAL)}
;			PRINTFORML MUSHI_ATK:{(MUSHI_STANDNUM:LOCAL)} ＝ {MUSHI_ATK:(MUSHI_STANDNUM:LOCAL)}
;			PRINTFORML MUSHI_SPD:{(MUSHI_STANDNUM:LOCAL)} ＝ {MUSHI_SPD:(MUSHI_STANDNUM:LOCAL)}
;			PRINTFORML MUSHI_SKL:{(MUSHI_STANDNUM:LOCAL)} ＝ %MUSHI_SKL:(MUSHI_STANDNUM:LOCAL)%
;			PRINTFORML MUSHI_STATUS:{LOCAL} ＝ %MUSHI_STATUS:LOCAL%
;		NEXT
;		WAIT
;	[ENDIF]
	IF MUSHI_ROUND
		;各行動処理
		FOR LPCOUNT, 1, MUSHI_CHARANUM + 1
			SIF !MUSHI_FINISH
				CALL MUSHI_BATTLE_COMBAT(MUSHI_ORDER:LPCOUNT / 10, MUSHI_ORDER:LPCOUNT)
		NEXT
		;ターン終了時処理
		SIF !MUSHI_FINISH
			CALL MUSHI_BATTLE_ENDSTEP
	ELSE
		;開幕メッセージ
		CALL MUSHI_BATTLE_MSG
	ENDIF
	MUSHI_ROUND ++
WEND

;-------------------------------------------------
;斗虫：メインの戦場表示関数（上半分）
;PLAYER_A_ID, PLAYER_B_ID   プレイヤー番号
;LOCAL:3-4   角色番号
;MUSHI_ID   戦場に出ているムシのID
;MUSHI_FLAG   戦場に出ているムシのフラグ番号（プレイヤー番号 * 10 + 選出番号）
;LOCAL:99    偶数人目の表示の有無
;-------------------------------------------------
@MUSHI_BATTLE_FIELD
#DIM LPCOUNT
#DIMS SHIFT
#DIM MUSHI_A_ID
#DIM MUSHI_A_FLAG
#DIM MUSHI_B_ID
#DIM MUSHI_B_FLAG
#DIM PLAYER_A_ID
#DIMS PLAYER_A_NAME
#DIM PLAYER_B_ID
#DIMS PLAYER_B_NAME
MUSHI_LINE = 3
PRINTFORM ◆回合%TOFULL(TOSTR(MUSHI_ROUND))%　＜场地类型：
CALL PRINT_FIELDTYPE(MUSHI_FIELD:99)
PRINTL ＞
PRINTFORML ┏%"━" * 40%┓
;2人ずつ表示していく
FOR LOCAL, 0, (MUSHI_CHARANUM > 2) + 1
	;フラグがごっちゃごちゃだ～
	VARSET LOCALS
	PLAYER_A_ID = 1 + LOCAL * 2
	PLAYER_B_ID = 2 + LOCAL * 2
	PLAYER_A_NAME '= @"%BATTLERNAME:PLAYER_A_ID%"
	PLAYER_B_NAME '= @"%BATTLERNAME:PLAYER_B_ID%"
	LOCAL:99 = !LOCAL || !(MUSHI_CHARANUM % 2)
	;キャラの名前
	PRINT ┃
	SIF !MUSHI_REST:(PLAYER_B_ID)
		LOCALS:2 += "Ｋ．Ｏ．"
	LOCALS:1 += PLAYER_A_NAME
	LOCALS:2 += PLAYER_B_NAME
	SIF MUSHI_TEAM && PLAYER_A_ID != 1
		LOCALS:1 += "(仲間)"
	IF !MUSHI_REST:(PLAYER_A_ID)
		LOCALS:1 += "Ｋ．Ｏ．"
		SETCOLOR C_RED
	ELSE
		SETCOLOR MUSHI_COLOR:(PLAYER_A_ID)
	ENDIF
	PRINTFORM %LOCALS:1, 40, LEFT%
	RESETCOLOR
	IF LOCAL:99
		IF !MUSHI_REST:(PLAYER_B_ID)
			SETCOLOR C_RED
		ELSE
			SETCOLOR MUSHI_COLOR:(PLAYER_B_ID)
		ENDIF
		PRINTFORM %LOCALS:2, 40, RIGHT%
		RESETCOLOR
	ELSE
		PRINTFORM %" "* 40%
	ENDIF
	PRINTL ┃
	MUSHI_A_ID = MUSHI_STAND:(PLAYER_A_ID)
	MUSHI_B_ID = MUSHI_STAND:(PLAYER_B_ID)
	MUSHI_A_FLAG = MUSHI_STANDNUM:(PLAYER_A_ID)
	MUSHI_B_FLAG = MUSHI_STANDNUM:(PLAYER_B_ID)
	;ムシの名前
	PRINT ┃
	CALL PRINT_MUSHINAME(MUSHI_NAME:MUSHI_A_FLAG, MUSHI_A_ID, 40)
	IF LOCAL:99
		CALL PRINT_MUSHINAME(MUSHI_NAME:MUSHI_B_FLAG, MUSHI_B_ID, 40, 1)
	ELSE
		PRINTFORM %" "* 40%
	ENDIF
	PRINTL ┃
	;HPバーと残り手持ち数
	PRINT ┃HP 
	CALL PRINT_COLORBAR(MUSHI_HP:MUSHI_A_FLAG, MUSHI_MAXHP:MUSHI_A_FLAG, 20, UNICODE(0x2588), UNICODE(0x2588), BARCOLORSET("緑"), RESULT:1)
	PRINT  
	CALL PRINT_RESTMUSHI(PLAYER_A_ID)
	IF LOCAL:99
		PRINT 　　　　　　　　　　
		CALL  PRINT_RESTMUSHI(PLAYER_B_ID)
		PRINT  
		CALL PRINT_COLORBAR(MUSHI_HP:MUSHI_B_FLAG, MUSHI_MAXHP:MUSHI_B_FLAG, 20, UNICODE(0x2588), UNICODE(0x2588), BARCOLORSET("緑"), RESULT:1)
		PRINT  HP
	ELSE
		PRINTFORM 　　　　　%" "* 40%
	ENDIF
	PRINTL ┃
	;属性と状態変化
	PRINT ┃
	;専用引数を使ってRESULT:1を出力する
	CALL MUSHI_TYPE_PRIINT(MUSHI_TYPE:MUSHI_A_FLAG, MUSHI_TYPE:MUSHI_B_FLAG)
	PRINTFORM %MUSHI_STATUS:PLAYER_A_ID, 40 - RESULT, LEFT%
	IF LOCAL:99
		PRINTFORM %MUSHI_STATUS:(PLAYER_B_ID), 40 - RESULT:1, RIGHT%
		CALL MUSHI_TYPE_PRIINT(MUSHI_TYPE:MUSHI_B_FLAG)
	ELSE
		PRINTFORM %" "* 40%
	ENDIF
	PRINTL ┃
	IF !LOCAL
		PRINT ┃
		CALL PRINT_FIELD_EFFECT(MUSHI_FIELD:99)
		PRINTL ┃
;		PRINTFORML ┃%" " * 37%ＶＳ．%" " * 37%┃
		MUSHI_LINE += 5
	ELSE
		MUSHI_LINE += 4
	ENDIF
NEXT
PRINTFORML ┣%"━" * 40%┫
;＜メッセージ表示に続く＞

;-------------------------------------------------
;斗虫：メッセージを設定する関数
;-------------------------------------------------
@MUSHI_MSGSET(ARGS)
FOR LOCAL, 0, 14
	IF MUSHI_MSG:LOCAL == ""
		MUSHI_MSG:LOCAL = %ARGS%
		RESULT = LOCAL
		BREAK
	ENDIF
NEXT
;色を着ける用に入れた番号を返す
RETURN RESULT

;-------------------------------------------------
;斗虫：メッセージ表示関数（下半分）
;-------------------------------------------------
@MUSHI_BATTLE_MSG
MUSHI_LINE += 1
FOR LOCAL, 0, 14
	PRINTFORM ┃
	SIF MUSHI_MSGCL:LOCAL
		SETCOLOR MUSHI_MSGCL:LOCAL
	PRINTFORM %MUSHI_MSG:LOCAL, 80, LEFT%
	RESETCOLOR
	PRINTL ┃
	MUSHI_LINE ++
NEXT
PRINTFORML ┗%"━" * 40%┛
WAIT
;履歴を残すか？どうするか？
;CLEARLINE MUSHI_LINE
VARSET MUSHI_MSG
VARSET MUSHI_MSGCL
SIF !MUSHI_FINISH
	CALL MUSHI_BATTLE_FIELD

;-------------------------------------------------
;斗虫：戦闘計算関数
;ARG    ターンプレイヤー番号
;NUM    ターンプレイヤーの戦場に出しているムシのフラグ番号
;-------------------------------------------------
@MUSHI_BATTLE_COMBAT(ARG, NUM)
#DIM NUM
#DIM 攻撃対象
#DIM 対象NUM
#DIM ダメージ補正
#DIM 固定ダメージ
#DIMS 攻撃スキル, 2
#DIM 回避率
#DIM 与えるダメージ
;行動不能判定
IF MUSHI_HP:NUM <= 0
	RETURN
;敗北している
ELSEIF !MUSHI_REST:ARG
	RETURN
ELSEIF STRCOUNT(MUSHI_STATUS:ARG, "<睡眠>")
	CALL MUSHI_MSGSET(@"《%MUSHI_NAME:NUM%》正在睡眠……zZZ")
	MUSHI_MSGCL:RESULT = C_P_PURPLE
	CALL MUSHI_BATTLE_MSG
	RETURN
ENDIF

;対象判定
攻撃対象 = 0
対象NUM = 0
攻撃スキル = 
攻撃スキル:1 = 
LOCAL = 0
WHILE !対象NUM
	攻撃対象 = RAND:MUSHI_CHARANUM + 1
	;自分はダメ
	IF 攻撃対象 == ARG
		攻撃対象 = 0
	;味方はダメ
	ELSEIF MUSHI_TEAM && (攻撃対象 % 2) == (ARG % 2)
		攻撃対象 = 0
	;KOしてたらダメ
	ELSEIF MUSHI_HP:(MUSHI_STANDNUM:攻撃対象) <= 0
		攻撃対象 = 0
	;敗退してたらダメ
	ELSEIF !MUSHI_REST:攻撃対象
		攻撃対象 = 0
	;[擬態]の効果
	ELSEIF STRCOUNT(MUSHI_SKL:(MUSHI_STANDNUM:攻撃対象), "擬態") && !RAND:2
		攻撃対象 = 0
	ENDIF
	SIF 攻撃対象
		対象NUM = MUSHI_STANDNUM:攻撃対象
	LOCAL ++
	;ある程度やって決まらなければ失敗
	IF LOCAL > 100
		CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》的攻撃索敌没有成功…")
		CALL MUSHI_BATTLE_MSG
		RETURN
	ENDIF
WEND

;攻撃時判定
ダメージ補正 = 100
固定ダメージ = 0
;＠攻撃時口上
CALL KOJO_MESSAGE_SEND("MUSHI_BATTLE", 残りムシ数(ARG), MUSHI_BATTLER:ARG, ARG, 0, "攻撃時")
;単独の攻撃スキル
;猛毒攻撃の毒攻撃を防止
IF STRCOUNT(MUSHI_SKL:NUM, "毒攻撃") && !STRCOUNT(MUSHI_SKL:NUM, "猛毒攻撃") && スキル判定(40, ARG, NUM) && !STRCOUNT(MUSHI_STATUS:攻撃対象, "<毒>")
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『毒攻撃』！")
	MUSHI_MSGCL:RESULT = C_L_GREEN
	TIMES ダメージ補正, 0.80
	攻撃スキル = 毒攻撃
ELSEIF STRCOUNT(MUSHI_SKL:NUM, "猛毒攻撃") && スキル判定(20, ARG, NUM) && !STRCOUNT(MUSHI_STATUS:攻撃対象, "<猛毒>")
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『猛毒攻撃』！")
	MUSHI_MSGCL:RESULT = C_L_GREEN
	TIMES ダメージ補正, 0.80
	攻撃スキル = 猛毒攻撃
ELSEIF STRCOUNT(MUSHI_SKL:NUM, "麻痹攻撃") && スキル判定(30, ARG, NUM) && !STRCOUNT(MUSHI_STATUS:攻撃対象, "<麻痹>")
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『麻痹攻撃』！")
	MUSHI_MSGCL:RESULT = C_L_GREEN
	TIMES ダメージ補正, 0.80
	攻撃スキル = 麻痹攻撃
ELSEIF STRCOUNT(MUSHI_SKL:NUM, "睡眠粉") && スキル判定(20, ARG, NUM) && !STRCOUNT(MUSHI_STATUS:攻撃対象, "<睡眠>")
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『睡眠粉』！")
	MUSHI_MSGCL:RESULT = C_L_GREEN
	TIMES ダメージ補正, 0.80
	攻撃スキル = 睡眠粉
ELSEIF STRCOUNT(MUSHI_SKL:NUM, "音波攻撃") && スキル判定(40, ARG, NUM) && !STRCOUNT(MUSHI_STATUS:攻撃対象, "<混乱>")
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『音波攻撃』！")
	MUSHI_MSGCL:RESULT = C_L_GREEN
	TIMES ダメージ補正, 0.80
	攻撃スキル = 音波攻撃
ELSEIF STRCOUNT(MUSHI_SKL:NUM, "粘液攻撃") && スキル判定(40, ARG, NUM) && !STRCOUNT(MUSHI_STATUS:攻撃対象, "<緩慢>")
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『粘液攻撃』！")
	MUSHI_MSGCL:RESULT = C_L_GREEN
	TIMES ダメージ補正, 0.80
	攻撃スキル = 粘液攻撃
ELSEIF STRCOUNT(MUSHI_SKL:NUM, "悪臭攻撃") && スキル判定(40, ARG, NUM) && !STRCOUNT(MUSHI_STATUS:攻撃対象, "<悪臭>")
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『悪臭攻撃』！")
	MUSHI_MSGCL:RESULT = C_L_GREEN
	TIMES ダメージ補正, 0.80
	攻撃スキル = 悪臭攻撃
ELSEIF STRCOUNT(MUSHI_SKL:NUM, "诅咒攻撃") && スキル判定(30, ARG, NUM)
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『诅咒攻撃』！")
	MUSHI_MSGCL:RESULT = C_L_GREEN
	TIMES ダメージ補正, 0.80
	攻撃スキル = 诅咒攻撃
ELSEIF STRCOUNT(MUSHI_SKL:NUM, "吸収攻撃") && スキル判定(100, ARG, NUM)
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『吸収攻撃』！")
	MUSHI_MSGCL:RESULT = C_L_GREEN
	TIMES ダメージ補正, 1.00
	攻撃スキル = 吸収攻撃
ENDIF
;複合攻撃スキル
IF STRCOUNT(MUSHI_SKL:NUM, "強攻撃") && スキル判定(40, ARG, NUM)
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『強攻撃』！")
	MUSHI_MSGCL:RESULT = C_YELLOW
	IF STRCOUNT(MUSHI_SKL:対象NUM, "光の装甲")
		CALL MUSHI_MSGSET(@"但是【%BATTLERNAME:攻撃対象%】《%MUSHI_NAME:対象NUM%》用『光の装甲』只受到了通常的伤害！")
		MUSHI_MSGCL:RESULT = C_AQUA
	ELSE
		CALL MUSHI_MSGSET(@"造成伤害1.3倍！")
		TIMES ダメージ補正, 1.30
		攻撃スキル:1 += "強攻撃"
	ENDIF
ENDIF
IF STRCOUNT(MUSHI_SKL:NUM, "要害攻撃") && スキル判定(20, ARG, NUM)
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『要害攻撃』！")
	MUSHI_MSGCL:RESULT = C_YELLOW
	IF STRCOUNT(MUSHI_SKL:対象NUM, "光の装甲")
		CALL MUSHI_MSGSET(@"但是【%BATTLERNAME:攻撃対象%】《%MUSHI_NAME:対象NUM%》用『光の装甲』只受到了通常的伤害！")
		MUSHI_MSGCL:RESULT = C_AQUA
	ELSE
		CALL MUSHI_MSGSET(@"造成伤害2倍！！")
		TIMES ダメージ補正, 2.00
		攻撃スキル:1 += "要害攻撃"
	ENDIF
ENDIF
IF STRCOUNT(MUSHI_SKL:NUM, "致命攻撃") && スキル判定(10, ARG, NUM)
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『致命攻撃』！")
	MUSHI_MSGCL:RESULT = C_RED
	IF STRCOUNT(MUSHI_SKL:対象NUM, "光の装甲")
		CALL MUSHI_MSGSET(@"但是【%BATTLERNAME:攻撃対象%】《%MUSHI_NAME:対象NUM%》用『光の装甲』只受到了通常的伤害！")
		MUSHI_MSGCL:RESULT = C_AQUA
	ELSE
		CALL MUSHI_MSGSET(@"造成致命伤害！！")
		IF MUSHI_HP:対象NUM < MUSHI_MAXHP:対象NUM * 50 / 100
			固定ダメージ = MUSHI_HP:対象NUM
		ELSE
			固定ダメージ = MUSHI_HP:対象NUM - 1
		ENDIF
		攻撃スキル:1 += "致命攻撃"
	ENDIF
ENDIF
{
IF STRCOUNT(MUSHI_SKL:NUM, "红色极限黄金最大燃烧") 
&& スキル判定(30, ARG, NUM) && MUSHI_HP:NUM < MUSHI_MAXHP:NUM / 3
}
	CALL MUSHI_MSGSET(@"【%NAME_OUTPUT_TRANSLATION("CALLNAME", (MUSHI_BATTLER:ARG))%】《%MUSHI_NAME:NUM%》の『红色极限黄金最大燃烧』！")
	MUSHI_MSGCL:RESULT = C_YELLOW
	CALL MUSHI_MSGSET(@"谜之能量溢出！造成3倍伤害！")
	TIMES ダメージ補正, 3.00
	攻撃スキル:1 += "红色极限黄金最大燃烧"
ENDIF
IF STRCOUNT(MUSHI_SKL:NUM, "激光攻撃") && スキル判定(20, ARG, NUM)
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『激光攻撃』！")
	MUSHI_MSGCL:RESULT = C_YELLOW
	CALL MUSHI_MSGSET(@"本次攻撃无法避開！！")
	攻撃スキル:1 += "激光攻撃"
ENDIF
;通常攻撃
SIF 攻撃スキル == 攻撃スキル:1
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『通常攻撃』！")
;追加ダメージUP
IF STRCOUNT(MUSHI_SKL:NUM, "先手必勝") && MUSHI_ORDER:1 == ARG
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『先手必勝』発動！")
	MUSHI_MSGCL:RESULT = C_YELLOW
	CALL MUSHI_MSGSET(@"依照速度提升伤害！")
	TIMES ダメージ補正, 1.20
ENDIF
IF STRCOUNT(MUSHI_SKL:NUM, "駆逐") && 残りムシ数(攻撃対象) == 1
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『駆逐』発動！")
	MUSHI_MSGCL:RESULT = C_YELLOW
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:攻撃対象%】的虫子被彻底地殲滅了！")
	TIMES ダメージ補正, 1.50
ENDIF
IF STRCOUNT(MUSHI_SKL:NUM, "主宰") && MUSHI_HP:NUM == MUSHI_MAXHP:NUM
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『主宰』発動！")
	MUSHI_MSGCL:RESULT = C_YELLOW
	CALL MUSHI_MSGSET(@"HP満时必定攻撃要害！！")
	TIMES ダメージ補正, 2.00
ENDIF
IF STRCOUNT(MUSHI_SKL:NUM, "水棲特効") && STRCOUNT(MUSHI_TRIBE:対象NUM, "水棲")
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『水棲特効』発動！")
	MUSHI_MSGCL:RESULT = C_YELLOW
	CALL MUSHI_MSGSET(@"对[水棲]的敌人造成高伤害！！")
	TIMES ダメージ補正, 2.00
ENDIF
IF STRCOUNT(MUSHI_SKL:NUM, "飛行特効") && STRCOUNT(MUSHI_TRIBE:対象NUM, "飛行")
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『飛行特効』発動！")
	MUSHI_MSGCL:RESULT = C_YELLOW
	CALL MUSHI_MSGSET(@"对[飛行]的敌人造成高伤害！！")
	TIMES ダメージ補正, 2.00
ENDIF
IF STRCOUNT(MUSHI_SKL:NUM, "軟体特効") && STRCOUNT(MUSHI_TRIBE:対象NUM, "軟体")
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『軟体特効』発動！")
	MUSHI_MSGCL:RESULT = C_YELLOW
	CALL MUSHI_MSGSET(@"对[軟体]的敌人造成高伤害！！")
	TIMES ダメージ補正, 2.00
ENDIF

;回避判定
IF MUSHI_SPD:NUM * 500 / 100 < MUSHI_SPD:対象NUM
	回避率 = 70
ELSEIF MUSHI_SPD:NUM * 400 / 100 < MUSHI_SPD:対象NUM
	回避率 = 60
ELSEIF MUSHI_SPD:NUM * 300 / 100 < MUSHI_SPD:対象NUM
	回避率 = 50
ELSEIF MUSHI_SPD:NUM * 250 / 100 < MUSHI_SPD:対象NUM
	回避率 = 40
ELSEIF MUSHI_SPD:NUM * 200 / 100 < MUSHI_SPD:対象NUM
	回避率 = 30
ELSEIF MUSHI_SPD:NUM * 150 / 100 < MUSHI_SPD:対象NUM
	回避率 = 20
ELSEIF MUSHI_SPD:NUM * 100 / 100 < MUSHI_SPD:対象NUM
	回避率 = 10
ELSE
	回避率 = 0
ENDIF
SIF STRCOUNT(MUSHI_SKL:対象NUM, "極小")
	回避率 += 30
SIF STRCOUNT(MUSHI_SKL:対象NUM, "高速回避")
	回避率 += 30
SIF STRCOUNT(MUSHI_STATUS:攻撃対象, "睡眠|麻痹|緩慢")
	回避率 = 0
SIF STRCOUNT(攻撃スキル:1, "激光攻撃")
	回避率 = 0
;コッソリ怪诞攻撃は必中
SIF STRCOUNT(MUSHI_SKL:NUM, "怪诞攻撃")
	回避率 = 0
;最大80%
回避率 = MIN(回避率, 80)
IF RAND:100 < 回避率
	IF STRCOUNT(MUSHI_SKL:対象NUM, "高速回避")
		CALL MUSHI_MSGSET(@"【%BATTLERNAME:攻撃対象%】《%MUSHI_NAME:対象NUM%》の『高速回避』発動！")
		MUSHI_MSGCL:RESULT = C_AQUA
		CALL MUSHI_MSGSET(@"以俊敏的動作回避了攻撃！！")
		MUSHI_MSGCL:RESULT = C_AQUA
	ELSEIF STRCOUNT(MUSHI_SKL:対象NUM, "極小")
		CALL MUSHI_MSGSET(@"【%BATTLERNAME:攻撃対象%】《%MUSHI_NAME:対象NUM%》の『極小』発動！")
		MUSHI_MSGCL:RESULT = C_AQUA
		CALL MUSHI_MSGSET(@"因为身体过小而没有被攻撃击中！！")
		MUSHI_MSGCL:RESULT = C_AQUA
	ELSE
		CALL MUSHI_MSGSET(@"【%BATTLERNAME:攻撃対象%】《%MUSHI_NAME:対象NUM%》回避了攻撃！")
		MUSHI_MSGCL:RESULT = C_AQUA
	ENDIF
	CALL MUSHI_BATTLE_MSG
	RETURN
ENDIF

;防御時判定
IF STRCOUNT(MUSHI_STATUS:攻撃対象, "<陽炎>")
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:攻撃対象%】《%MUSHI_NAME:対象NUM%》只是幻影！")
	MUSHI_MSGCL:RESULT = C_CREAM
	MUSHI_STATUS:攻撃対象'= REPLACE(MUSHI_STATUS:攻撃対象, "<陽炎>", "")
	ダメージ補正 = 0
ELSEIF STRCOUNT(MUSHI_SKL:対象NUM, "Counter") && スキル判定(10, 攻撃対象, 対象NUM)
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:攻撃対象%】《%MUSHI_NAME:対象NUM%》の『Counter』発動！！")
	MUSHI_MSGCL:RESULT = C_CREAM
	CALL MUSHI_MSGSET(@"返还等量伤害！！")
	攻撃対象 = ARG
	対象NUM = NUM
ELSEIF STRCOUNT(MUSHI_SKL:対象NUM, "僅防禦") && スキル判定(30, 攻撃対象, 対象NUM)
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:攻撃対象%】《%MUSHI_NAME:対象NUM%》の『僅防禦』発動！")
	MUSHI_MSGCL:RESULT = C_CREAM
	CALL MUSHI_MSGSET(@"受到伤害减半！")
	TIMES ダメージ補正, 0.50
ENDIF
IF STRCOUNT(MUSHI_STATUS:攻撃対象, "<緩慢>")
	CALL MUSHI_MSGSET(@"《%MUSHI_NAME:対象NUM%》在<緩慢>状態下受到伤害增加！")
	TIMES ダメージ補正, 1.50
ENDIF

;ダメージ判定
;無効化されたら終了
IF !ダメージ補正
	CALL MUSHI_BATTLE_MSG
	RETURN
ENDIF
[SKIPSTART]
	;レアリティ差補正※保留
	SELECTCASE MUSHI_RARE:NUM - MUSHI_RARE:対象NUM
	CASE 1
		TIMES ダメージ補正, 1.05
	CASE 2
		TIMES ダメージ補正, 1.10
	CASE 3
		TIMES ダメージ補正, 1.15
	CASE 4
		TIMES ダメージ補正, 1.20
	CASE IS >= 5
		TIMES ダメージ補正, 1.30
	ENDSELECT
[SKIPEND]
;相性補正
VARSET LOCAL
LOCAL += STRCOUNT(MUSHI_TYPE:NUM, "赤") * STRCOUNT(MUSHI_TYPE:対象NUM, "緑")
LOCAL += STRCOUNT(MUSHI_TYPE:NUM, "緑") * STRCOUNT(MUSHI_TYPE:対象NUM, "青")
LOCAL += STRCOUNT(MUSHI_TYPE:NUM, "青") * STRCOUNT(MUSHI_TYPE:対象NUM, "赤")
LOCAL += STRCOUNT(MUSHI_TYPE:NUM, "白") * STRCOUNT(MUSHI_TYPE:対象NUM, "黒")
LOCAL += STRCOUNT(MUSHI_TYPE:NUM, "黒") * STRCOUNT(MUSHI_TYPE:対象NUM, "白")
WHILE LOCAL:1 < LOCAL
	TIMES ダメージ補正, 1.50
	LOCAL:1 ++
WEND
SIF LOCAL:1
	CALL MUSHI_MSGSET(@"属性相性卓越！")

;ダメージ決定
与えるダメージ = MUSHI_ATK:NUM * ダメージ補正 / 100
;乱数補正
与えるダメージ = 与えるダメージ * (80 + RAND:40) / 100

SIF 固定ダメージ
	与えるダメージ = 固定ダメージ

CALL MUSHI_DAMAGE(対象NUM, 与えるダメージ)
CALL MUSHI_MSGSET(@"【%BATTLERNAME:攻撃対象%】《%MUSHI_NAME:対象NUM%》受到了 {与えるダメージ} 的伤害！")
MUSHI_MSGCL:RESULT = C_ORANGE

;[吸収攻撃]の効果
IF 攻撃スキル == "吸収攻撃"
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》回復了 {与えるダメージ} ！")
	MUSHI_MSGCL:RESULT = C_L_GREEN
	MUSHI_HP:NUM = MIN(MUSHI_HP:NUM + 与えるダメージ, MUSHI_MAXHP:NUM)
ENDIF
;[逆襲]の効果
IF INRANGE(MUSHI_HP:対象NUM, 1, MUSHI_MAXHP:対象NUM / 2) && STRCOUNT(MUSHI_SKL:対象NUM, "逆襲") && !STRCOUNT(MUSHI_STATUS:攻撃対象, "<逆襲>")
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:攻撃対象%】《%MUSHI_NAME:対象NUM%》の『逆襲』発動！")
	MUSHI_MSGCL:RESULT = C_ORANGE
	CALL MUSHI_MSGSET(@"受到攻撃后变为了<逆襲>状態！！")
	MUSHI_STATUS:攻撃対象 += "<逆襲>"
	CALL MUSHI_PALAM(MUSHI_STAND:攻撃対象, MUSHI_POWER:攻撃対象, MUSHI_HP:対象NUM)
	CALL MUSHI_FLAGSETTING(MUSHI_STAND:攻撃対象, 対象NUM)
ENDIF

;◆◆ここで一度メッセージ表示◆◆
CALL MUSHI_BATTLE_MSG

VARSET LOCAL
;KO判定
IF MUSHI_HP:対象NUM <= 0
	CALL MUSHI_BATTLE_CHECK_KO(ARG, NUM)
	SIF MUSHI_FINISH
		RETURN
ELSEIF 攻撃スキル != "" && STRCOUNT(MUSHI_SKL:対象NUM, "太古の力")
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:攻撃対象%】《%MUSHI_NAME:対象NUM%》の『太古の力』発動！！")
	MUSHI_MSGCL:RESULT = C_CREAM
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:攻撃対象%】《%MUSHI_NAME:対象NUM%》不受%攻撃スキル%効果的影响！")
	CALL MUSHI_BATTLE_MSG
ELSE
	;ダメージ後処理
	SELECTCASE 攻撃スキル
	CASE "毒攻撃"
		CALL MUSHI_MSGSET(@"【%BATTLERNAME:攻撃対象%】《%MUSHI_NAME:対象NUM%》中<毒>了！")
		MUSHI_MSGCL:RESULT = C_P_PURPLE
		MUSHI_STATUS:攻撃対象 += "<毒>"
	CASE "猛毒攻撃"
		CALL MUSHI_MSGSET(@"【%BATTLERNAME:攻撃対象%】《%MUSHI_NAME:対象NUM%》中<猛毒>了！")
		MUSHI_MSGCL:RESULT = C_P_PURPLE
		MUSHI_STATUS:攻撃対象 += "<猛毒>"
	CASE "麻痹攻撃"
		CALL MUSHI_MSGSET(@"【%BATTLERNAME:攻撃対象%】《%MUSHI_NAME:対象NUM%》被<麻痹>了！")
		MUSHI_MSGCL:RESULT = C_P_PURPLE
		MUSHI_STATUS:攻撃対象 += "<麻痹>"
	CASE "睡眠粉"
		CALL MUSHI_MSGSET(@"【%BATTLERNAME:攻撃対象%】《%MUSHI_NAME:対象NUM%》落入<睡眠>中了！")
		MUSHI_MSGCL:RESULT = C_P_PURPLE
		MUSHI_STATUS:攻撃対象 += "<睡眠>"
	CASE "音波攻撃"
		CALL MUSHI_MSGSET(@"【%BATTLERNAME:攻撃対象%】《%MUSHI_NAME:対象NUM%》<混乱>了！")
		MUSHI_MSGCL:RESULT = C_P_PURPLE
		MUSHI_STATUS:攻撃対象 += "<混乱>"
	CASE "粘液攻撃"
		CALL MUSHI_MSGSET(@"【%BATTLERNAME:攻撃対象%】《%MUSHI_NAME:対象NUM%》陷入了<緩慢>状態！")
		MUSHI_MSGCL:RESULT = C_P_PURPLE
		MUSHI_STATUS:攻撃対象 += "<緩慢>"
	CASE "悪臭攻撃"
		CALL MUSHI_MSGSET(@"【%BATTLERNAME:攻撃対象%】《%MUSHI_NAME:対象NUM%》陷入了<悪臭>状態！")
		MUSHI_MSGCL:RESULT = C_P_PURPLE
		MUSHI_STATUS:攻撃対象 += "<悪臭>"
	CASE "诅咒攻撃"
		;現在HPの1/2(切り上げ)ダメージを与える
		LOCAL = MUSHI_HP:対象NUM / 2 + 1
		CALL MUSHI_DAMAGE(対象NUM, LOCAL)
		CALL MUSHI_MSGSET(@"【%BATTLERNAME:攻撃対象%】《%MUSHI_NAME:対象NUM%》因诅咒遭受了 {LOCAL} 的伤害！")
		MUSHI_MSGCL:RESULT = C_P_PURPLE
	ENDSELECT
	IF 攻撃スキル != ""
		;状態変化を考慮してステータス再設定
		CALL MUSHI_PALAM(MUSHI_STAND:攻撃対象, MUSHI_POWER:攻撃対象, MUSHI_HP:対象NUM)
		CALL MUSHI_FLAGSETTING(MUSHI_STAND:攻撃対象, 対象NUM)
		CALL MUSHI_BATTLE_MSG
	ENDIF
ENDIF
IF STRCOUNT(MUSHI_SKL:NUM, "蝴蝶效应") && スキル判定(5, ARG, NUM)
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『蝴蝶效应』発動！")
	MUSHI_MSGCL:RESULT = C_L_GREEN
	CALL MUSHI_MSGSET(@"蝴蝶的翅膀扇动引起了竜卷风！！")
	FOR LOCAL, 1, MUSHI_CHARANUM + 1
		IF MUSHI_HP:(MUSHI_STANDNUM:LOCAL) > 1
			LOCAL:1 = MUSHI_HP:(MUSHI_STANDNUM:LOCAL) / 2
			CALL MUSHI_DAMAGE(MUSHI_STANDNUM:LOCAL, LOCAL:1)
			CALL MUSHI_MSGSET(@"【%BATTLERNAME:LOCAL%】《%MUSHI_NAME:(MUSHI_STANDNUM:LOCAL)%》受到了 {LOCAL:1} 的伤害！")
			MUSHI_MSGCL:RESULT = C_ORANGE
		ENDIF
	NEXT
	;致命傷はうけない（MSGだけでいい）けど一応
	CALL MUSHI_BATTLE_CHECK_KO(ARG, NUM)
	SIF MUSHI_FINISH
		RETURN
ENDIF
IF STRCOUNT(MUSHI_SKL:NUM, "騒音攻撃") && MUSHI_CHARANUM > 2
	LOCAL:1 = 0
	FOR LOCAL, 1, MUSHI_CHARANUM + 1
		;やられてる
		SIF MUSHI_HP:(MUSHI_STANDNUM:LOCAL) <= 0
			CONTINUE
		;敗北してる
		SIF !MUSHI_REST:LOCAL
			CONTINUE
		;自身
		SIF LOCAL == ARG
			CONTINUE
		;攻撃対象は除外
		SIF LOCAL == 攻撃対象
			CONTINUE
		;仲間
		SIF MUSHI_TEAM && (LOCAL % 2) == (ARG % 2)
			CONTINUE
		;一度でもダメージを与えるなら表示する
		IF !LOCAL:1
			CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『騒音攻撃』発動！")
			MUSHI_MSGCL:RESULT = C_L_GREEN
			CALL MUSHI_MSGSET(@"对其他所有敵人造成伤害！")
			LOCAL:1 = 1
		ENDIF
		CALL MUSHI_DAMAGE(MUSHI_STANDNUM:LOCAL, 与えるダメージ)
		CALL MUSHI_MSGSET(@"【%BATTLERNAME:LOCAL%】《%MUSHI_NAME:(MUSHI_STANDNUM:LOCAL)%》受到了 {与えるダメージ} 的伤害！")
		MUSHI_MSGCL:RESULT = C_ORANGE
	NEXT
	IF LOCAL:1
		CALL MUSHI_BATTLE_CHECK_KO(ARG, NUM)
		SIF MUSHI_FINISH
			RETURN
	ENDIF
ENDIF
IF STRCOUNT(MUSHI_SKL:対象NUM, "発光")
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:攻撃対象%】《%MUSHI_NAME:対象NUM%》の『発光』発動！")
	MUSHI_MSGCL:RESULT = C_L_GREEN
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》<混乱>了！")
	MUSHI_MSGCL:RESULT = C_P_PURPLE
	MUSHI_STATUS:ARG += "<混乱>"
	CALL MUSHI_BATTLE_MSG
ENDIF
IF STRCOUNT(MUSHI_STATUS:ARG, "<混乱>")
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》在<混乱>中！")
	MUSHI_MSGCL:RESULT = C_P_PURPLE
	CALL MUSHI_DAMAGE(NUM, 与えるダメージ / 2)
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》受到了 {与えるダメージ / 2} 的伤害！")
	MUSHI_MSGCL:RESULT = C_ORANGE
	CALL MUSHI_BATTLE_CHECK_KO
	SIF MUSHI_FINISH
		RETURN
ENDIF
VARSET LOCAL
IF STRCOUNT(MUSHI_SKL:NUM, "怪诞攻撃")
	CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『怪诞攻撃』発動！")
	MUSHI_MSGCL:RESULT = C_RED
	CALL MUSHI_MSGSET(@"毛骨悚然的挙動对全員造成了精神伤害！！")
	MUSHI_MSGCL:RESULT = C_RED
	CALL MUSHI_BATTLE_MSG
	FOR LOCAL, 1, MUSHI_CHARANUM + 1
		SIF MUSHI_MENTAL:LOCAL && MUSHI_REST:LOCAL
			MUSHI_MENTAL:LOCAL = MAX(MUSHI_MENTAL:LOCAL - 与えるダメージ, 0)
		IF !MUSHI_MENTAL:LOCAL && MUSHI_REST:LOCAL
			CALL MUSHI_MSGSET(@"【%BATTLERNAME:LOCAL%】无法忍耐眼前的惨状而弃权了！")
			MUSHI_MSGCL:RESULT = C_RED
			LOCAL:1 = 1
		ENDIF
	NEXT
	IF LOCAL:1
		CALL MUSHI_BATTLE_CHECK_DO
		SIF MUSHI_FINISH
			RETURN
	ENDIF
ENDIF

;-------------------------------------------------
;斗虫：スキル発動判定関数
;ARG  プレイヤー番号
;NUM  フラグ番号
;-------------------------------------------------
@スキル判定(確率, ARG, NUM)
#FUNCTION
#DIM 確率
#DIM NUM
SIF STRCOUNT(MUSHI_STATUS:ARG, "<得意地形>")
	TIMES 確率, 1.5
SIF STRCOUNT(MUSHI_SKL:NUM, "猛攻")
	TIMES 確率, 1.5
SIF GET_MUSHIDATA(MUSHI_SELECT:NUM, "Ｘ型")
	TIMES 確率, 1.5
SIF STRCOUNT(MUSHI_STATUS:ARG, "<麻痹>")
	確率 = 0

RETURNF RAND:100 < 確率

;-------------------------------------------------
;斗虫：ダメージ処理関数
;-------------------------------------------------
@MUSHI_DAMAGE(ARG, ARG:1)
MUSHI_HP:ARG = MAX(MUSHI_HP:ARG - ARG:1, 0)

;-------------------------------------------------
;斗虫：Ｋ．Ｏ．の判定関数
;ARG    攻撃プレイヤー番号
;NUM    攻撃プレイヤーの戦場に出しているムシのフラグ番号
;-------------------------------------------------
@MUSHI_BATTLE_CHECK_KO(ARG, NUM)
#DIM NUM
FOR LOCAL, 1, MUSHI_CHARANUM + 1
	;すでにやられてる
	IF MUSHI_HP:(MUSHI_STANDNUM:LOCAL) < 0
		CONTINUE
	;やられた（HP=0）
	ELSEIF !MUSHI_HP:(MUSHI_STANDNUM:LOCAL)
		IF STRCOUNT(MUSHI_SKL:(MUSHI_STANDNUM:LOCAL), "硬撑") && スキル判定(15, LOCAL, MUSHI_STANDNUM:LOCAL)
			CALL MUSHI_MSGSET(@"【%BATTLERNAME:LOCAL%】《%MUSHI_NAME:(MUSHI_STANDNUM:LOCAL)%》の『硬撑』発動！！")
			MUSHI_MSGCL:RESULT = C_YELLOW
			MUSHI_HP:(MUSHI_STANDNUM:LOCAL) = 1
		ELSE
			CALL MUSHI_MSGSET(@"【%BATTLERNAME:LOCAL%】《%MUSHI_NAME:(MUSHI_STANDNUM:LOCAL)%》倒下了！！")
			MUSHI_MSGCL:RESULT = C_RED
			;倒れたらHP=-1にしておく
			MUSHI_HP:(MUSHI_STANDNUM:LOCAL) = -1
			CLEARBIT MUSHI_REST:LOCAL, MUSHI_STANDNUM:LOCAL % 10
			;＠倒れた時口上
			CALL KOJO_MESSAGE_SEND("MUSHI_BATTLE", 残りムシ数(LOCAL), MUSHI_BATTLER:LOCAL, LOCAL, 0, "倒れた時")
			;[高揚]の効果
			IF STRCOUNT(MUSHI_SKL:NUM, "高揚") && !STRCOUNT(MUSHI_STATUS:ARG, "<高揚>")
				CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】《%MUSHI_NAME:NUM%》の『高揚』発動！")
				MUSHI_MSGCL:RESULT = C_L_GREEN
				CALL MUSHI_MSGSET(@"因敌人倒下而进入了<高揚>状態！！")
				MUSHI_STATUS:ARG += "<高揚>"
				CALL MUSHI_PALAM(MUSHI_STAND:ARG, MUSHI_POWER:ARG, MUSHI_HP:NUM)
				CALL MUSHI_FLAGSETTING(MUSHI_STAND:ARG, NUM)
			ENDIF
		ENDIF
	;[逆襲]の効果
	ELSEIF MUSHI_HP:(MUSHI_STANDNUM:LOCAL) <= MUSHI_MAXHP:(MUSHI_STANDNUM:LOCAL) / 2 && STRCOUNT(MUSHI_SKL:(MUSHI_STANDNUM:LOCAL), "逆襲") && !STRCOUNT(MUSHI_STATUS:LOCAL, "<逆襲>")
		CALL MUSHI_MSGSET(@"【%BATTLERNAME:LOCAL%】《%MUSHI_NAME:(MUSHI_STANDNUM:LOCAL)%》の『逆襲』発動！")
		MUSHI_MSGCL:RESULT = C_ORANGE
		CALL MUSHI_MSGSET(@"受到攻撃后变为了<逆襲>状態！！")
		MUSHI_STATUS:LOCAL += "<逆襲>"
		CALL MUSHI_PALAM(MUSHI_STAND:LOCAL, MUSHI_POWER:LOCAL, MUSHI_HP:(MUSHI_STANDNUM:LOCAL))
		CALL MUSHI_FLAGSETTING(MUSHI_STAND:LOCAL, MUSHI_STANDNUM:LOCAL)
	ENDIF
NEXT
CALL MUSHI_BATTLE_CHECK_DO
;-------------------------------------------------
;斗虫：ドロップアウト判定とそれに続くゲームセット判定の関数
;LOCAL:2     ドロップアウトしたプレイヤーの順位
;-------------------------------------------------
@MUSHI_BATTLE_CHECK_DO
#DIM LPCOUNT
VARSET LOCAL
FOR LPCOUNT, 1, MUSHI_CHARANUM + 1
	;MENTAL=-1は除外
	IF (!MUSHI_REST:LPCOUNT || !MUSHI_MENTAL:LPCOUNT) && MUSHI_MENTAL:LPCOUNT >= 0
		CALL MUSHI_MSGSET(@"【%BATTLERNAME:LPCOUNT%】敗退！！")
		MUSHI_MSGCL:RESULT = C_RED
		;＠敗退時口上
		CALL KOJO_MESSAGE_SEND("MUSHI_BATTLE", 残りムシ数(LPCOUNT), MUSHI_BATTLER:LPCOUNT, LPCOUNT, 0, "敗退時")
		;敗退したらMENTAL=-1にしておく
		MUSHI_MENTAL:LPCOUNT = -1
		MUSHI_REST:LPCOUNT = 0
		;順位の設定,从后面将チェックしていく
		FOR LOCAL, 1, MUSHI_CHARANUM + 1
			LOCAL:1 = MUSHI_CHARANUM + 1 - LOCAL
			IF !MUSHI_FINISH:(LOCAL:1)
				MUSHI_FINISH:(LOCAL:1) = LPCOUNT
				LOCAL:2 = LOCAL:1
				BREAK
			ENDIF
		NEXT
	ENDIF
NEXT
;◆◆◆ここでKOおよび敗退メッセージ表示◆◆
CALL MUSHI_BATTLE_MSG
;引き分け時の判定
IF LOCAL:2 == 1
	SETBIT MUSHI_REST:(MUSHI_FINISH:1), 3
	CALL MUSHI_MSGSET(@"什么、【%BATTLERNAME:(MUSHI_FINISH:1)%】《%MUSHI_NAME:(MUSHI_STANDNUM:(MUSHI_FINISH:1))%》用最後的力量站了起来！！")
	MUSHI_MSGCL:RESULT = C_YELLOW
	CALL MUSHI_BATTLE_MSG
	LOCAL:2 = 2
ENDIF
;チーム戦
IF MUSHI_TEAM
	;奇数か偶数どっちかが全滅したらゲームセット
	IF (!MUSHI_REST:1 && !MUSHI_REST:3 && !MUSHI_REST:5 && !MUSHI_REST:7) || (!MUSHI_REST:2 && !MUSHI_REST:4 && !MUSHI_REST:6 && !MUSHI_REST:8)
		VARSET MUSHI_FINISH
		;めんどいので手捏ね
		IF (!MUSHI_REST:1 && !MUSHI_REST:3 && !MUSHI_REST:5 && !MUSHI_REST:7)
			MUSHI_FINISH:1 = 2
			MUSHI_FINISH:2 = 4
			MUSHI_FINISH:3 = 6
			MUSHI_FINISH:4 = 8
		ELSE
			MUSHI_FINISH:1 = 1
			MUSHI_FINISH:2 = 3
			MUSHI_FINISH:3 = 5
			MUSHI_FINISH:4 = 7
		ENDIF
		FOR LOCAL, 1, MUSHI_CHARANUM + 1
			IF MUSHI_REST:LOCAL
				CALL MUSHI_MSGSET(@"%" " * (24 - STRLENS(BATTLERNAME:LOCAL))%☆☆☆勝者　团队【%BATTLERNAME:LOCAL%】☆☆☆")
				MUSHI_MSGCL:RESULT = C_YELLOW
				MUSHI_FINISH:0 = LOCAL
				BREAK
			ENDIF
		NEXT
		;◆◆◆ゲームセットメッセージ表示◆◆
		CALL MUSHI_BATTLE_MSG
	ENDIF
;個人戦
ELSE
	;2位が決まったらゲームセット
	IF LOCAL:2 == 2
		FOR LOCAL, 1, MUSHI_CHARANUM + 1
			IF MUSHI_REST:LOCAL
				CALL MUSHI_MSGSET(@"%" " * (30 - STRLENS(BATTLERNAME:LOCAL))%☆☆☆勝者　【%BATTLERNAME:LOCAL%】☆☆☆")
				MUSHI_MSGCL:RESULT = C_YELLOW
				MUSHI_FINISH:1 = LOCAL
				MUSHI_FINISH:0 = LOCAL
				BREAK
			ENDIF
		NEXT
		;◆◆◆ゲームセットメッセージ表示◆◆
		CALL MUSHI_BATTLE_MSG
	ENDIF
ENDIF

;-------------------------------------------------
;斗虫：ターン終了時処理
;-------------------------------------------------
@MUSHI_BATTLE_ENDSTEP
#DIM LPCOUNT
#DIM ダメージ
;[流砂]の効果（全員分）
VARSET LOCAL
FOR LPCOUNT, 1, MUSHI_CHARANUM + 1
	IF STRCOUNT(MUSHI_SKL:(MUSHI_STANDNUM:LPCOUNT), "流砂") && NAME_FIELD_TYPE(MUSHI_FIELD:99) == "[砂地]"
		FOR LOCAL, 1, MUSHI_CHARANUM + 1
			;やられてる
			SIF MUSHI_HP:(MUSHI_STANDNUM:LPCOUNT) <= 0
				CONTINUE
			;自身
			SIF LOCAL == LPCOUNT
				CONTINUE
			;仲間
			SIF MUSHI_TEAM && (LOCAL % 2) == (LPCOUNT % 2)
				CONTINUE
			;一度でもダメージを与えるなら表示する
			IF !LOCAL:1
				CALL MUSHI_MSGSET(@"【%BATTLERNAME:LPCOUNT%】《%MUSHI_NAME:(MUSHI_STANDNUM:LPCOUNT)%》の『流砂』発動！")
				MUSHI_MSGCL:RESULT = C_CREAM
				CALL MUSHI_MSGSET(@"将全部敵人拖入了流砂！")
				LOCAL:1 = 1
			ENDIF
			ダメージ = MUSHI_MAXHP:(MUSHI_STANDNUM:LOCAL) / 4
			CALL MUSHI_DAMAGE(MUSHI_STANDNUM:LOCAL, ダメージ)
			CALL MUSHI_MSGSET(@"【%BATTLERNAME:LOCAL%】《%MUSHI_NAME:(MUSHI_STANDNUM:LOCAL)%》受到了 {ダメージ} 的伤害！")
			MUSHI_MSGCL:RESULT = C_ORANGE
		NEXT
		IF LOCAL:1
			CALL MUSHI_BATTLE_CHECK_KO(LPCOUNT, MUSHI_STANDNUM:LPCOUNT)
			SIF MUSHI_FINISH
				RETURN
		ENDIF
	ENDIF
NEXT

;毒ダメージ処理,猛毒優先
VARSET LOCAL
FOR LPCOUNT, 1, MUSHI_CHARANUM + 1
	IF STRCOUNT(MUSHI_STATUS:LPCOUNT, "<猛毒>") && MUSHI_HP:(MUSHI_STANDNUM:LPCOUNT) > 0
		ダメージ = MUSHI_MAXHP:(MUSHI_STANDNUM:LPCOUNT) / 2
		CALL MUSHI_DAMAGE(MUSHI_STANDNUM:LPCOUNT, ダメージ)
		CALL MUSHI_MSGSET(@"【%BATTLERNAME:LPCOUNT%】《%MUSHI_NAME:(MUSHI_STANDNUM:LPCOUNT)%》受到了猛毒的 {ダメージ} 伤害！")
		MUSHI_MSGCL:RESULT = C_P_PURPLE
		LOCAL:1 = 1
	ELSEIF STRCOUNT(MUSHI_STATUS:LPCOUNT, "<毒>") && MUSHI_HP:(MUSHI_STANDNUM:LPCOUNT) > 0
		ダメージ = MUSHI_MAXHP:(MUSHI_STANDNUM:LPCOUNT) / 4
		CALL MUSHI_DAMAGE(MUSHI_STANDNUM:LPCOUNT, ダメージ)
		CALL MUSHI_MSGSET(@"【%BATTLERNAME:LPCOUNT%】《%MUSHI_NAME:(MUSHI_STANDNUM:LPCOUNT)%》受到了毒的 {ダメージ} 伤害！")
		MUSHI_MSGCL:RESULT = C_P_PURPLE
		LOCAL:1 = 1
	ENDIF
NEXT
;ダメージが発生したらKO判定
IF LOCAL:1
	CALL MUSHI_BATTLE_CHECK_KO(LPCOUNT, MUSHI_STANDNUM:LPCOUNT)
	SIF MUSHI_FINISH
		RETURN
ENDIF

;睡眠が起きる処理
VARSET LOCAL
FOR LPCOUNT, 1, MUSHI_CHARANUM + 1
	;確率1/2
	IF STRCOUNT(MUSHI_STATUS:LPCOUNT, "<睡眠>") && !RAND:2 && MUSHI_HP:(MUSHI_STANDNUM:LPCOUNT) > 0
		CALL MUSHI_MSGSET(@"【%BATTLERNAME:LPCOUNT%】《%MUSHI_NAME:(MUSHI_STANDNUM:LPCOUNT)%》从睡眠中醒来了！")
		MUSHI_MSGCL:RESULT = C_YELLOW
		MUSHI_STATUS:LPCOUNT'= REPLACE(MUSHI_STATUS:LPCOUNT, "<睡眠>", "")
		LOCAL:1 = 1
	ENDIF
NEXT
;起床が発生したらメッセージ表示
SIF LOCAL:1
	CALL MUSHI_BATTLE_MSG

;再生処理
VARSET LOCAL
FOR LPCOUNT, 1, MUSHI_CHARANUM + 1
	IF STRCOUNT(MUSHI_SKL:(MUSHI_STANDNUM:LPCOUNT), "再生") && INRANGE(MUSHI_HP:(MUSHI_STANDNUM:LPCOUNT), 1, MUSHI_MAXHP:(MUSHI_STANDNUM:LPCOUNT) - 1)
		LOCAL = MUSHI_MAXHP:(MUSHI_STANDNUM:LPCOUNT) / 4
		MUSHI_HP:(MUSHI_STANDNUM:LPCOUNT) = MIN(MUSHI_HP:(MUSHI_STANDNUM:LPCOUNT) + LOCAL, MUSHI_MAXHP:(MUSHI_STANDNUM:LPCOUNT))
		CALL MUSHI_MSGSET(@"【%BATTLERNAME:LPCOUNT%】《%MUSHI_NAME:(MUSHI_STANDNUM:LPCOUNT)%》の『再生』発動！")
		MUSHI_MSGCL:RESULT = C_L_GREEN
		CALL MUSHI_MSGSET(@"【%BATTLERNAME:LPCOUNT%】《%MUSHI_NAME:(MUSHI_STANDNUM:LPCOUNT)%》回復了 {LOCAL} ！")
		MUSHI_MSGCL:RESULT = C_L_GREEN
		LOCAL:1 = 1
	ENDIF
NEXT
;再生が発動したらメッセージ表示
SIF LOCAL:1
	CALL MUSHI_BATTLE_MSG

;入れ替え
VARSET LOCAL
FOR LPCOUNT, 1, MUSHI_CHARANUM + 1
	;敗退済み
	SIF !MUSHI_REST:LPCOUNT
		CONTINUE
	IF MUSHI_HP:(MUSHI_STANDNUM:LPCOUNT) <= 0
		;你は手動
		IF MUSHI_BATTLER:LPCOUNT == MASTER
			CLEARLINE MUSHI_LINE
			CALL MUSHI_BATTLE_CHANGE(LPCOUNT)
		ELSE
			;角色は上から順に出していく
			FOR LOCAL, 1, MUSHI_MAXSELECT + 1
				IF GETBIT(MUSHI_REST:LPCOUNT, LOCAL)
					CALL MUSHI_BATTLE_ETB(LPCOUNT, LPCOUNT * 10 + LOCAL)
					BREAK
				ENDIF
			NEXT
		ENDIF
		LOCAL:1 = 1
	ENDIF
NEXT
;入れ替えが発生したらメッセージ表示
SIF LOCAL:1
	CALL MUSHI_BATTLE_MSG

;-------------------------------------------------
;斗虫：MASTERの手動入れ替え関数
;戦場表示とメッセージ表示の間にINPUTが入るので事前に戦場表示を消しておき、
;メッセージ表示（ETB）の前に戦場表示をする
;-------------------------------------------------
@MUSHI_BATTLE_CHANGE(ARG)
#DIM 選んだムシ
PRINTFORML ◆选择下一只虫子！
FOR LOCAL, 1, MUSHI_MAXSELECT + 1
	SIF !GETBIT(MUSHI_REST:ARG, LOCAL)
		SETCOLOR C_GRAY
	PRINTFORM [{LOCAL, 2}] 
	CALL SHOW_MUSHI_DATA(MUSHI_SELECT:(ARG * 10 + LOCAL), "一行")
	PRINTL 
	RESETCOLOR
NEXT
INPUT
IF INRANGE(RESULT, 1, MUSHI_MAXSELECT) && GETBIT(MUSHI_REST:ARG, RESULT)
	選んだムシ = RESULT
	CALL MUSHI_BATTLE_FIELD
	CALL MUSHI_BATTLE_ETB(ARG, ARG * 10 + 選んだムシ)
	MUSHI_LINE += 2 + MUSHI_MAXSELECT
	RETURN
ENDIF
CLEARLINE 2 + MUSHI_MAXSELECT
RESTART

;-------------------------------------------------
;斗虫：戦場に出た時のスキル処理・能力値計算関数
;ARG  プレイヤー番号
;NUM  フラグ番号
;-------------------------------------------------
@MUSHI_BATTLE_ETB(ARG, NUM)
#DIM NUM
;STANDを設定
MUSHI_STAND:ARG = MUSHI_SELECT:NUM
MUSHI_STANDNUM:ARG = NUM
MUSHI_STATUS:ARG = 
MUSHI_NAME = %MUSHI_NAME:NUM%
CALL MUSHI_MSGSET(@"【%BATTLERNAME:ARG%】派《%MUSHI_NAME%》を进入了戦場！")
;＠ETB口上
CALL KOJO_MESSAGE_SEND("MUSHI_BATTLE", 残りムシ数(ARG), MUSHI_BATTLER:ARG, ARG, 0, "戦場に出した")

;フィールド判定
IF STRCOUNT(MUSHI_SKL:NUM, "浄化")
	CALL MUSHI_MSGSET(@"《%MUSHI_NAME%》の[浄化]発動！")
	MUSHI_MSGCL:RESULT = C_AQUA
	CALL MUSHI_BATTLE_フィールド変化(7)
ELSEIF MUSHI_FIELD:NUM & MUSHI_FIELD:99
	MUSHI_STATUS:ARG += "<得意地形>"
ENDIF
;得意季節
IF STRCOUNT(MUSHI_SKL:NUM, "春の虫") && GET_MONTH() == "春之月"
	MUSHI_STATUS:ARG += "<得意季節>"
ELSEIF STRCOUNT(MUSHI_SKL:NUM, "夏の虫") && GET_MONTH() == "夏之月"
	MUSHI_STATUS:ARG += "<得意季節>"
ELSEIF STRCOUNT(MUSHI_SKL:NUM, "秋の虫") && GET_MONTH() == "秋之月"
	MUSHI_STATUS:ARG += "<得意季節>"
ENDIF
;ETBスキル
IF 残りムシ数(ARG) == 1
	IF STRCOUNT(MUSHI_SKL:NUM, "大将")
		MUSHI_STATUS:ARG += "<大将>"
		CALL MUSHI_MSGSET(@"《%MUSHI_NAME%》の[大将]発動！")
		MUSHI_MSGCL:RESULT = C_L_GREEN
		CALL MUSHI_MSGSET(@"《%MUSHI_NAME%》因为是最後的一匹而充满活力！")
		MUSHI_MSGCL:RESULT = C_YELLOW
	ELSE
		CALL MUSHI_MSGSET(@"《%MUSHI_NAME%》是最後的一匹！")
		MUSHI_MSGCL:RESULT = C_ORANGE
	ENDIF
ENDIF
IF STRCOUNT(MUSHI_SKL:NUM, "陽炎")
	MUSHI_STATUS:ARG += "<陽炎>"
	CALL MUSHI_MSGSET(@"《%MUSHI_NAME%》の[陽炎]発動！")
	MUSHI_MSGCL:RESULT = C_L_GREEN
	CALL MUSHI_MSGSET(@"《%MUSHI_NAME%》身边环绕着热雾！")
	MUSHI_MSGCL:RESULT = C_CREAM
ENDIF
;能力値再設定,戦闘HPは満タン
CALL MUSHI_PALAM(MUSHI_STAND:ARG, MUSHI_POWER:ARG, 0, MUSHI_STATUS:ARG)
CALL MUSHI_FLAGSETTING(MUSHI_STAND:ARG, NUM)

;-------------------------------------------------
;斗虫：フィールドタイプが変わった時の処理関数
;得意地形が変わってステータスも変わるので再設定する
;-------------------------------------------------
@MUSHI_BATTLE_フィールド変化(ARG)
#DIM NUM
MUSHI_FIELD:99 = 0
SETBIT MUSHI_FIELD:99, ARG
CALL MUSHI_MSGSET(@"场地変化为＜%NAME_FIELD_TYPE(MUSHI_FIELD:99)%＞了！")
MUSHI_MSGCL:RESULT = C_L_GREEN
;得意地形の再設定とそれによる能力値の再設定
FOR LOCAL, 1, MUSHI_CHARANUM + 1
	NUM = MUSHI_STANDNUM:LOCAL
	IF MUSHI_FIELD:NUM & MUSHI_FIELD:99
		MUSHI_STATUS:LOCAL += "<得意地形>"
	ELSEIF STRCOUNT(MUSHI_STATUS:LOCAL, "<得意地形>")
		MUSHI_STATUS:LOCAL '= REPLACE(MUSHI_STATUS:LOCAL, "<得意地形>", "")
	ENDIF
	CALL MUSHI_PALAM(MUSHI_STAND:LOCAL, MUSHI_POWER:LOCAL, MUSHI_HP:NUM)
	CALL MUSHI_FLAGSETTING(MUSHI_STAND:LOCAL, NUM)
NEXT
;-------------------------------------------------
;斗虫：プレイヤー番号ARGの残りムシ数を返す関数
;-------------------------------------------------
@残りムシ数(ARG)
#FUNCTION
LOCAL:1 = 0
FOR LOCAL, 1, MUSHI_MAXSELECT + 1
	SIF GETBIT(MUSHI_REST:ARG, LOCAL)
		LOCAL:1 ++
NEXT
RETURNF LOCAL:1
