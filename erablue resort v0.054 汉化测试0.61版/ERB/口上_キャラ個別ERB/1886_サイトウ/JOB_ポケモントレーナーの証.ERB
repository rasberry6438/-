@証関数_ポケモントレーナーの証(処理モード, 対象キャラ)
#DIM 対象キャラ
#DIMS 処理モード

SELECTCASE 処理モード
	CASE "ジョブ証種別"
		証関連文字列受け渡し = 通常ジョブ
	CASE "証名"
		TSTR:コマンド名受渡 = ポケモントレーナーの証
	CASE "クラス名"
		SIF 対象キャラ <= 0
			RETURN 0
		SELECTCASE GET_JOBSKILL_LEVEL(対象キャラ)
			CASE IS >= 3
				RESULTS = ポケモンマスター
				RESULTS:1 = Class.III
				RETURN 1
			CASE 2
				RESULTS = ジムリーダー
				RESULTS:1 = Class.II
				RETURN 1
			CASEELSE
				RESULTS = ポケモントレーナー
				RESULTS:1 = Class.I
				RETURN 1
		ENDSELECT
	CASE "フレーバー"
		詳細文文字列受け渡し変数 '= "ポケモンを捕まえ、育て、勝負するのテイマーの証。<br>"
		詳細文文字列受け渡し変数 += "ポケモンに指示したり、アイテムを使ったりできる。<br>"
ENDSELECT

;ランダム抽選では出現しない
;@証出現率_決闘者の証(入手タイプ, 装備ランク)

@証アビ関数_ポケモントレーナーの証_1(処理モード, 対象キャラ)
#DIM 対象キャラ
#DIMS 処理モード
#DIM LEVEL

IF キャラ一致チェック(対象キャラ, "[伽勒尔空手道的天才]彩豆")
	CALLFORM ポケモントレーナーの証_1_サイトウ(処理モード, 対象キャラ)
ELSE
	TSTR:コマンド名受渡 = 
ENDIF

@ポケモントレーナーの証_1_サイトウ(処理モード, 対象キャラ)
#DIM 対象キャラ
#DIMS 処理モード
#DIM LEVEL
#DIMS CONST アビ名 = "どうぐ"
#DIM CONST 消費ＭＰ = 0
#DIM RESULT保存
#DIM 隊列番号
#DIM バリア行数
#DIMS バフ枠保存
#DIM ＨＰ比較用
#DIMS 表示文字列1
#DIMS 表示文字列2
#DIMS 表示文字列3

IF 対象キャラ > 0
	LEVEL = GET_JOBSKILL_LEVEL(対象キャラ)
ELSE
	LEVEL = 1
ENDIF

SIF まんたんのくすり_サイトウ == 0 && げんきのかたまり_サイトウ == 0
	アビテンプレート用_アビ封印用フラグ = 1

SELECTCASE 処理モード
	CASE "アビ名"
		SIF LEVEL > 0 && 連携中 != 1
			TSTR:コマンド名受渡 '= アビ名
	CASE "アビ説明文"
		詳細文文字列受け渡し変数 '= @"■%アビ名%<br>"
		詳細文文字列受け渡し変数 += @"　ポケモンに道具を使用する"
		RETURN 消費ＭＰ
	CASE "アビ効果"
		KSTR:(K++) = ■使用する道具の選択
		IF まんたんのくすり_サイトウ == 0
			NSTR:(K++) = <font color='#%カラーパレット_HTML("グレーアウト")%'>[100] %"まんたんのくすり", 32, LEFT%</font>
		ELSE
			NSTR:(K++) = <button value = '{100}'>[{100}] %"まんたんのくすり", 24, LEFT%</button>
		ENDIF
		IF ピーピーマックス_サイトウ == 0
			NSTR:(K++) = <font color='#%カラーパレット_HTML("グレーアウト")%'>[101] %"ピーピーマックス", 32, LEFT%</font>
		ELSE
			NSTR:(K++) = <button value = '{101}'>[{101}] %"ピーピーマックス", 24, LEFT%</button>
		ENDIF
		IF げんきのかたまり_サイトウ == 0
			KSTR:(K++) = <font color='#%カラーパレット_HTML("グレーアウト")%'>[102] %"げんきのかたまり", 32, LEFT%</font>
		ELSE
			KSTR:(K++) = <button value = '{102}'>[{102}] %"げんきのかたまり", 24, LEFT%</button>
		ENDIF
		KSTR:(K++) = <button value = '{999}'>[{999}] 戻る</button>
		CALL メッセージ欄表示用関数(,,,,1)
		CALL 口上変数初期化
		BINPUT
		SELECTCASE RESULT
			CASE 100
				GOTO まんたんのくすり使用
			CASE 101
				GOTO ピーピーマックス使用
			CASE 102
				GOTO げんきのかたまり使用
			CASEELSE
				アビテンプレート用_行動消費無しフラグ = 1
				RETURN 0
		ENDSELECT
		$まんたんのくすり使用
		KSTR:(K++) = ■まんたんのくすり✕{まんたんのくすり_サイトウ}個　ポケモン１体のＨＰをすべて回復します。
		FOR LOCAL, 0, 5
			表示文字列1 = %ポケモン名取得_サイトウ(LOCAL)%
			IF 召喚中ポケモン_サイトウ != LOCAL
				表示文字列2 = HP:{ポケモンＨＰ_サイトウ:LOCAL}/{ポケモン最大ＨＰ_サイトウ:LOCAL}
				ＨＰ比較用 = ポケモンＨＰ_サイトウ:LOCAL
			ELSE
				バフ枠保存 = %ポケモン名取得_サイトウ(召喚中ポケモン_サイトウ)%_サイトウ
				バリア行数 = バフ番号取得_枠(バフ枠保存, 隊列番号)
				表示文字列2 = HP:{ DT_CELL_GET("戦闘効果データベース", バリア行数, "効果量_固定値")}/{ポケモン最大ＨＰ_サイトウ:LOCAL}
				ＨＰ比較用 = DT_CELL_GET("戦闘効果データベース", バリア行数, "効果量_固定値")
			ENDIF
			表示文字列3 = PP:[{ＰＰ_サイトウ:LOCAL:0}/{最大ＰＰ_サイトウ:LOCAL:0}][{ＰＰ_サイトウ:LOCAL:1}/{最大ＰＰ_サイトウ:LOCAL:1}][{ＰＰ_サイトウ:LOCAL:2}/{最大ＰＰ_サイトウ:LOCAL:2}][{ＰＰ_サイトウ:LOCAL:3}/{最大ＰＰ_サイトウ:LOCAL:3}]
			IF ＨＰ比較用 == ポケモン最大ＨＰ_サイトウ:LOCAL || ＨＰ比較用 == 0
				KSTR:(K++) = <font color='#%カラーパレット_HTML("グレーアウト")%'>[{100 + LOCAL}] %表示文字列1, 12, LEFT% %表示文字列2, 12, LEFT% %表示文字列3%</font>
			ELSE
				KSTR:(K++) = <button value = '{100 + LOCAL}'>[{100 + LOCAL}] %表示文字列1, 12, LEFT% %表示文字列2, 12, LEFT% %表示文字列3%</button>
			ENDIF
		NEXT
		KSTR:(K++) = <button value = '{999}'>[{999}] 戻る</button>
		CALL メッセージ欄表示用関数(,,,,1)
		CALL 口上変数初期化
		BINPUT
		RESULT保存 = RESULT - 100
		SELECTCASE RESULT
			CASE 100 TO 104
				IF RESULT保存 == 召喚中ポケモン_サイトウ
					バフ枠保存 = %ポケモン名取得_サイトウ(RESULT保存)%_サイトウ
					バリア行数 = バフ番号取得_枠(バフ枠保存, 隊列番号)
					DT_CELL_SET "戦闘効果データベース", バリア行数, "効果量_固定値", ポケモン最大ＨＰ_サイトウ:RESULT保存
				ELSE
					ポケモンＨＰ_サイトウ:RESULT保存 = ポケモン最大ＨＰ_サイトウ:RESULT保存
				ENDIF
				まんたんのくすり_サイトウ--
				WSTR:(K++) = サイトウは%ポケモン名取得_サイトウ(RESULT保存)%にまんたんのくすりを使った！
				KSTR:(K++) = %ポケモン名取得_サイトウ(RESULT保存)%のＨＰが完全に回復した！
				CALL メッセージ欄表示用関数()
				CALL 口上変数初期化
				RETURN 0
			CASEELSE
				アビテンプレート用_行動消費無しフラグ = 1
				RETURN 0
		ENDSELECT
		$ピーピーマックス使用
		KSTR:(K++) = ■ピーピーマックス✕{ピーピーマックス_サイトウ}個　覚えている４つの技のPPをすべて回復します。
		FOR LOCAL, 0, 5
			表示文字列1 = %ポケモン名取得_サイトウ(LOCAL)%
			IF 召喚中ポケモン_サイトウ != LOCAL
				表示文字列2 = HP:{ポケモンＨＰ_サイトウ:LOCAL}/{ポケモン最大ＨＰ_サイトウ:LOCAL}
			ELSE
				バフ枠保存 = %ポケモン名取得_サイトウ(召喚中ポケモン_サイトウ)%_サイトウ
				バリア行数 = バフ番号取得_枠(バフ枠保存, 隊列番号)
				表示文字列2 = HP:{ DT_CELL_GET("戦闘効果データベース", バリア行数, "効果量_固定値")}/{ポケモン最大ＨＰ_サイトウ:LOCAL}
			ENDIF
			表示文字列3 = PP:[{ＰＰ_サイトウ:LOCAL:0}/{最大ＰＰ_サイトウ:LOCAL:0}][{ＰＰ_サイトウ:LOCAL:1}/{最大ＰＰ_サイトウ:LOCAL:1}][{ＰＰ_サイトウ:LOCAL:2}/{最大ＰＰ_サイトウ:LOCAL:2}][{ＰＰ_サイトウ:LOCAL:3}/{最大ＰＰ_サイトウ:LOCAL:3}]
			IF ポケモンＨＰ_サイトウ:LOCAL != 0 && (ＰＰ_サイトウ:LOCAL:0 != 最大ＰＰ_サイトウ:LOCAL:0 || ＰＰ_サイトウ:LOCAL:1 != 最大ＰＰ_サイトウ:LOCAL:1 || ＰＰ_サイトウ:LOCAL:2 != 最大ＰＰ_サイトウ:LOCAL:2 || ＰＰ_サイトウ:LOCAL:3 != 最大ＰＰ_サイトウ:LOCAL:3)
				KSTR:(K++) = <button value = '{100 + LOCAL}'>[{100 + LOCAL}] %表示文字列1, 12, LEFT% %表示文字列2, 12, LEFT% %表示文字列3%</button>
			ELSE
				KSTR:(K++) = <font color='#%カラーパレット_HTML("グレーアウト")%'>[{100 + LOCAL}] %表示文字列1, 12, LEFT% %表示文字列2, 12, LEFT% %表示文字列3%</font>
			ENDIF
		NEXT
		KSTR:(K++) = <button value = '{999}'>[{999}] 戻る</button>
		CALL メッセージ欄表示用関数(,,,,1)
		CALL 口上変数初期化
		BINPUT
		RESULT保存 = RESULT - 100
		SELECTCASE RESULT
			CASE 100 TO 104
				ＰＰ_サイトウ:RESULT保存:0 = 最大ＰＰ_サイトウ:RESULT保存:0
				ＰＰ_サイトウ:RESULT保存:1 = 最大ＰＰ_サイトウ:RESULT保存:1
				ＰＰ_サイトウ:RESULT保存:2 = 最大ＰＰ_サイトウ:RESULT保存:2
				ＰＰ_サイトウ:RESULT保存:3 = 最大ＰＰ_サイトウ:RESULT保存:3
				ピーピーマックス_サイトウ--
				WSTR:(K++) = サイトウは%ポケモン名取得_サイトウ(RESULT保存)%にピーピーマックスのくすりを使った！
				KSTR:(K++) = %ポケモン名取得_サイトウ(RESULT保存)%のＰＰが完全に回復した！
				CALL メッセージ欄表示用関数()
				CALL 口上変数初期化
				RETURN 0
			CASEELSE
				アビテンプレート用_行動消費無しフラグ = 1
				RETURN 0
		ENDSELECT
		$げんきのかたまり使用
		KSTR:(K++) = ■げんきのかたまり✕{げんきのかたまり_サイトウ}個　ポケモン１体を瀕死状態から回復し、ＨＰをすべて回復します。
		FOR LOCAL, 0, 5
			表示文字列1 = %ポケモン名取得_サイトウ(LOCAL)%
			IF 召喚中ポケモン_サイトウ != LOCAL
				表示文字列2 = HP:{ポケモンＨＰ_サイトウ:LOCAL}/{ポケモン最大ＨＰ_サイトウ:LOCAL}
			ELSE
				バフ枠保存 = %ポケモン名取得_サイトウ(召喚中ポケモン_サイトウ)%_サイトウ
				バリア行数 = バフ番号取得_枠(バフ枠保存, 隊列番号)
				表示文字列2 = HP:{ DT_CELL_GET("戦闘効果データベース", バリア行数, "効果量_固定値")}/{ポケモン最大ＨＰ_サイトウ:LOCAL}
			ENDIF
			表示文字列3 = PP:[{ＰＰ_サイトウ:LOCAL:0}/{最大ＰＰ_サイトウ:LOCAL:0}][{ＰＰ_サイトウ:LOCAL:1}/{最大ＰＰ_サイトウ:LOCAL:1}][{ＰＰ_サイトウ:LOCAL:2}/{最大ＰＰ_サイトウ:LOCAL:2}][{ＰＰ_サイトウ:LOCAL:3}/{最大ＰＰ_サイトウ:LOCAL:3}]
			IF ポケモンＨＰ_サイトウ:LOCAL == 0
				KSTR:(K++) = <button value = '{100 + LOCAL}'>[{100 + LOCAL}] %表示文字列1, 12, LEFT% %表示文字列2, 12, LEFT% %表示文字列3%</button>
			ELSE
				KSTR:(K++) = <font color='#%カラーパレット_HTML("グレーアウト")%'>[{100 + LOCAL}] %表示文字列1, 12, LEFT% %表示文字列2, 12, LEFT% %表示文字列3%</font>
			ENDIF
		NEXT
		KSTR:(K++) = <button value = '{999}'>[{999}] 戻る</button>
		CALL メッセージ欄表示用関数(,,,,1)
		CALL 口上変数初期化
		BINPUT
		RESULT保存 = RESULT - 100
		SELECTCASE RESULT
			CASE 100 TO 104
				ポケモンＨＰ_サイトウ:RESULT保存 = ポケモン最大ＨＰ_サイトウ:RESULT保存
				げんきのかたまり_サイトウ--
				WSTR:(K++) = サイトウは%ポケモン名取得_サイトウ(RESULT保存)%にげんきのかたまりを使った！
				KSTR:(K++) = %ポケモン名取得_サイトウ(RESULT保存)%は瀕死状態から立ち直った！
				CALL メッセージ欄表示用関数()
				CALL 口上変数初期化
				RETURN 0
			CASEELSE
				アビテンプレート用_行動消費無しフラグ = 1
				RETURN 0
		ENDSELECT
ENDSELECT

@証アビ関数_ポケモントレーナーの証_2(処理モード, 対象キャラ)
#DIM 対象キャラ
#DIMS 処理モード
#DIM LEVEL
#DIM 隊列番号

隊列番号 = キャラ隊列検索(対象キャラ)

IF キャラ一致チェック(対象キャラ, "[伽勒尔空手道的天才]彩豆")
	IF 残ポケモン数取得_サイトウ() < 2 && げんきのかたまり_サイトウ == 0 && ＰＰ_サイトウ:召喚中ポケモン_サイトウ:0 == 0 && ＰＰ_サイトウ:召喚中ポケモン_サイトウ:1 == 0 && ＰＰ_サイトウ:召喚中ポケモン_サイトウ:2 == 0 && ＰＰ_サイトウ:召喚中ポケモン_サイトウ:3 == 0 && ダンジョン表示モード == "戦闘画面"
		CALLFORM ポケモントレーナーの証_2_1_サイトウ(処理モード, 対象キャラ)
	ELSEIF 召喚中ポケモン_サイトウ == 3 && 戦闘中カウント:隊列番号:8 != 0 && ＰＰ_サイトウ:召喚中ポケモン_サイトウ:0 == 0 && ＰＰ_サイトウ:召喚中ポケモン_サイトウ:1 == 0 && ＰＰ_サイトウ:召喚中ポケモン_サイトウ:2 == 0 && ＰＰ_サイトウ:召喚中ポケモン_サイトウ:3 == 0 && ダンジョン表示モード == "戦闘画面"
		CALLFORM ポケモントレーナーの証_2_1_サイトウ(処理モード, 対象キャラ)
	ELSE
		CALLFORM ポケモントレーナーの証_2_サイトウ(処理モード, 対象キャラ)
	ENDIF
ELSE
	TSTR:コマンド名受渡 = 
ENDIF

@ポケモントレーナーの証_2_サイトウ(処理モード, 対象キャラ)
#DIM 対象キャラ
#DIMS 処理モード
#DIM LEVEL
#DIMS CONST アビ名 = "交代"
#DIM CONST 消費ＭＰ = 0
#DIM 隊列番号
#DIM バリア行数
#DIMS バフ枠保存

IF 対象キャラ > 0
	LEVEL = GET_JOBSKILL_LEVEL(対象キャラ)
ELSE
	LEVEL = 1
ENDIF

隊列番号 = キャラ隊列検索(対象キャラ)

SIF 残ポケモン数取得_サイトウ() < 2 || 戦闘中カウント:隊列番号:8 != 0
	アビテンプレート用_アビ封印用フラグ = 1

SELECTCASE 処理モード
	CASE "アビ名"
		SIF LEVEL > 0 && 連携中 != 1
			TSTR:コマンド名受渡 '= アビ名
	CASE "アビ説明文"
		詳細文文字列受け渡し変数 '= @"■%アビ名%<br>"
		詳細文文字列受け渡し変数 += @"　戦うポケモンを交代する"
		RETURN 消費ＭＰ
	CASE "アビ効果"
		CALL ポケモン召喚一覧表示_サイトウ(隊列番号, 召喚中ポケモン_サイトウ)
		SIF RESULT == 1
			アビテンプレート用_行動消費無しフラグ = 1
ENDSELECT

@ポケモントレーナーの証_2_1_サイトウ(処理モード, 対象キャラ)
#DIM 対象キャラ
#DIMS 処理モード
#DIM LEVEL
#DIMS CONST アビ名 = "パス"
#DIM CONST 消費ＭＰ = 0
#DIM 隊列番号


IF 対象キャラ > 0
	LEVEL = GET_JOBSKILL_LEVEL(対象キャラ)
ELSE
	LEVEL = 1
ENDIF

隊列番号 = キャラ隊列検索(対象キャラ)

SIF 残ポケモン数取得_サイトウ() < 2 || 戦闘中カウント:隊列番号:8 != 0
	アビテンプレート用_アビ封印用フラグ = 1

SELECTCASE 処理モード
	CASE "アビ名"
		SIF LEVEL > 0 && 連携中 != 1
			TSTR:コマンド名受渡 '= アビ名
	CASE "アビ説明文"
		詳細文文字列受け渡し変数 '= @"■%アビ名%<br>"
		詳細文文字列受け渡し変数 += @"　行動を終了する"
		RETURN 消費ＭＰ
	CASE "アビ効果"
ENDSELECT

@証アビ関数_ポケモントレーナーの証_3(処理モード, 対象キャラ)
#DIM 対象キャラ
#DIMS 処理モード
#DIM LEVEL

IF キャラ一致チェック(対象キャラ, "[伽勒尔空手道的天才]彩豆") && ダンジョン表示モード == "戦闘画面"
	CALLFORM ポケモントレーナーの証_3_サイトウ(処理モード, 対象キャラ)
ELSE
	TSTR:コマンド名受渡 = 
ENDIF

@ポケモントレーナーの証_3_サイトウ(処理モード, 対象キャラ)
#DIM 対象キャラ
#DIMS 処理モード
#DIM LEVEL
#DIMS アビ名
#DIM CONST 消費ＭＰ = 0
#DIM 隊列番号
#DIM バリア行数
#DIMS バフ枠保存
#DIM バリア耐久

IF 対象キャラ > 0
	LEVEL = GET_JOBSKILL_LEVEL(対象キャラ)
ELSE
	LEVEL = 1
ENDIF

隊列番号 = キャラ隊列検索(対象キャラ)

IF BATTLE_STATE:隊列番号:奥義ゲージ >= 100 && 召喚中ポケモン_サイトウ == 4 &&ダイマックス_サイトウ == 0
	アビ名 = <font color='#%カラーパレット_HTML("真っ赤")%'>キョダイマックス</font>
ELSEIF BATTLE_STATE:隊列番号:奥義ゲージ >= 100 && 召喚中ポケモン_サイトウ != 4 &&ダイマックス_サイトウ == 0
	アビ名 = <font color='#%カラーパレット_HTML("真っ赤")%'>ダイマックス</font>
ELSE
	アビ名 = 
ENDIF

SELECTCASE 処理モード
	CASE "アビ名"
		SIF LEVEL > 0 && 連携中 != 1
			TSTR:コマンド名受渡 '= アビ名
	CASE "アビ説明文"
		詳細文文字列受け渡し変数 '= @"■%アビ名%"
		詳細文文字列受け渡し変数 += "<br>　ポケモンの体内から放たれた特殊なパワーが周囲の空間を歪ませ、"
		詳細文文字列受け渡し変数 += "<br>　実際の大きさよりもポケモンを巨大に見せる現象を起こす。"
		詳細文文字列受け渡し変数 += "<br>　◆このアビリティは行動回数を消費しない。"
		RETURN 消費ＭＰ
	CASE "アビ効果"
		アビテンプレート用_行動消費無しフラグ = 1
		アビテンプレート用_アビ名表示済フラグ = 1
		CALL 画面再描画
		IF 召喚中ポケモン_サイトウ == 4
			KSTR:(K++) = 「もう！ぜんぶ壊しましょう！ 尊敬をこめて！ キョダイマックス！」
		ELSE
			KSTR:(K++) = 「今こそ攻め入る時！ 戦況を変える一撃を！」
		ENDIF
		CALL メッセージ欄表示用関数(@"探索用_{隊列番号}_顔", CALLNAME:対象キャラ)
		CALL 口上変数初期化
		CALL カットイン呼出("奥義")
		WAIT
		CALL カットイン継承(1)
		CALL カットイン継承終了(1)
		BATTLE_STATE:隊列番号:奥義ゲージ -= 100
		戦闘中カウント:隊列番号:奥義回数 += 1
		RESULT = 0
		FOR LOCAL, 0, ターン中奥義回数保存
			IF チェンバ基準キャラ保存:LOCAL == 戦闘行動キャラ
				RESULT = 1
				BREAK
			ENDIF
		NEXT
		IF RESULT == 0
			チェンバ基準キャラ保存:ターン中奥義回数保存 = 戦闘行動キャラ
			ターン中奥義回数保存 += 1
		ENDIF
		バフ枠保存 = %ポケモン名取得_サイトウ(召喚中ポケモン_サイトウ)%_サイトウ
		バリア行数 = バフ番号取得_枠(バフ枠保存, 隊列番号)
		バリア耐久 = DT_CELL_GET("戦闘効果データベース", バリア行数, "効果量_固定値")
		ダイマックス_サイトウ = 3
		IF 召喚中ポケモン_サイトウ == 4
			DT_CELL_SET "戦闘効果データベース", バリア行数, "効果量_固定値", バリア耐久 * 2
			ポケモン最大ＨＰ_サイトウ:召喚中ポケモン_サイトウ = ポケモン最大ＨＰ_サイトウ:召喚中ポケモン_サイトウ * 2
		ELSE
			DT_CELL_SET "戦闘効果データベース", バリア行数, "効果量_固定値", バリア耐久 * 15 / 10
			ポケモン最大ＨＰ_サイトウ:召喚中ポケモン_サイトウ = ポケモン最大ＨＰ_サイトウ:召喚中ポケモン_サイトウ * 15 / 10
		ENDIF
		KSTR:(K++) = %ポケモン名取得_サイトウ(召喚中ポケモン_サイトウ)%は巨大化した！
		CALL メッセージ欄表示用関数()
		CALL 口上変数初期化
		SPLIT DT_CELL_GETS("所持耳飾りデータベース", 装備ステータス補正保存:対象キャラ:装備耳飾り番号, "奥義補正", 1), "_", LOCALS
		FOR LOCAL, 0, 10
			SIF LOCALS:LOCAL == ""
				BREAK
			SIF LOCALS:LOCAL == "奥義威力"
				CONTINUE
			CALL アビ汎用変数文字列リセット
			TRYCALLFORM 奥義補正処理関数_%LOCALS:LOCAL%_%DT_CELL_GETS("所持耳飾りデータベース", 装備ステータス補正保存:対象キャラ:装備耳飾り番号, "耳飾り名", 1)%
		NEXT
ENDSELECT
