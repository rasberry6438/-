;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/#
;パッチ名：ポケモントレーナー用共通関数
;作者：moke
;作成日：2025/5/14
;
;作成内容の概要：ポケモントレーナーシステムで利用可能な共通関数
;
;_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/#
;ライセンスについて
;	・基本項目(許可する項目を"○"に、許可しない項目を"×"に変更してください。)
;	+----+----+-------------------------------------------+
;	|番号|許可|ライセンス内容                             |
;	+----+----+-------------------------------------------+
;	|   1| ○ | 処理上のバグ修正                          |
;	+----+----+-------------------------------------------+
;	|   2| ○ | 新規機能追加による内容改変                |
;	+----+----+-------------------------------------------+
;	|   3| ○ | バランス調整による内容改変                |
;	+----+----+-------------------------------------------+
;	|   4| ○ | 口上の誤字・脱字の修正                    |
;	+----+----+-------------------------------------------+
;	|   5| ○ | 口上の新規追加・加筆                      |
;	+----+----+-------------------------------------------+
;	|   6| ○ | 既存口上の改変                            |
;	+----+----+-------------------------------------------+
;	|   7| ○ | 改変した口上の自由な再配布                |
;	+----+----+-------------------------------------------+
;	|   8| ○ | 口上内容の転載（erablue_resort内部に限る）|
;	+----+----+-------------------------------------------+
;	|   9| ○ | erablue_resort本体への収録                |
;	+----+----+-------------------------------------------+
;※１～８番の項目のいずれかを許可していない場合、９番の項目は自動的に許可していないと扱います

;ポケモントレーナー用共通関数です。同じシステム積むのなら使える…かも
;同システム積むのなら「フィールド：グラスフィールド」と「フィールド：あられ」に追記は必須と思われ
;戦闘中カウント:隊列番号:0は急所ランクに使用しています


;急所判定関数
;急所に当たりやすい技（ex.リーフブレード）は第二引数に1を立てて使用してください

@急所判定関数_ポケモン(隊列番号, 当たりやすい = 0)
#FUNCTION
#DIM 隊列番号
#DIM 当たりやすい
#DIM 判定用

判定用 = 戦闘中カウント:隊列番号:0 + 当たりやすい

IF 判定用 < 1
	SIF RAND:24 == 0
		RETURNF 1
ELSEIF 判定用 == 1
	SIF RAND:8 == 0
		RETURNF 1
ELSEIF 判定用 == 2
	SIF RAND:2 == 0
		RETURNF 1
ELSE
	RETURNF 1
ENDIF
RETURNF 0


;奥義ゲージ上昇用(メッセージ表示なし)
;自分の行動で奥義ゲージ上昇する機会がないため、ポケモン指示時に上がるようにしました

@ゲージ上昇_ポケモン(隊列番号)
#DIM 隊列番号
#DIM ゲージ上昇量

ゲージ上昇量 = 10
CALL バフ・デバフ測定(隊列番号, "ゲージ上昇効率")
ゲージ上昇量 = ゲージ上昇量 * RESULT / 100
BATTLE_STATE:隊列番号:奥義ゲージ = MIN(BATTLE_STATE:隊列番号:奥義ゲージ + ゲージ上昇量, BATTLE_STATE:隊列番号:ゲージ最大値)


;状態異常：やけど
;付随デバフで火傷と攻撃力デバフを組み合わせて使用してください

@バフ・デバフ特殊表示_やけど(隊列番号, バフ・デバフ行数)
#DIM 隊列番号
#DIM バフ・デバフ行数
VARSET LOCALS

PRINTFORML やけどデバフ：%DT_CELL_GETS("戦闘効果データベース", バフ・デバフ行数, "効果名")%
PRINTFORML 行動終了時、最大ＨＰに応じた割合のダメージを受けます。また攻撃力が50％低下します。
PRINTFORM 効果枠：%DT_CELL_GETS("戦闘効果データベース", バフ・デバフ行数, "効果枠"), 20, LEFT%
PRINTFORML 効果割合：{DT_CELL_GET("戦闘効果データベース", バフ・デバフ行数, "効果量_割合"), 4}％
PRINTFORML 持続ターン：{DT_CELL_GET("戦闘効果データベース", バフ・デバフ行数, "持続ターン")}


;状態異常：こおり

@バフ・デバフ特殊表示_こおり(隊列番号, バフ・デバフ行数)
#DIM 隊列番号
#DIM バフ・デバフ行数
VARSET LOCALS

PRINTFORML こおりデバフ：%DT_CELL_GETS("戦闘効果データベース", バフ・デバフ行数, "効果名")%
PRINTFORML 一定確率で行動することができなくなります。
PRINTFORM 効果枠：%DT_CELL_GETS("戦闘効果データベース", バフ・デバフ行数, "効果枠"), 20, LEFT%
PRINTFORML 効果割合：{DT_CELL_GET("戦闘効果データベース", バフ・デバフ行数, "効果量_割合"), 4}％
PRINTFORML 持続ターン：{DT_CELL_GET("戦闘効果データベース", バフ・デバフ行数, "持続ターン")}

@固有行動開始時処理_デバフ_こおり(効果番号)
#DIM 効果番号
#DIM 効果量

;行動不能確率判定
効果量 = DT_CELL_GET("戦闘効果データベース", 効果番号, "効果量_割合")
IF RAND:100 < 効果量
	;行動不能
	行動不能フラグ = 1
	WSTR:(K++) = %戦闘キャラ名前取得(戦闘行動キャラ)%は凍っているため行動出来ない！
	CALL メッセージ欄表示用関数(,,,0)
	CALL 口上変数初期化
	CALL アビテンプレ変数リセット
ENDIF


;フィールド：あめ

@フィールド説明文_あめ
#DIM 配列番号

配列番号 = バフ・デバフ効果検索("フィールド", "枠", "あめ")

LOCALS = あめ<br>
LOCALS += "天気があめ状態。みずタイプの威力が上がり、ほのおタイプの威力が下がります。<br>"
LOCALS += @"効果ターン：{DT_CELL_GET("戦闘効果データベース", 配列番号, "持続ターン")}ターン<br>"

詳細文文字列受け渡し変数 = %LOCALS%

@固有ターン開始時処理_フィールド_あめ

KSTR:(K++) = 雨が降り続いている！
CALL メッセージ欄表示用関数()
CALL 口上変数初期化

@固有バフ・デバフ処理_フィールド_あめ_火強化(隊列番号, 補正前数値)
#DIM 隊列番号
#DIM 補正前数値
;火ダメ0.5倍
RETURN 補正前数値 - 50

@固有バフ・デバフ処理_フィールド_あめ_水強化(隊列番号, 補正前数値)
#DIM 隊列番号
#DIM 補正前数値
;水ダメ1.5倍
RETURN 補正前数値 + 50

;フィールド：グラスフィールド

@フィールド説明文_グラスフィールド
#DIM 配列番号

配列番号 = バフ・デバフ効果検索("フィールド", "枠", "グラスフィールド")

LOCALS = グラスフィールド<br>
LOCALS += "地面にいるポケモンはターン終了時に最大HPの1/16だけ回復します。<br>"
LOCALS += @"効果ターン：{DT_CELL_GET("戦闘効果データベース", 配列番号, "持続ターン")}ターン<br>"

詳細文文字列受け渡し変数 = %LOCALS%

@固有ターン終了時処理_フィールド_グラスフィールド
#DIM バリア行数
#DIMS バフ枠保存
#DIM バリア耐久
#DIM 回復量
#DIM 対象者有フラグ

対象者有フラグ = 0

FOR LOCAL, 0, 4
	SIF BATTLE_STATE:LOCAL:キャラ登録番号 < 1
		CONTINUE
	SIF BATTLE_STATE:LOCAL:ＨＰ < 1
		CONTINUE
	IF BATTLE_STATE:LOCAL:キャラ登録番号 == GETCHARA(1886)
		IF 召喚中ポケモン_サイトウ != -1
			バフ枠保存 = %ポケモン名取得_サイトウ(召喚中ポケモン_サイトウ)%_サイトウ
			バリア行数 = バフ番号取得_枠(バフ枠保存, LOCAL)
			バリア耐久 = DT_CELL_GET("戦闘効果データベース", バリア行数, "効果量_固定値")
			回復量 = ポケモン最大ＨＰ_サイトウ:召喚中ポケモン_サイトウ / 16
			回復量 = MAX(MIN(回復量, ポケモン最大ＨＰ_サイトウ:召喚中ポケモン_サイトウ - バリア耐久), 0)
			DT_CELL_SET "戦闘効果データベース", バリア行数, "効果量_固定値", バリア耐久 + 回復量
			WSTR:(K++) = %ポケモン名取得_サイトウ(召喚中ポケモン_サイトウ)%のＨＰが{回復量}回復！
			対象者有フラグ = 1
		ENDIF
	ELSEIF CSTR:(BATTLE_STATE:LOCAL:キャラ登録番号):特殊種族 == "ポケモン"
		回復量 = BATTLE_STATE:LOCAL:最大ＨＰ
		回復量 = MAX(MIN(回復量, BATTLE_STATE:LOCAL:最大ＨＰ - BATTLE_STATE:LOCAL:ＨＰ), 0)
		BATTLE_STATE:LOCAL:ＨＰ += 回復量
		WSTR:(K++) = %CALLNAME:(BATTLE_STATE:LOCAL:キャラ登録番号)%のＨＰが{回復量}回復！
		対象者有フラグ = 1
	ENDIF
NEXT

IF 対象者有フラグ == 1
	CALL メッセージ欄表示用関数()
	CALL 口上変数初期化
ENDIF

;フィールド：にほんばれ

@フィールド説明文_にほんばれ
#DIM 配列番号

配列番号 = バフ・デバフ効果検索("フィールド", "枠", "にほんばれ")

LOCALS = にほんばれ<br>
LOCALS += "天気がはれ状態。ほのおタイプの威力が上がり、みずタイプの威力が下がります。<br>"
LOCALS += @"効果ターン：{DT_CELL_GET("戦闘効果データベース", 配列番号, "持続ターン")}ターン<br>"

詳細文文字列受け渡し変数 = %LOCALS%

@固有ターン開始時処理_フィールド_にほんばれ

KSTR:(K++) = 日差しが強い！
CALL メッセージ欄表示用関数()
CALL 口上変数初期化

@固有バフ・デバフ処理_フィールド_にほんばれ_火強化(隊列番号, 補正前数値)
#DIM 隊列番号
#DIM 補正前数値
;火ダメ1.5倍
RETURN 補正前数値 + 50

@固有バフ・デバフ処理_フィールド_にほんばれ_水強化(隊列番号, 補正前数値)
#DIM 隊列番号
#DIM 補正前数値
;水ダメ0.5倍
RETURN 補正前数値 - 50


;フィールド：あられ

@フィールド説明文_あられ
#DIM 配列番号

配列番号 = バフ・デバフ効果検索("フィールド", "枠", "あられ")

LOCALS = あられ<br>
LOCALS += "天気があられ状態。水属性以外は毎ターンダメージを受けます。<br>"
LOCALS += @"効果ターン：{DT_CELL_GET("戦闘効果データベース", 配列番号, "持続ターン")}ターン<br>"

詳細文文字列受け渡し変数 = %LOCALS%

@固有ターン終了時処理_フィールド_あられ
#DIM バリア行数
#DIMS バフ枠保存
#DIM バリア耐久
#DIM ダメージ値

WSTR:(K++) = あられがふりつづけている！
FOR LOCAL, 0, 4
	SIF BATTLE_STATE:LOCAL:キャラ登録番号 < 1
		CONTINUE
	SIF BATTLE_STATE:LOCAL:ＨＰ < 1
		CONTINUE
	SIF BATTLE_STATE:LOCAL:属性 == 1
		CONTINUE
	IF BATTLE_STATE:LOCAL:キャラ登録番号 == GETCHARA(1886) && 召喚中ポケモン_サイトウ != -1
		バフ枠保存 = %ポケモン名取得_サイトウ(召喚中ポケモン_サイトウ)%_サイトウ
		バリア行数 = バフ番号取得_枠(バフ枠保存, LOCAL)
		バリア耐久 = DT_CELL_GET("戦闘効果データベース", バリア行数, "効果量_固定値")
		ダメージ値 = ポケモン最大ＨＰ_サイトウ:召喚中ポケモン_サイトウ / 16
		CALL アビ汎用変数文字列リセット
		CALL アビ対象選択テンプレート_指定(LOCAL)
		アビ汎用変数:効果量 = ダメージ値
		アビ汎用変数:効果割合 = 0
		アビ汎用変数:命中率補正値 = 999
		アビ汎用変数:クリティカル率補正値 = -999
		CALL アビテンプレート_ダメージ処理_水属性
		WSTR:(K++) = %アビテンプレート用_表示メッセージ格納:0:0%
		VARSET アビテンプレート用_表示メッセージ格納:0:0
		IF バフ番号取得_枠(バフ枠保存, LOCAL) < 0
			SIF ダイマックス_サイトウ != 0
				CALL ダイマックス終了処理_サイトウ(LOCAL, 1)
			CALL バフランク初期化_サイトウ(LOCAL, 1, 1)
			WSTR:(K++) = %ポケモン名取得_サイトウ(召喚中ポケモン_サイトウ)%はサイトウの元へ戻っていく！
			CALLFORM %ポケモン名取得_サイトウ(召喚中ポケモン_サイトウ)%送還_サイトウ(LOCAL)
		ENDIF
	ELSE
		ダメージ値 = BATTLE_STATE:LOCAL:最大ＨＰ / 16
		CALL アビ汎用変数文字列リセット
		CALL アビ対象選択テンプレート_指定(LOCAL)
		アビ汎用変数:効果量 = ダメージ値
		アビ汎用変数:効果割合 = 0
		アビ汎用変数:命中率補正値 = 999
		アビ汎用変数:クリティカル率補正値 = -999
		CALL アビテンプレート_ダメージ処理_水属性
	ENDIF
NEXT

FOR LOCAL, 10, 20
	SIF 敵BATTLE_STATE_STR:(LOCAL - 10):エネミー名 == ""
		CONTINUE
	SIF 敵BATTLE_STATE:(LOCAL - 10):ＨＰ < 1
		CONTINUE
	SIF 敵BATTLE_STATE:(LOCAL - 10):属性 == 1
		CONTINUE
	ダメージ値 = 敵BATTLE_STATE:(LOCAL - 10):最大ＨＰ / 16
	CALL アビ対象選択テンプレート_指定(LOCAL)
	アビ汎用変数:効果量 = ダメージ値
	アビ汎用変数:効果割合 = 0
	アビ汎用変数:命中率補正値 = 999
	CALL アビテンプレート_ダメージ処理_水属性
NEXT
CALL アビテンプレート用_表示メッセージ変換処理
CALL メッセージ欄表示用関数()
CALL 口上変数初期化


