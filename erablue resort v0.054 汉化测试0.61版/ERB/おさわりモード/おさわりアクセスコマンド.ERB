@おさわりアクセスコマンド(アクセスコマンド更新タイプ, アクセスコマンド展開フラグ, アクティブコマンドリスト, アクセスコマンドIDリスト, コマンドIDカラーコード変換, アクセスコマンド位置基準, アクセスコマンドサイズ, アクセスコマンド間隔, アクセスコマンド最大表示数, 表示レイヤー層)
#DIMS REF アクセスコマンド更新タイプ
#DIM REF アクセスコマンド展開フラグ
#DIM REF コマンドIDカラーコード変換,0
#DIM レイヤー番号 = 50
#DIM カラーマトリクス, 5, 5
#DIM REF アクセスコマンドIDリスト,0
#DIM REF アクセスコマンドチェック状態,0
#DIM アクセスコマンド表示数
#DIM REF アクティブコマンドリスト

#DIM REF アクセスコマンド位置基準,0
#DIM REF アクセスコマンドサイズ,0
#DIM REF アクセスコマンド間隔

#DIM アクセスコマンド最大表示数
#DIM アクセスコマンド有効数
#DIM 表示レイヤー層
#DIM コマンド枠幅 = 4

#DIM 表面存在フラグ
#DIM コマンドリスト長
#DIM アクセスコマンド裏面座標補正 = 20, 20

;展開フラグ=0 で初期状態 =2 で裏面 1,3で移行状態

SELECTCASE アクセスコマンド更新タイプ
CASE "初期化"
CASE "更新"
	GOTO 更新
CASE "描画"
	GOTO 描画
CASEELSE
ENDSELECT


コマンドリスト長 = VARSIZE("コマンドIDカラーコード変換")

$更新

;アクセスコマンドから右すべて
GDISPOSE レイヤー番号 + 16 
GCREATE レイヤー番号 + 16 , CLIENTWIDTH(), CLIENTHEIGHT()
GSETBRUSH レイヤー番号 + 16 , 0x80101010
GFILLRECTANGLE レイヤー番号 + 16 , 0, 0, CLIENTWIDTH(), CLIENTHEIGHT()

;有効なコマンドをリスト化する
;スタンスごとにLR両方から取り込む
VARSET アクセスコマンドIDリスト, 100
VARSET アクセスコマンド有効数
FOR LOCAL, 0, コマンドリスト長
	表面存在フラグ = 0
	RESULTS '= おさわりコマンドリスト(アクティブコマンドリスト, LOCAL)    
	IF RESULTS != ""
		CALL おさわり可否判定(RESULTS)
		IF RESULT
			ARRAYSHIFT アクセスコマンドIDリスト, 1, LOCAL
			アクセスコマンド有効数 ++
			CONTINUE
		ENDIF
	ENDIF

	RESULTS '= おさわりコマンドリスト(アクティブコマンドリスト + 1, LOCAL)    
	SIF RESULTS == "" 
		CONTINUE
	CALL おさわり可否判定(RESULTS)
	SIF !RESULT
		CONTINUE

	TSTR:コマンド名受渡 '= ""
	ARRAYSHIFT アクセスコマンドIDリスト, 1, LOCAL
	アクセスコマンド有効数 ++
NEXT

;アクセスコマンド格納系に可能コマンドを格納する　この可能というのは変パラメータで可能なもので、更新がかかったときに再判定する


;コマンドをシャッフルして取り出す
FOR LOCAL, 0, アクセスコマンド有効数
	LOCAL:1 = RAND:(アクセスコマンド有効数 - LOCAL)
	SWAP アクセスコマンドIDリスト:(LOCAL:1), アクセスコマンドIDリスト:(アクセスコマンド有効数 - LOCAL - 1)
NEXT

アクセスコマンド表示数 = MIN(アクセスコマンド有効数, アクセスコマンド最大表示数)

GDISPOSE レイヤー番号 + 15 ,
GCREATE レイヤー番号 + 15 , アクセスコマンドサイズ:0 * 4, アクセスコマンドサイズ:1 * アクセスコマンド有効数
GSETFONT レイヤー番号 + 15 , GETFONT(), 18

FOR LOCAL:1, 0, 2
	FOR LOCAL, 0, アクセスコマンド表示数
		;マッサージモードはコマンドタイプで色分けをする
		IF SAVESTR:ゲームフェイズ管理 == "マッサージモード"
			LOCALS '= おさわりコマンドリスト(アクティブコマンドリスト, アクセスコマンドIDリスト:LOCAL)
			RESULT:1 = TOINT(LOCALS)
			TFLAG:コマンドタイプ受渡 = 0
			TRYCALLFORMF MASSAGE_COMTYPE_{RESULT:1}
			;コマンドタイプによって色分けする
			SELECTCASE TFLAG:コマンドタイプ受渡
			CASE 0
				LOCAL:2 = 0xFFC0C0C0
			CASE 1
				LOCAL:2 = 0xFFC08080
			CASE 2
				LOCAL:2 = 0xFFFF99EE
			CASEELSE
			ENDSELECT
		ELSE ;ノーマルでは白
			LOCAL:2 = 0xFFC0C0C0
		ENDIF
		RESULTS '= おさわりコマンドリスト(アクティブコマンドリスト + LOCAL:1, アクセスコマンドIDリスト:LOCAL)
		SIF RESULTS == ""
			CONTINUE
		CALL おさわり可否判定(RESULTS)
		SIF !RESULT
			CONTINUE

		GSETBRUSH レイヤー番号 + 15 , LOCAL:2
		GFILLRECTANGLE レイヤー番号 + 15 , アクセスコマンドサイズ:0 * (LOCAL:1 * 2), アクセスコマンドサイズ:1 * LOCAL, アクセスコマンドサイズ:0, アクセスコマンドサイズ:1
		GSETBRUSH レイヤー番号 + 15 , 0xFF101010
		GFILLRECTANGLE レイヤー番号 + 15 , アクセスコマンドサイズ:0 * (LOCAL:1 * 2) + コマンド枠幅, アクセスコマンドサイズ:1 * LOCAL + コマンド枠幅, アクセスコマンドサイズ:0 - コマンド枠幅 * 2, アクセスコマンドサイズ:1 - コマンド枠幅 * 2
		GSETBRUSH レイヤー番号 + 15 , LOCAL:2
		GSETPEN レイヤー番号 + 15 , LOCAL:2, 1
		GDRAWTEXT レイヤー番号 + 15 , "[num" + TOSTR(LOCAL) + "] " + TSTR:コマンド名受渡, アクセスコマンドサイズ:0 * (LOCAL:1 * 2) + 10, アクセスコマンドサイズ:1 * LOCAL + 10
	NEXT
NEXT
;選択時ボタン
カラーマトリクス:0:0 = 256,   0,   0,   0,   0
カラーマトリクス:1:0 =   0, 256,   0,   0,   0
カラーマトリクス:2:0 =   0,   0, 256,   0,   0
カラーマトリクス:3:0 =   0,   0,   0, 256,   0
カラーマトリクス:4:0 = 100, 100, 100,   0, 256
GDRAWG レイヤー番号 + 15 , レイヤー番号 + 15 , アクセスコマンドサイズ:0, 0, アクセスコマンドサイズ:0 * 3, アクセスコマンドサイズ:1 * アクセスコマンド有効数, 0, 0, アクセスコマンドサイズ:0 * 3, アクセスコマンドサイズ:1 * アクセスコマンド有効数, カラーマトリクス:0:0


$描画

;アニメパラメタ一括操作
LOCAL:10 = 4;総フレーム数
LOCAL:11 = 2;移動距離/フレーム
;
IF アクセスコマンド展開フラグ % 2
	GDISPOSE レイヤー番号 + 17 
	GCREATE レイヤー番号 + 17 , アクセスコマンドサイズ:0, (アクセスコマンドサイズ:1 + アクセスコマンド間隔) * アクセスコマンド最大表示数
	GDISPOSE レイヤー番号 + 18 
	GCREATE レイヤー番号 + 18 , アクセスコマンドサイズ:0, (アクセスコマンドサイズ:1 + アクセスコマンド間隔) * アクセスコマンド最大表示数
	FOR LOCAL, 0, アクセスコマンド表示数
		GDRAWG レイヤー番号 + 17 , レイヤー番号 + 15 , 0, (アクセスコマンドサイズ:1 + アクセスコマンド間隔) * LOCAL, アクセスコマンドサイズ:0, アクセスコマンドサイズ:1, 0, アクセスコマンドサイズ:1 * LOCAL, アクセスコマンドサイズ:0, アクセスコマンドサイズ:1
		GDRAWG レイヤー番号 + 18 , レイヤー番号 + 15 , 0, (アクセスコマンドサイズ:1 + アクセスコマンド間隔) * LOCAL, アクセスコマンドサイズ:0, アクセスコマンドサイズ:1, アクセスコマンドサイズ:0 * 2, アクセスコマンドサイズ:1 * LOCAL, アクセスコマンドサイズ:0, アクセスコマンドサイズ:1
	NEXT
	IF アクセスコマンド展開フラグ == 1
		アクセスコマンド展開フラグ = 2
		FOR LOCAL, 0, LOCAL:10
			CBGREMOVERANGE 表示レイヤー層, 表示レイヤー層
			CBGREMOVERANGE 表示レイヤー層 + 2, 表示レイヤー層 + 2
			CBGSETG レイヤー番号 + 17 , -LOCAL * LOCAL:11 + アクセスコマンド位置基準:0, -LOCAL * LOCAL:11 + アクセスコマンド位置基準:1 + (アクセスコマンドサイズ:1 + アクセスコマンド間隔) * アクセスコマンド最大表示数 - CLIENTHEIGHT(), 表示レイヤー層
			CBGSETG レイヤー番号 + 18 , LOCAL * LOCAL:11 + アクセスコマンド位置基準:0 + アクセスコマンド裏面座標補正:0, LOCAL * LOCAL:11 + アクセスコマンド位置基準:1 +(アクセスコマンドサイズ:1 + アクセスコマンド間隔) * アクセスコマンド最大表示数 - CLIENTHEIGHT() + アクセスコマンド裏面座標補正:1, 表示レイヤー層 + 2
			AWAIT 1
		NEXT
		FOR LOCAL, LOCAL:10, 0, -1
			CBGREMOVERANGE 表示レイヤー層, 表示レイヤー層
			CBGREMOVERANGE 表示レイヤー層 + 2, 表示レイヤー層 + 2
			CBGSETG レイヤー番号 + 17 , -LOCAL * LOCAL:11 + アクセスコマンド位置基準:0, -LOCAL * LOCAL:11 + アクセスコマンド位置基準:1 + (アクセスコマンドサイズ:1 + アクセスコマンド間隔) * アクセスコマンド最大表示数 - CLIENTHEIGHT(), 表示レイヤー層 + 2
			CBGSETG レイヤー番号 + 18 , LOCAL * LOCAL:11 + アクセスコマンド位置基準:0 + アクセスコマンド裏面座標補正:0, LOCAL * LOCAL:11 + アクセスコマンド位置基準:1 +(アクセスコマンドサイズ:1 + アクセスコマンド間隔) * アクセスコマンド最大表示数 - CLIENTHEIGHT() + アクセスコマンド裏面座標補正:1, 表示レイヤー層
			AWAIT 1
		NEXT
	ELSE
		アクセスコマンド展開フラグ = 0
		FOR LOCAL, 0, LOCAL:10
			CBGREMOVERANGE 表示レイヤー層, 表示レイヤー層
			CBGREMOVERANGE 表示レイヤー層 + 2, 表示レイヤー層 + 2
			CBGSETG レイヤー番号 + 17 , -LOCAL * LOCAL:11 + アクセスコマンド位置基準:0, -LOCAL * LOCAL:11 + アクセスコマンド位置基準:1 + (アクセスコマンドサイズ:1 + アクセスコマンド間隔) * アクセスコマンド最大表示数 - CLIENTHEIGHT(), 表示レイヤー層 + 2
			CBGSETG レイヤー番号 + 18 , LOCAL * LOCAL:11 + アクセスコマンド位置基準:0 + アクセスコマンド裏面座標補正:0, LOCAL * LOCAL:11 + アクセスコマンド位置基準:1 +(アクセスコマンドサイズ:1 + アクセスコマンド間隔) * アクセスコマンド最大表示数 - CLIENTHEIGHT() + アクセスコマンド裏面座標補正:1, 表示レイヤー層
			AWAIT 1
		NEXT
		FOR LOCAL, LOCAL:10, 0, -1
			CBGREMOVERANGE 表示レイヤー層, 表示レイヤー層
			CBGREMOVERANGE 表示レイヤー層 + 2, 表示レイヤー層 + 2
			CBGSETG レイヤー番号 + 17 , -LOCAL * LOCAL:11 + アクセスコマンド位置基準:0, -LOCAL * LOCAL:11 + アクセスコマンド位置基準:1 + (アクセスコマンドサイズ:1 + アクセスコマンド間隔) * アクセスコマンド最大表示数 - CLIENTHEIGHT(), 表示レイヤー層
			CBGSETG レイヤー番号 + 18 , LOCAL * LOCAL:11 + アクセスコマンド位置基準:0 + アクセスコマンド裏面座標補正:0, LOCAL * LOCAL:11 +アクセスコマンド位置基準:1 + (アクセスコマンドサイズ:1 + アクセスコマンド間隔) * アクセスコマンド最大表示数 - CLIENTHEIGHT() + アクセスコマンド裏面座標補正:1, 表示レイヤー層 + 2
			AWAIT 1
		NEXT
	ENDIF
ENDIF

CBGREMOVERANGE 表示レイヤー層, 表示レイヤー層 + 2
CBGSETG レイヤー番号 + 16 , アクセスコマンド位置基準:0 - LOCAL:10 * LOCAL:11, 0, 表示レイヤー層 + 1

GDISPOSE レイヤー番号 + 24 
GCREATE レイヤー番号 + 24 , CLIENTWIDTH(), CLIENTHEIGHT()
IF !アクセスコマンド展開フラグ
	FOR LOCAL, 0, アクセスコマンド表示数
		GSETBRUSH レイヤー番号 + 24 , コマンドIDカラーコード変換:(アクセスコマンドIDリスト:LOCAL) + 0xFF000000
		GFILLRECTANGLE レイヤー番号 + 24 , アクセスコマンド位置基準:0, アクセスコマンド位置基準:1 + LOCAL * (アクセスコマンドサイズ:1 + アクセスコマンド間隔), アクセスコマンドサイズ:0, アクセスコマンドサイズ:1
		SPRITEDISPOSE "アクセスコマンド" + TOSTR(LOCAL) + "A" 
		SPRITEDISPOSE "アクセスコマンド" + TOSTR(LOCAL) + "B" 
		SPRITECREATE "アクセスコマンド" + TOSTR(LOCAL) + "A", レイヤー番号 + 15 , アクセスコマンドサイズ:0 * 0, アクセスコマンドサイズ:1 * LOCAL, アクセスコマンドサイズ:0, アクセスコマンドサイズ:1
		SPRITECREATE "アクセスコマンド" + TOSTR(LOCAL) + "B", レイヤー番号 + 15 , アクセスコマンドサイズ:0 * 1, アクセスコマンドサイズ:1 * LOCAL, アクセスコマンドサイズ:0, アクセスコマンドサイズ:1
		CBGSETBUTTONSPRITE コマンドIDカラーコード変換:(アクセスコマンドIDリスト:LOCAL), "アクセスコマンド" + TOSTR(LOCAL) + "A", "アクセスコマンド" + TOSTR(LOCAL) + "B", アクセスコマンド位置基準:0, アクセスコマンド位置基準:1 + (アクセスコマンドサイズ:1 + アクセスコマンド間隔) * LOCAL + アクセスコマンドサイズ:1 - CLIENTHEIGHT(), 表示レイヤー層
		SPRITEDISPOSE "アクセスコマンド" + TOSTR(LOCAL) + "C"
		SPRITECREATE "アクセスコマンド" + TOSTR(LOCAL) + "C", レイヤー番号 + 15 , アクセスコマンドサイズ:0 * 2, アクセスコマンドサイズ:1 * LOCAL, アクセスコマンドサイズ:0, アクセスコマンドサイズ:1
		SIF !RESULT
			CONTINUE
		CBGSETSPRITE "アクセスコマンド" + TOSTR(LOCAL) + "C", アクセスコマンド位置基準:0 + アクセスコマンド裏面座標補正:0, アクセスコマンド位置基準:1 + (アクセスコマンドサイズ:1 + アクセスコマンド間隔) * LOCAL + アクセスコマンドサイズ:1 - CLIENTHEIGHT() + アクセスコマンド裏面座標補正:1, 表示レイヤー層 + 2
	NEXT
ELSE
	FOR LOCAL, 0, アクセスコマンド表示数
		GSETBRUSH レイヤー番号 + 24 , コマンドIDカラーコード変換:(アクセスコマンドIDリスト:LOCAL) + 0xFF000000
		GFILLRECTANGLE レイヤー番号 + 24 , アクセスコマンド位置基準:0 + アクセスコマンド裏面座標補正:0, アクセスコマンド位置基準:1 + LOCAL * (アクセスコマンドサイズ:1 + アクセスコマンド間隔) + アクセスコマンド裏面座標補正:1, アクセスコマンドサイズ:0, アクセスコマンドサイズ:1
		SPRITEDISPOSE "アクセスコマンド" + TOSTR(LOCAL) + "A" 
		SPRITEDISPOSE "アクセスコマンド" + TOSTR(LOCAL) + "B" 
		SPRITECREATE "アクセスコマンド" + TOSTR(LOCAL) + "A", レイヤー番号 + 15 , アクセスコマンドサイズ:0 * 2, アクセスコマンドサイズ:1 * LOCAL, アクセスコマンドサイズ:0, アクセスコマンドサイズ:1
		SPRITECREATE "アクセスコマンド" + TOSTR(LOCAL) + "B", レイヤー番号 + 15 , アクセスコマンドサイズ:0 * 3, アクセスコマンドサイズ:1 * LOCAL, アクセスコマンドサイズ:0, アクセスコマンドサイズ:1
		CBGSETBUTTONSPRITE コマンドIDカラーコード変換:(アクセスコマンドIDリスト:LOCAL), "アクセスコマンド" + TOSTR(LOCAL) + "A", "アクセスコマンド" + TOSTR(LOCAL) + "B", アクセスコマンド位置基準:0 + アクセスコマンド裏面座標補正:0, アクセスコマンド位置基準:1 + (アクセスコマンドサイズ:1 + アクセスコマンド間隔) * LOCAL + アクセスコマンドサイズ:1 - CLIENTHEIGHT() + アクセスコマンド裏面座標補正:1, 表示レイヤー層
		SPRITEDISPOSE "アクセスコマンド" + TOSTR(LOCAL) + "C"
		SPRITECREATE "アクセスコマンド" + TOSTR(LOCAL) + "C", レイヤー番号 + 15 , アクセスコマンドサイズ:0 * 0, アクセスコマンドサイズ:1 * LOCAL, アクセスコマンドサイズ:0, アクセスコマンドサイズ:1
		SIF !RESULT
			CONTINUE
		CBGSETSPRITE "アクセスコマンド" + TOSTR(LOCAL) + "C", アクセスコマンド位置基準:0, アクセスコマンド位置基準:1 + (アクセスコマンドサイズ:1 + アクセスコマンド間隔) * LOCAL + アクセスコマンドサイズ:1 - CLIENTHEIGHT(), 表示レイヤー層 + 2
	NEXT
ENDIF

アクセスコマンド更新タイプ '= "描画"

RETURN
