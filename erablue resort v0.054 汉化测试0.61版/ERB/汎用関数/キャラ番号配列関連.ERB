;-------------------------------------------------
; 与えられた配列に全キャラをシャッフルして入れた状態に初期化する
;-------------------------------------------------
@キャラ番号配列_初期化_シャッフル(格納配列, あなた含む = 0)
#DIM REF 格納配列, 0
#DIM あなた含む
#DIM 要素数
#DIM 配列番号
#DIM シャッフルカウンタ

VARSET 格納配列, -1
IF あなた含む
	要素数 = CHARANUM
	FOR 配列番号, 0, 要素数
		格納配列:配列番号 = 配列番号
	NEXT
ELSE
	要素数 = CHARANUM - 1
	FOR 配列番号, 0, 要素数
		格納配列:配列番号 = 配列番号 + 1
	NEXT
ENDIF

FOR シャッフルカウンタ, 0, 要素数 - 1
	配列番号 = RAND(シャッフルカウンタ, 要素数)
	SWAP 格納配列:配列番号, 格納配列:シャッフルカウンタ
NEXT

RETURN 要素数


;-------------------------------------------------
; 与えられた配列にキャラをソート関数の値が昇順で並んだ状態に初期化する
; ソート基準が0を返したキャラは含まれないため注意 フィルタに活用もできる
; シャッフルあり=1とした場合、同じソート基準の値のキャラはシャッフルされる
;-------------------------------------------------
@キャラ番号配列_初期化_フィルタソート(格納配列, ソート関数, オプション変数, オプション文字列, シャッフルあり = 0)
#DIM REF 格納配列, 0
#DIMS ソート関数
#DIM REF オプション変数, 0
#DIMS REF オプション文字列, 0
#DIM シャッフルあり
#DIM DYNAMIC キャラ番号一時格納, キャラクタ数上限
#DIM DYNAMIC ソート基準一時格納, キャラクタ数上限
#DIM 要素数
#DIM キャラ番号
#DIM 配列番号
#DIM シャッフルカウンタ

VARSET キャラ番号一時格納, -1
VARSET ソート基準一時格納, 0
要素数 = 0
FOR キャラ番号, 0, CHARANUM
	CALLFORM %ソート関数%(キャラ番号, オプション変数, オプション文字列)
	IF RESULT != 0
		キャラ番号一時格納:要素数 = キャラ番号
		ソート基準一時格納:要素数 = RESULT
		要素数++
	ENDIF
NEXT

ARRAYMSORT ソート基準一時格納, キャラ番号一時格納
IF シャッフルあり
	FOR シャッフルカウンタ, 0, 要素数 - 1
		配列番号 = RAND(シャッフルカウンタ, FINDLASTELEMENT(ソート基準一時格納, ソート基準一時格納:シャッフルカウンタ) + 1)
		SWAP キャラ番号一時格納:配列番号, キャラ番号一時格納:シャッフルカウンタ
	NEXT
ENDIF
ARRAYCOPY "キャラ番号一時格納", "格納配列"

RETURN 要素数

;@ソート関数例(キャラ番号, オプション変数, オプション文字列)
;#DIM キャラ番号
;#DIM REF オプション変数, 0
;#DIMS REF オプション文字列, 0
;SIF !GETBIT(TALENT:キャラ番号:性別, 0)
;	RETURN 0
;RETURN (BASE:キャラ番号:バスト * -1)
