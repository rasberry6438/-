@画像表示アニメ(アニメパターン, ファイルパス = "", 画像位置タイプ = "", 画像サイズ変更 = "", 座標補正X = 0, 座標補正Y = 0)
#DIM CONST レイヤー番号 = 50 ;+11に読み込み　+10にリサイズしたものを格納して使用する
#DIMS アニメパターン
#DIMS ファイルパス
#DIMS 画像位置タイプ
#DIMS 画像サイズ変更
#DIM 画像サイズ,2
#DIM 座標補正X
#DIM 座標補正Y
#DIM 画像位置,2

IF ファイルパス == ""
	SIF !GCREATED(レイヤー番号 + 11 )
		RETURN
	GOTO 削除処理
ENDIF

GDISPOSE レイヤー番号 + 11 
SIF !GCREATE_拡張子F(レイヤー番号 + 11 , ファイルパス)
	RETURN

;リサイズ
IF 画像サイズ変更 != ""
	SPLIT 画像サイズ変更, "/", LOCALS
	画像サイズ:0 = TOINT(LOCALS:0)
	画像サイズ:1 = TOINT(LOCALS:1)
ELSE
	画像サイズ = 1, 1
ENDIF
GDISPOSE レイヤー番号 + 10 
GCREATE レイヤー番号 + 10 , GWIDTH(レイヤー番号 + 11 ) * 画像サイズ:0 / 画像サイズ:1, GHEIGHT(レイヤー番号 + 11 ) * 画像サイズ:0 / 画像サイズ:1
GDRAWG  レイヤー番号 + 10 ,レイヤー番号 + 11 , 0, 0, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 ), 0, 0, GWIDTH(レイヤー番号 + 11 ), GHEIGHT(レイヤー番号 + 11 )

SELECTCASE 画像位置タイプ
	CASE "クライアント左上"
		画像位置 = 0, 900 - CLIENTHEIGHT()
	CASE "クライアント左中"
		画像位置 = 0, 900 - (CLIENTHEIGHT() + GHEIGHT(レイヤー番号 + 10 )) / 2
	CASE "クライアント左下"
		画像位置 = 0, 900 - GHEIGHT(レイヤー番号 + 10 )
	CASE "クライアント中上"
		画像位置 = (CLIENTWIDTH() - GWIDTH(レイヤー番号 + 10 )) / 2, 900 - CLIENTHEIGHT()
	CASE "クライアント中中"
		画像位置 = (CLIENTWIDTH() - GWIDTH(レイヤー番号 + 10 )) / 2, 900 - (CLIENTHEIGHT() + GHEIGHT(レイヤー番号 + 10 )) / 2
	CASE "クライアント中下"
		画像位置 = (CLIENTWIDTH() - GWIDTH(レイヤー番号 + 10 )) / 2, 900 - GHEIGHT(レイヤー番号 + 10 )
	CASE "クライアント右上"
		画像位置 = CLIENTWIDTH() - GWIDTH(レイヤー番号 + 10 ), 900 - CLIENTHEIGHT()
	CASE "クライアント右中"
		画像位置 = CLIENTWIDTH() - GWIDTH(レイヤー番号 + 10 ), 900 - (CLIENTHEIGHT() + GHEIGHT(レイヤー番号 + 10 )) / 2
	CASE "クライアント右下"
		画像位置 = CLIENTWIDTH() - GWIDTH(レイヤー番号 + 10 ), 900 - GHEIGHT(レイヤー番号 + 10 )
	CASE "ダンジョン背景"
		画像位置 = 22, 248
	CASE "バトル背景"
		画像位置 = 22, 228
	CASE "ダンジョンキャラ0" ;キャラ画像はサイズ100/180
		画像位置 = 552, 226
	CASE "ダンジョンキャラ1"
		画像位置 = 552, 352
	CASE "ダンジョンキャラ2"
		画像位置 = 552, 479
	CASE "ダンジョンキャラ3"
		画像位置 = 552, 606
	CASE "バトルキャラ0"
		画像位置 = 552, 239
	CASE "バトルキャラ1"
		画像位置 = 552, 367
	CASE "バトルキャラ2"
		画像位置 = 552, 495
	CASE "バトルキャラ3"
		画像位置 = 552, 622
	CASE "バトル行動キャラ0"
		画像位置 = 520, 239
	CASE "バトル行動キャラ1"
		画像位置 = 520, 367
	CASE "バトル行動キャラ2"
		画像位置 = 520, 495
	CASE "バトル行動キャラ3"
		画像位置 = 520, 622
	CASE "バトルキャラ10"
		画像位置 = 43, 252
	CASE "バトルキャラ11"
		画像位置 = 278, 252
	CASE "バトルキャラ12"
		画像位置 = 43, 343
	CASE "バトルキャラ13"
		画像位置 = 278, 343
	CASE "バトルキャラ14"
		画像位置 = 43, 436
	CASE "バトルキャラ15"
		画像位置 = 278, 436
	CASE "バトルキャラ16"
		画像位置 = 43, 528
	CASE "バトルキャラ17"
		画像位置 = 278, 528
	CASE "バトルキャラ18"
		画像位置 = 43, 620
	CASE "バトルキャラ19"
		画像位置 = 278, 620
	CASEELSE
		画像位置 = 20, 220
ENDSELECT
画像位置:0 += 座標補正X
画像位置:1 += 座標補正Y

SIF STRCOUNT(画像位置タイプ, "バトル") > 0
	CALL 画面再描画

;パラメタ調整用
LOCAL:5 = 40 ;最大移動幅
LOCAL:6 = 40 ;最大透明度
LOCAL:7 = 40 ;最大拡大PX
LOCAL:11 = 5 ;総フレーム数
LOCAL:15 = LOCAL:5 / LOCAL:11 ;移動幅毎フレーム
LOCAL:17 = LOCAL:7 / LOCAL:11 * 2 ;拡大PX毎フレーム

SELECTCASE アニメパターン
	CASE "フラッシュ"
		GOTO フラッシュ
ENDSELECT

LOCAL:1 = 0
LOCAL:2 = 0
LOCAL:3 = 0

LOCAL:1 -= STRCOUNT(アニメパターン, "左")
LOCAL:1 += STRCOUNT(アニメパターン, "右")
LOCAL:2 -= STRCOUNT(アニメパターン, "上")
LOCAL:2 += STRCOUNT(アニメパターン, "下")
LOCAL:3 += STRCOUNT(アニメパターン, "ズームイン")
LOCAL:3 -= STRCOUNT(アニメパターン, "ズームアウト")


FOR LOCAL, 1, LOCAL:11 + 1
	CBGREMOVERANGE -1, -1
	GDISPOSE レイヤー番号 + 1 
	GCREATE レイヤー番号 + 1 , 1600, 900
	CALL カットイン用カラーマトリクス取得(LOCAL:6 - LOCAL * (LOCAL:6 / LOCAL:11))
	{
	GDRAWG レイヤー番号 + 1 , レイヤー番号 + 10 , 
	画像位置:0 + LOCAL:1 * (LOCAL:5 - LOCAL:15 * LOCAL) + (LOCAL:11 - LOCAL) * LOCAL:3 * LOCAL:17 / 2, 
	画像位置:1 + LOCAL:2 * (LOCAL:5 - LOCAL:15 * LOCAL) + (LOCAL:11 - LOCAL) * LOCAL:3 * LOCAL:17 / 2, 
	GWIDTH(レイヤー番号 + 10 ) - (LOCAL:11 - LOCAL) * (LOCAL:3 * LOCAL:17), 
	GHEIGHT(レイヤー番号 + 10 ) - (LOCAL:11 - LOCAL) * (LOCAL:3 * LOCAL:17), 
	0, 0, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 ), カットイン用カラーマトリクス:0:0
	}
	CBGSETG レイヤー番号 + 1 , 0, 0, -1
	AWAIT 10
NEXT

GDISPOSE レイヤー番号 + 0 
GCREATE レイヤー番号 + 0 , 1600, 900
GDRAWG レイヤー番号 + 0 , レイヤー番号 + 10 , 画像位置:0, 画像位置:1, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 ), 0, 0, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 )

RETURN

$フラッシュ

LOCAL:1 = 0
LOCAL:2 = 0
LOCAL:3 = 0


FOR LOCAL, 0, 5
	CBGREMOVERANGE -2, -2
	GDISPOSE レイヤー番号 + 2
	GCREATE レイヤー番号 + 2, 1600, 900
	GSETBRUSH レイヤー番号 + 2, 0xAFF0F0F0 + 0x10000000 * LOCAL
	GFILLRECTANGLE レイヤー番号 + 2, 画像位置:0, 画像位置:1, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 )
	CBGSETG レイヤー番号 + 2, 0, 0, -2
	AWAIT 10
NEXT

GDISPOSE レイヤー番号 + 1 
GCREATE レイヤー番号 + 1 , 1600, 900
GDRAWG レイヤー番号 + 1 , レイヤー番号 + 10 , 画像位置:0, 画像位置:1, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 ), 0, 0, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 )
CBGSETG レイヤー番号 + 1 , 0, 0, -1

FOR LOCAL, 0, 8
CBGREMOVERANGE -2, -2
	GDISPOSE レイヤー番号 + 2
	GCREATE レイヤー番号 + 2, 1600, 900
	GSETBRUSH レイヤー番号 + 2, 0xFFF0F0F0 - 0x20000000 * LOCAL
	GFILLRECTANGLE レイヤー番号 + 2, 画像位置:0, 画像位置:1, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 )
	CBGSETG レイヤー番号 + 2, 0, 0, -2
	AWAIT 20
NEXT
CBGREMOVERANGE -2, -2

GDISPOSE レイヤー番号 + 0 
GCREATE レイヤー番号 + 0 , 1600, 900
GDRAWG レイヤー番号 + 0 , レイヤー番号 + 10 , 画像位置:0, 画像位置:1, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 ), 0, 0, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 )

RETURN

$削除処理

CALL 画面再描画

SELECTCASE アニメパターン
	CASE "フェードアウト"
		GOTO フェードアウト
	CASE "ホワイトアウト"
		GOTO ホワイトアウト
ENDSELECT

LOCAL:1 = 0
LOCAL:2 = 0
LOCAL:3 = 0

LOCAL:1 -= STRCOUNT(アニメパターン, "左")
LOCAL:1 += STRCOUNT(アニメパターン, "右")
LOCAL:2 -= STRCOUNT(アニメパターン, "上")
LOCAL:2 += STRCOUNT(アニメパターン, "下")
LOCAL:3 += STRCOUNT(アニメパターン, "ズームイン")
LOCAL:3 -= STRCOUNT(アニメパターン, "ズームアウト")

;パラメタ調整用
LOCAL:5 = 40 ;最大移動幅
LOCAL:6 = 40 ;最大透明度
LOCAL:7 = 40 ;最大拡大PX
LOCAL:11 = 10 ;総フレーム数
LOCAL:15 = LOCAL:5 / LOCAL:11 ;移動幅毎フレーム
LOCAL:17 = LOCAL:7 / LOCAL:11 * 2 ;拡大PX毎フレーム

FOR LOCAL, 1, LOCAL:11 + 1
	CBGREMOVERANGE -1, -1
	GDISPOSE レイヤー番号 + 1 
	GCREATE レイヤー番号 + 1 , 1600, 900
	CALL カットイン用カラーマトリクス取得(LOCAL * 10)
	{
	GDRAWG レイヤー番号 + 1 , レイヤー番号 + 10 , 
	画像位置:0 + LOCAL:1 * (LOCAL:15 * LOCAL) + (LOCAL) * LOCAL:3 * LOCAL:17 / 2, 
	画像位置:1 + LOCAL:2 * (LOCAL:15 * LOCAL) + (LOCAL) * LOCAL:3 * LOCAL:17 / 2, 
	GWIDTH(レイヤー番号 + 10 ) - (LOCAL) * (LOCAL:3 * LOCAL:17), 
	GHEIGHT(レイヤー番号 + 10 ) - (LOCAL) * (LOCAL:3 * LOCAL:17), 
	0, 0, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 ), カットイン用カラーマトリクス:0:0
	}
	CBGSETG レイヤー番号 + 1 , 0, 0, -1
	AWAIT 10
NEXT

CBGREMOVERANGE -1, -1
GDISPOSE レイヤー番号 + 0 
GDISPOSE レイヤー番号 + 1 
GDISPOSE レイヤー番号 + 2 
GDISPOSE レイヤー番号 + 10 
GDISPOSE レイヤー番号 + 11 

RETURN

$フェードアウト

FOR LOCAL, 0, 10
	CBGREMOVERANGE -1, -1
	GDISPOSE レイヤー番号 + 1
	GCREATE レイヤー番号 + 1 , 1600, 900
	CALL カットイン用カラーマトリクス取得(LOCAL * 10)
	GDRAWG レイヤー番号 + 1 , レイヤー番号 + 0 , 0, 0, 1600, 900, 0, 0, 1600, 900, カットイン用カラーマトリクス:0:0
	CBGSETG レイヤー番号 + 1 , 0, 0, -1
	AWAIT 10
NEXT

CBGREMOVERANGE -1, -1
GDISPOSE レイヤー番号 + 0 
GDISPOSE レイヤー番号 + 1 
GDISPOSE レイヤー番号 + 2 
GDISPOSE レイヤー番号 + 10 
GDISPOSE レイヤー番号 + 11 

RETURN

$ホワイトアウト

FOR LOCAL, 0, 8
	CBGREMOVERANGE -2, -2
	GDISPOSE レイヤー番号 + 2
	GCREATE レイヤー番号 + 2, 1600, 900
	GSETBRUSH レイヤー番号 + 2, 0x1FF0F0F0 + 0x20000000 * LOCAL
	GFILLRECTANGLE レイヤー番号 + 2, 画像位置:0, 画像位置:1, GWIDTH(レイヤー番号 + 10 ), GHEIGHT(レイヤー番号 + 10 )
	CBGSETG レイヤー番号 + 2, 0, 0, -2
	AWAIT 20
NEXT
CBGREMOVERANGE -2, -2

FOR LOCAL, 0, 10
	CBGREMOVERANGE -1, -1
	GDISPOSE レイヤー番号 + 1
	GCREATE レイヤー番号 + 1 , 1600, 900
	CALL カットイン用カラーマトリクス取得(LOCAL * 10)
	GDRAWG レイヤー番号 + 1 , レイヤー番号 + 2 , 0, 0, 1600, 900, 0, 0, 1600, 900, カットイン用カラーマトリクス:0:0
	CBGSETG レイヤー番号 + 1 , 0, 0, -1
	AWAIT 10
NEXT

CBGREMOVERANGE -1, -1

GDISPOSE レイヤー番号 + 0 
GDISPOSE レイヤー番号 + 1 
GDISPOSE レイヤー番号 + 2 
GDISPOSE レイヤー番号 + 10 
GDISPOSE レイヤー番号 + 11 
