@アビテンプレート_ダメージ処理_自属性
;RETURNにダメージ量の合計値を突っ込む
#DIM 対象番号
#DIM ダメージ量計算値
#DIM 総ダメージ量
#DIM かばう済フラグ
#DIM 死亡フラグ
#DIM バフ番号
#DIM バリア耐久
#DIM バリア行数
#DIM 転換行数
#DIMS 属性文字色
#DIM 属性番号
#DIM 対象者属性
#DIM 属性補正フラグ
#DIM 配列番号
#DIM アビリティ威力
#DIM HP数値
かばう済フラグ = 0
死亡フラグ = 0

CALL アビテンプレート_効果共通処理
SIF RESULT == -1
	RETURN -1

SIF アビテンプレート用_味方全滅フラグ || アビテンプレート用_敵全滅フラグ
	RETURN 0

総ダメージ量 = 0
FOR 対象番号, 0, アビ対象最大数
	死亡フラグ = 0
	かばう済フラグ = 0
	SIF アビテンプレート用_対象保存:対象番号 < 0
		CONTINUE
	IF アビテンプレート用_対象保存:対象番号 < 10
		;既に死んでたらスキップ
		IF BATTLE_STATE:(アビテンプレート用_対象保存:対象番号):ＨＰ < 1
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%已被击败！
			CONTINUE
		ENDIF
	ELSE
		IF 敵BATTLE_STATE:(アビテンプレート用_対象保存:対象番号 - 10):ＨＰ < 1
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%已被击败！
			CONTINUE
		ENDIF
	ENDIF
	IF !GROUPMATCH(アビ汎用文字列:ダメージ種類, "通常攻撃ダメージ", "奥義ダメージ", "チェンバダメージ") && アビテンプレート用_対象保存:対象番号 != 戦闘行動キャラ && !アビ汎用変数:阻害無視オプション && バフ番号取得("反射", アビテンプレート用_対象保存:対象番号) >= 0
		;回数消費
		CALL バフ回数経過処理(アビテンプレート用_対象保存:対象番号, "反射")
		アビテンプレート用_対象保存:対象番号 = 戦闘行動キャラ
		アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = 攻击被%戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%反弹！
		かばう済フラグ = 1
	ENDIF
	IF !かばう済フラグ && アビテンプレート用_全体フラグ
		;全体時は単体かばうは元々無視
		IF アビテンプレート用_対象保存:対象番号 < 10
			CALL かばうチェック_味方(アビ汎用変数:かばう無視オプション | 1p0)
			IF RESULT >= 0
				アビテンプレート用_対象保存:対象番号 = RESULT
				アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%掩护了攻击！
				かばう済フラグ = 1
			ENDIF
		ELSE
			CALL かばうチェック_敵(アビ汎用変数:かばう無視オプション | 1p0)
			IF RESULT >= 0
				アビテンプレート用_対象保存:対象番号 = RESULT
				アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%掩护了攻击！
				かばう済フラグ = 1
			ENDIF
		ENDIF
	ELSEIF !かばう済フラグ
		;非全体時は単体かばうも起動可能
		IF アビテンプレート用_対象保存:対象番号 < 10
			CALL かばうチェック_味方(アビ汎用変数:かばう無視オプション)
			IF RESULT >= 0
				アビテンプレート用_対象保存:対象番号 = RESULT
				アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%掩护了攻击！
				かばう済フラグ = 1
			ENDIF
		ELSE
			CALL かばうチェック_敵(アビ汎用変数:かばう無視オプション)
			IF RESULT >= 0
				アビテンプレート用_対象保存:対象番号 = RESULT
				アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%掩护了攻击！
				かばう済フラグ = 1
			ENDIF
		ENDIF
	ENDIF

	戦闘行動対象 = アビテンプレート用_対象保存:対象番号
	アビリティ威力 = アビ汎用変数:効果割合
	IF アビリティ威力 > 0 && 戦闘行動キャラ < 10 && アビ汎用文字列:ダメージ種類 == "奥義ダメージ" && STRFINDU(DT_CELL_GETS("所持耳飾りデータベース", 装備ステータス補正保存:(BATTLE_STATE:戦闘行動キャラ:キャラ登録番号):装備耳飾り番号, "奥義補正", 1), "奥義威力") >= 0
		;味方の攻撃かつ奥義かつ耳飾りに奥義補正がある場合
		CALLFORM 奥義威力_効果量_%DT_CELL_GETS("所持耳飾りデータベース", 装備ステータス補正保存:(BATTLE_STATE:戦闘行動キャラ:キャラ登録番号):装備耳飾り番号, "耳飾り名", 1)%
		アビリティ威力 = MAX(アビリティ威力 * (100 + RESULT) / 100, アビリティ威力 + RESULT)
	ENDIF
	CALL ダメージ計算処理(アビリティ威力, アビ汎用文字列:攻撃側使用能力値, アビ汎用文字列:防御側使用能力値, アビ汎用変数:数値乱数幅)
	ダメージ量計算値 = RESULT + アビ汎用変数:効果量
	;ダメージ種類ごとのダメージ補正(連撃や全体攻撃で回数を余計に消費しないためにここでは観測のみ)
	CALL バフ・デバフ測定(戦闘行動キャラ, @"ダメージ補正_%アビ汎用文字列:ダメージ種類%", ダメージ量計算値, 1)
	ダメージ量計算値 = RESULT

	IF かばう済フラグ == 0
		;かばってない場合は回避判定が発生
		CALL 回避判定チェック(戦闘行動キャラ, 戦闘行動対象, アビ汎用変数:命中率補正値, アビ汎用変数:回避率補正値)
		IF RESULT
			;回避パターン
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(戦闘行動対象)%回避了攻击！
			アビテンプレート用_回避フラグ = 1
			;特殊反応中は連鎖させない
			IF 特殊反応フラグ == 0
				;被タゲ登録、回避登録
				IF MATCH(被タゲ反応者, 戦闘行動対象) < 1
					配列番号 = FINDELEMENT(被タゲ反応者, -1)
					被タゲ反応者:配列番号 = 戦闘行動対象
					被タゲ反応回数:配列番号 = 1
					被タゲ反応対象:配列番号 = 戦闘行動キャラ
				ELSE
					被タゲ反応回数:(FINDELEMENT(被タゲ反応者, 戦闘行動対象)) += 1
				ENDIF
				IF MATCH(回避反応者, 戦闘行動対象) < 1
					配列番号 = FINDELEMENT(回避反応者, -1)
					回避反応者:配列番号 = 戦闘行動対象
					回避反応回数:配列番号 = 1
					回避反応対象:配列番号 = 戦闘行動キャラ
				ELSE
					回避反応回数:(FINDELEMENT(回避反応者, 戦闘行動対象)) += 1
				ENDIF
			ENDIF
			CONTINUE
		ENDIF
	ENDIF

	;転換判定
	転換行数 = バフ番号取得("ＨＰ転換", 戦闘行動対象)
	IF 転換行数 >= 0 && デバフ番号取得("アンデッド", 戦闘行動対象) < 0 && !アビ汎用変数:阻害無視オプション
		アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(戦闘行動対象)%通过%DT_CELL_GETS("戦闘効果データベース", 転換行数, "効果名")%效果将伤害转化为治疗！

		ダメージ量計算値 = MIN(ダメージ量計算値 * DT_CELL_GET("戦闘効果データベース", 転換行数, "効果量_割合") / 100, BATTLE_STATE:戦闘行動対象:最大ＨＰ - BATTLE_STATE:戦闘行動対象:ＨＰ)
		SIF DT_CELL_GET("戦闘効果データベース", 転換行数, "効果量_固定値") > 0
			ダメージ量計算値 = MIN(ダメージ量計算値, DT_CELL_GET("戦闘効果データベース", 転換行数, "効果量_固定値"))
		IF デバフ番号取得("強圧", 戦闘行動対象) >= 0
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(戦闘行動対象)%的ＨＰ未能恢复…
			CALL デバフ回数経過処理(戦闘行動対象, "強圧")
		ELSE
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(戦闘行動対象)%的ＨＰ恢复了{ダメージ量計算値}！
			BATTLE_STATE:戦闘行動対象:ＨＰ = BATTLE_STATE:戦闘行動対象:ＨＰ + ダメージ量計算値
		ENDIF

		;回数消費
		CALL バフ回数経過処理(戦闘行動対象, "ＨＰ転換")
		;特殊反応中は連鎖させない
		IF 特殊反応フラグ == 0
			;被タゲだけ処理
			IF MATCH(被タゲ反応者, 戦闘行動対象) < 1
				配列番号 = FINDELEMENT(被タゲ反応者, -1)
				被タゲ反応者:配列番号 = 戦闘行動対象
				被タゲ反応回数:配列番号 = 1
				被タゲ反応対象:配列番号 = 戦闘行動キャラ
			ELSE
				被タゲ反応回数:(FINDELEMENT(被タゲ反応者, 戦闘行動対象)) += 1
			ENDIF
		ENDIF
		CONTINUE
	ENDIF
	転換行数 = バフ番号取得("ＭＰ転換", 戦闘行動対象)
	IF 転換行数 >= 0 && !アビ汎用変数:阻害無視オプション
		アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(戦闘行動対象)%通过%DT_CELL_GETS("戦闘効果データベース", 転換行数, "効果名")%效果将伤害转化为ＭＰ！

		ダメージ量計算値 = MIN(ダメージ量計算値 * DT_CELL_GET("戦闘効果データベース", 転換行数, "効果量_割合") / 100, BATTLE_STATE:戦闘行動対象:最大ＭＰ - BATTLE_STATE:戦闘行動対象:ＭＰ)
		SIF DT_CELL_GET("戦闘効果データベース", 転換行数, "効果量_固定値") > 0
			ダメージ量計算値 = MIN(ダメージ量計算値, DT_CELL_GET("戦闘効果データベース", 転換行数, "効果量_固定値"))
		アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(戦闘行動対象)%的ＭＰ恢复了{ダメージ量計算値}！
		BATTLE_STATE:戦闘行動対象:ＭＰ = BATTLE_STATE:戦闘行動対象:ＭＰ + ダメージ量計算値

		;回数消費
		CALL バフ回数経過処理(戦闘行動対象, "ＭＰ転換")
		;特殊反応中は連鎖させない
		IF 特殊反応フラグ == 0
			;被タゲだけ処理
			IF MATCH(被タゲ反応者, 戦闘行動対象) < 1
				配列番号 = FINDELEMENT(被タゲ反応者, -1)
				被タゲ反応者:配列番号 = 戦闘行動対象
				被タゲ反応回数:配列番号 = 1
				被タゲ反応対象:配列番号 = 戦闘行動キャラ
			ELSE
				被タゲ反応回数:(FINDELEMENT(被タゲ反応者, 戦闘行動対象)) += 1
			ENDIF
		ENDIF
		CONTINUE
	ENDIF

	SIF アビ汎用変数:ダメージ上限無視オプション == 0
		ダメージ量計算値 = MIN(ダメージ量計算値, ダメージ上限計算(戦闘行動キャラ))
	総ダメージ量 += ダメージ量計算値
	LOCALS = 

	;ダメージの属性に応じて文字色変化
	IF 戦闘行動キャラ < 10
		属性番号 = BATTLE_STATE:戦闘行動キャラ:属性
	ELSE
		属性番号 = 敵BATTLE_STATE:(戦闘行動キャラ - 10):属性
	ENDIF
	IF 戦闘行動対象 >= 10
		;味方側処理
		対象者属性 = 敵BATTLE_STATE:(戦闘行動対象 - 10):属性
		IF バフ番号取得_枠("慧眼" , 戦闘行動キャラ) > -1
			属性番号 = 慧眼属性変更(属性番号, 対象者属性)
			属性補正フラグ = 1
		ELSE
			属性補正フラグ = 属性有利不利(属性番号, 対象者属性, "味方側")
		ENDIF
	ELSEIF 戦闘行動対象 < 10
		;敵側処理
		対象者属性 = BATTLE_STATE:戦闘行動対象:属性
		属性補正フラグ = 属性有利不利(属性番号, 対象者属性, "敵側")
	ENDIF
	属性文字色 = %属性数値文字色変換_HTML(属性番号)%

	IF アビ汎用変数:クリティカルフラグ > 0
		LOCALS += "暴击！　"
		戦闘中カウント:戦闘行動キャラ:クリティカル回数 += 1
	ENDIF
	バリア行数 = バフ番号取得("バリア", 戦闘行動対象)
	IF バリア行数 > -1 && !アビ汎用変数:阻害無視オプション
		バリア耐久 = DT_CELL_GET("戦闘効果データベース", バリア行数, "効果量_固定値")
		IF バリア耐久 >= ダメージ量計算値
			LOCALS += @"%戦闘キャラ名前取得(戦闘行動対象)%的护盾受到了<font color='#%属性文字色%'>{ダメージ量計算値}</font>点伤害！"
			IF バリア耐久 == ダメージ量計算値
				LOCALS += "　屏障被打破！"
				CALL 戦闘効果削除(バリア行数)
			ELSE
				DT_CELL_SET "戦闘効果データベース", バリア行数, "効果量_固定値", バリア耐久 - ダメージ量計算値
				ダメージ量計算値 = 0
				;回数消費
				CALL バフ回数経過処理(戦闘行動対象, "バリア")
			ENDIF
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %LOCALS%
			;特殊反応中は連鎖させない
			IF 特殊反応フラグ == 0
				;被タゲだけ処理
				IF MATCH(被タゲ反応者, 戦闘行動対象) < 1
					配列番号 = FINDELEMENT(被タゲ反応者, -1)
					被タゲ反応者:配列番号 = 戦闘行動対象
					被タゲ反応回数:配列番号 = 1
					被タゲ反応対象:配列番号 = 戦闘行動キャラ
				ELSE
					被タゲ反応回数:(FINDELEMENT(被タゲ反応者, 戦闘行動対象)) += 1
				ENDIF
			ENDIF
			CONTINUE
		ELSE
			LOCALS += @"%戦闘キャラ名前取得(戦闘行動対象)%的护盾受到了<font color='#%属性文字色%'>{ダメージ量計算値}</font>点伤害！　护盾被打破！"
			ダメージ量計算値 -= バリア耐久
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %LOCALS%
			LOCALS = 
		ENDIF
	ENDIF
	LOCALS += @"%戦闘キャラ名前取得(戦闘行動対象)%受到<font color='#%属性文字色%'>{ダメージ量計算値}</font>点伤害！"
	アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %LOCALS%
	戦闘中カウント:戦闘行動キャラ:与ヒット数合計 += 1
	戦闘中カウント:戦闘行動対象:被ヒット数合計 += 1
	IF 戦闘行動対象 < 10
		HP数値 = MAX(BATTLE_STATE:戦闘行動対象:ＨＰ - ダメージ量計算値, 0)
		戦闘中カウント:戦闘行動対象:被ダメ合計 += ダメージ量計算値
		SIF 戦闘行動キャラ >= 10 && ダメージ量計算値 > BATTLE_STATE:戦闘行動対象:最大ＨＰ / 4
			;敵＞味方の大ダメージの場合、口上用変数を記録
			CALL 反応口上記録処理("被大ダメージ時")
	ELSE
		HP数値 = MAX(敵BATTLE_STATE:(戦闘行動対象 - 10):ＨＰ - ダメージ量計算値, 0)
	ENDIF
		
	IF HP数値 < 1
		IF バフ番号取得("ガッツ", 戦闘行動対象) != -1
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(戦闘行動対象)%以毫厘之差存活！
			CALL バフ回数経過処理(戦闘行動対象, "ガッツ")
			HP数値 = 1
		ELSE
			死亡フラグ = 1
			;死亡時ダメ属性を記録
			SETBIT 戦闘中カウント:戦闘行動対象:死亡時ダメ属性, 属性番号
		ENDIF
	ENDIF

	IF 戦闘行動対象 < 10
		BATTLE_STATE:戦闘行動対象:ＨＰ = HP数値
	ELSE
		敵BATTLE_STATE:(戦闘行動対象 - 10):ＨＰ = HP数値
	ENDIF

	IF 死亡フラグ
		アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(戦闘行動対象)%已倒下！
		CALL 戦闘不能者登録(戦闘行動対象, 戦闘行動キャラ)
		口上用トドメフラグ += 1
	ELSE
		;特殊反応中は連鎖させない
		IF 特殊反応フラグ == 0
			;被タゲ登録、被ダメ登録
			IF MATCH(被タゲ反応者, 戦闘行動対象) < 1
				配列番号 = FINDELEMENT(被タゲ反応者, -1)
				被タゲ反応者:配列番号 = 戦闘行動対象
				被タゲ反応回数:配列番号 = 1
				被タゲ反応対象:配列番号 = 戦闘行動キャラ
			ELSE
				被タゲ反応回数:(FINDELEMENT(被タゲ反応者, 戦闘行動対象)) += 1
			ENDIF
			IF MATCH(被ダメ反応者, 戦闘行動対象) < 1
				配列番号 = FINDELEMENT(被ダメ反応者, -1)
				被ダメ反応者:配列番号 = 戦闘行動対象
				被ダメ反応回数:配列番号 = 1
				被ダメ反応対象:配列番号 = 戦闘行動キャラ
				被ダメ時最大ダメ:配列番号 = ダメージ量計算値
				被ダメ時総ダメ:配列番号 = ダメージ量計算値
			ELSE
				配列番号 = FINDELEMENT(被ダメ反応者, 戦闘行動対象)
				被ダメ反応回数:配列番号 += 1
				被ダメ時総ダメ:配列番号 += ダメージ量計算値
				SIF 被ダメ時最大ダメ:配列番号 < ダメージ量計算値
					被ダメ時最大ダメ:配列番号 = ダメージ量計算値
			ENDIF
		ENDIF
	ENDIF
	CALL ダメージ表示アニメ(ダメージ量計算値, 戦闘行動対象, 0, 0, 属性補正フラグ)
NEXT

;このタイミングでダメージ補正の回数を消費
CALL バフ回数経過処理(戦闘行動キャラ, @"ダメージ補正_%アビ汎用文字列:ダメージ種類%")
SIF !GROUPMATCH(アビ汎用文字列:ダメージ種類, "通常攻撃ダメージ", "アビリティダメージ", "奥義ダメージ", "チェンバダメージ")
	CALL バフ回数経過処理(戦闘行動キャラ, "ダメージ補正_アビリティダメージ")

;通常攻撃の場合通常攻撃後の処理
IF アビ汎用文字列:ダメージ種類 == "通常攻撃ダメージ"
	CALL 通常攻撃後処理関数(0)
ENDIF

アビ汎用変数:クリティカル率計算値保存 = -1
アビ汎用変数:クリティカルダメージ計算値保存 = -1

IF 戦闘行動キャラ < 10
	戦闘中カウント:戦闘行動キャラ:与ダメ合計 += 総ダメージ量
ENDIF

CALL 全滅チェック

RETURN 総ダメージ量

@アビテンプレート_ダメージ処理_属性付き(属性番号)
#DIM 属性一時保存
#DIM 属性番号

IF 戦闘行動キャラ < 10
	属性一時保存 = BATTLE_STATE:戦闘行動キャラ:属性
	BATTLE_STATE:戦闘行動キャラ:属性 = 属性番号
	CALL アビテンプレート_ダメージ処理_自属性
	BATTLE_STATE:戦闘行動キャラ:属性 = 属性一時保存
ELSE
	属性一時保存 = 敵BATTLE_STATE:(戦闘行動キャラ - 10):属性
	敵BATTLE_STATE:(戦闘行動キャラ - 10):属性 = 属性番号
	CALL アビテンプレート_ダメージ処理_自属性
	敵BATTLE_STATE:(戦闘行動キャラ - 10):属性 = 属性一時保存
ENDIF
RETURN RESULT

@アビテンプレート_ダメージ処理_火属性
JUMP アビテンプレート_ダメージ処理_属性付き(0)

@アビテンプレート_ダメージ処理_水属性
JUMP アビテンプレート_ダメージ処理_属性付き(1)

@アビテンプレート_ダメージ処理_風属性
JUMP アビテンプレート_ダメージ処理_属性付き(2)

@アビテンプレート_ダメージ処理_土属性
JUMP アビテンプレート_ダメージ処理_属性付き(3)

@アビテンプレート_ダメージ処理_光属性
JUMP アビテンプレート_ダメージ処理_属性付き(4)

@アビテンプレート_ダメージ処理_闇属性
JUMP アビテンプレート_ダメージ処理_属性付き(5)

@アビテンプレート_ダメージ処理_無属性
JUMP アビテンプレート_ダメージ処理_属性付き(6)

@アビテンプレート_通常攻撃処理
#DIM DA率計算値
#DIM TA率計算値
#DIM 連撃率加算値
#DIM ゲージ上昇率計算値
#DIMS 表示文章一時格納
#DIM 連撃数
#DIM 奥義ゲージ上昇量
#DIM 死亡フラグ
#DIM ダメージ量計算値
#DIM 総ダメージ量
#DIM 追撃ダメージ
#DIM 追撃ダメージ合計値
#DIM 対象番号
#DIM 追撃効果量, 10
#DIM 追撃効果割合, 10
#DIM 追撃数
#DIM かばう済フラグ
#DIM バリア耐久
#DIM バリア行数
#DIM 転換行数
#DIMS 効果種類
#DIM 属性番号
#DIMS 属性文字色
#DIM 配列番号
#DIM 対象属性
#DIM 属性補正フラグ
#DIM クリ率数値
#DIM HP数値

総ダメージ量 = 0
対象番号 = 0

CALL アビテンプレート_効果共通処理
SIF RESULT == -1
	RETURN -1

SIF アビテンプレート用_味方全滅フラグ || アビテンプレート用_敵全滅フラグ
	RETURN 0

;攻撃回数決定
LOCAL = RAND:100
CALL バフ・デバフ測定(戦闘行動キャラ, "DA率")
DA率計算値 = RESULT + アビ汎用変数:DA率補正値
CALL バフ・デバフ測定(戦闘行動キャラ, "TA率")
TA率計算値 = RESULT + アビ汎用変数:TA率補正値
CALL バフ・デバフ測定(戦闘行動キャラ, "連続攻撃率")
連撃率加算値 = RESULT
CALL バフ・デバフ測定(戦闘行動キャラ, "ゲージ上昇効率")
ゲージ上昇率計算値 = MAX(0, RESULT)
CALL バフ・デバフ測定(戦闘行動キャラ, "通常攻撃_ゲージ上昇率", ゲージ上昇率計算値)
ゲージ上昇率計算値 = MAX(0, RESULT)
IF TA率計算値 + 連撃率加算値 > LOCAL
	アビテンプレート用_表示メッセージ格納:システムメッセージ番号:(A_M_NUM:システムメッセージ番号++) = 三重攻击！
	連撃数 = 3
	IF 戦闘行動キャラ < 10
		奥義ゲージ上昇量 = 10 * (ゲージ上昇率計算値) / 100
		奥義ゲージ上昇量 += 12 * (ゲージ上昇率計算値) / 100
		奥義ゲージ上昇量 += 15 * (ゲージ上昇率計算値) / 100
	ENDIF
ELSE
	LOCAL = RAND:100
	IF DA率計算値 + 連撃率加算値 > LOCAL
		アビテンプレート用_表示メッセージ格納:システムメッセージ番号:(A_M_NUM:システムメッセージ番号++) = 双重攻击！
		連撃数 = 2
		IF 戦闘行動キャラ < 10
			奥義ゲージ上昇量 = 10 * (ゲージ上昇率計算値) / 100
			奥義ゲージ上昇量 += 12 * (ゲージ上昇率計算値) / 100
		ENDIF
	ELSE
		連撃数 = 1
		IF 戦闘行動キャラ < 10
			奥義ゲージ上昇量 = 10 * (ゲージ上昇率計算値) / 100
		ENDIF
	ENDIF
ENDIF
IF デバフ番号取得("恐怖", 戦闘行動キャラ) < 0
	IF 戦闘行動キャラ < 10
		BATTLE_STATE:戦闘行動キャラ:奥義ゲージ = MIN(BATTLE_STATE:戦闘行動キャラ:奥義ゲージ + 奥義ゲージ上昇量, BATTLE_STATE:戦闘行動キャラ:ゲージ最大値)
	ELSE
		敵BATTLE_STATE:(戦闘行動キャラ - 10):チャージターン += 1
	ENDIF
ELSE
	;回数消費
	CALL デバフ回数経過処理(戦闘行動キャラ, "恐怖")
ENDIF

FOR 対象番号, 0, アビ対象最大数
	表示文章一時格納 = 
	死亡フラグ = 0
	かばう済フラグ = 0
	SIF アビテンプレート用_対象保存:対象番号 < 0
		CONTINUE
	IF アビテンプレート用_対象保存:対象番号 < 10
		;既に死んでたらスキップ
		IF BATTLE_STATE:(アビテンプレート用_対象保存:対象番号):ＨＰ < 1
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%已被击败！
			CONTINUE
		ENDIF
	ELSE
		IF 敵BATTLE_STATE:(アビテンプレート用_対象保存:対象番号 - 10):ＨＰ < 1
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%已被击败！
			CONTINUE
		ENDIF
	ENDIF
	IF !かばう済フラグ && アビテンプレート用_全体フラグ
		;全体時は単体かばうは元々無視
		IF アビテンプレート用_対象保存:対象番号 < 10
			CALL かばうチェック_味方(アビ汎用変数:かばう無視オプション | 1p0)
			IF RESULT >= 0
				アビテンプレート用_対象保存:対象番号 = RESULT
				アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%掩护了攻击！
				かばう済フラグ = 1
			ENDIF
		ELSE
			CALL かばうチェック_敵(アビ汎用変数:かばう無視オプション | 1p0)
			IF RESULT >= 0
				アビテンプレート用_対象保存:対象番号 = RESULT
				アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%掩护了攻击！
				かばう済フラグ = 1
			ENDIF
		ENDIF
	ELSEIF !かばう済フラグ
		;非全体時は単体かばうも起動可能
		IF アビテンプレート用_対象保存:対象番号 < 10
			CALL かばうチェック_味方(アビ汎用変数:かばう無視オプション)
			IF RESULT >= 0
				アビテンプレート用_対象保存:対象番号 = RESULT
				アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%掩护了攻击！
				かばう済フラグ = 1
			ENDIF
		ELSE
			CALL かばうチェック_敵(アビ汎用変数:かばう無視オプション)
			IF RESULT >= 0
				アビテンプレート用_対象保存:対象番号 = RESULT
				アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(アビテンプレート用_対象保存:対象番号)%掩护了攻击！
				かばう済フラグ = 1
			ENDIF
		ENDIF
	ENDIF

	戦闘行動対象 = アビテンプレート用_対象保存:対象番号
	IF かばう済フラグ == 0
		;かばってない場合は回避判定が発生
		CALL 回避判定チェック(戦闘行動キャラ, 戦闘行動対象, アビ汎用変数:命中率補正値, アビ汎用変数:回避率補正値)
		IF RESULT
			;回避パターン
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(戦闘行動対象)%回避了攻击！
			アビテンプレート用_回避フラグ = 1
			;特殊反応中は連鎖させない
			IF 特殊反応フラグ == 0
				;被タゲ登録、回避登録
				IF MATCH(被タゲ反応者, 戦闘行動対象) < 1
					配列番号 = FINDELEMENT(被タゲ反応者, -1)
					被タゲ反応者:配列番号 = 戦闘行動対象
					被タゲ反応回数:配列番号 = 1
					被タゲ反応対象:配列番号 = 戦闘行動キャラ
				ELSE
					被タゲ反応回数:(FINDELEMENT(被タゲ反応者, 戦闘行動対象)) += 1
				ENDIF
				IF MATCH(回避反応者, 戦闘行動対象) < 1
					配列番号 = FINDELEMENT(回避反応者, -1)
					回避反応者:配列番号 = 戦闘行動対象
					回避反応回数:配列番号 = 1
					回避反応対象:配列番号 = 戦闘行動キャラ
				ELSE
					回避反応回数:(FINDELEMENT(回避反応者, 戦闘行動対象)) += 1
				ENDIF
			ENDIF
			CONTINUE
		ENDIF
		;通常攻撃は暗闇もチェック
		CALL バフ・デバフ測定(戦闘行動キャラ, "暗闇")
		IF RAND:100 < RESULT
			;暗闇で外したパターン、回避時効果は発動しない
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(戦闘行動キャラ)%的攻击未能命中！
			CONTINUE
		ENDIF
	ENDIF

	;転換判定
	転換行数 = バフ番号取得("ＨＰ転換", 戦闘行動対象)
	IF 転換行数 >= 0 && デバフ番号取得("アンデッド", 戦闘行動対象) < 0 && !アビ汎用変数:阻害無視オプション
		アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(戦闘行動対象)%通过%DT_CELL_GETS("戦闘効果データベース", 転換行数, "効果名")%效果将伤害转化为治疗！

		;転換時は連撃や追撃、クリティカルは発生しない
		CALL ダメージ計算処理(アビ汎用変数:効果割合, アビ汎用文字列:攻撃側使用能力値, アビ汎用文字列:防御側使用能力値, アビ汎用変数:数値乱数幅)
		ダメージ量計算値 = RESULT + アビ汎用変数:効果量
		;通常攻撃ダメージ補正(連撃や全体攻撃で回数を余計に消費しないためにここでは観測のみ)
		CALL バフ・デバフ測定(戦闘行動キャラ, "ダメージ補正_通常攻撃ダメージ", ダメージ量計算値, 1)
		ダメージ量計算値 = RESULT

		ダメージ量計算値 = MIN(ダメージ量計算値 * DT_CELL_GET("戦闘効果データベース", 転換行数, "効果量_割合") / 100, BATTLE_STATE:戦闘行動対象:最大ＨＰ - BATTLE_STATE:戦闘行動対象:ＨＰ)
		SIF DT_CELL_GET("戦闘効果データベース", 転換行数, "効果量_固定値") > 0
			ダメージ量計算値 = MIN(ダメージ量計算値, DT_CELL_GET("戦闘効果データベース", 転換行数, "効果量_固定値"))
		IF デバフ番号取得("強圧", 戦闘行動対象) >= 0
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(戦闘行動対象)%的ＨＰ未能恢复…
			CALL デバフ回数経過処理(戦闘行動対象, "強圧")
		ELSE
			アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(戦闘行動対象)%的ＨＰ恢复了{ダメージ量計算値}！
			BATTLE_STATE:戦闘行動対象:ＨＰ = BATTLE_STATE:戦闘行動対象:ＨＰ + ダメージ量計算値
		ENDIF

		;回数消費
		CALL バフ回数経過処理(戦闘行動対象, "ＨＰ転換")
		;特殊反応中は連鎖させない
		IF 特殊反応フラグ == 0
			;被タゲだけ処理
			IF MATCH(被タゲ反応者, 戦闘行動対象) < 1
				配列番号 = FINDELEMENT(被タゲ反応者, -1)
				被タゲ反応者:配列番号 = 戦闘行動対象
				被タゲ反応回数:配列番号 = 1
				被タゲ反応対象:配列番号 = 戦闘行動キャラ
			ELSE
				被タゲ反応回数:(FINDELEMENT(被タゲ反応者, 戦闘行動対象)) += 1
			ENDIF
		ENDIF
		CONTINUE
	ENDIF
	転換行数 = バフ番号取得("ＭＰ転換", 戦闘行動対象)
	IF 転換行数 >= 0 && !アビ汎用変数:阻害無視オプション
		アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(戦闘行動対象)%通过%DT_CELL_GETS("戦闘効果データベース", 転換行数, "効果名")%效果将伤害转化为ＭＰ！

		;転換時は連撃や追撃、クリティカルは発生しない
		CALL ダメージ計算処理(アビ汎用変数:効果割合, アビ汎用文字列:攻撃側使用能力値, アビ汎用文字列:防御側使用能力値, アビ汎用変数:数値乱数幅)
		ダメージ量計算値 = RESULT + アビ汎用変数:効果量
		;通常攻撃ダメージ補正(連撃や全体攻撃で回数を余計に消費しないためにここでは観測のみ)
		CALL バフ・デバフ測定(戦闘行動キャラ, "ダメージ補正_通常攻撃ダメージ", ダメージ量計算値, 1)
		ダメージ量計算値 = RESULT

		ダメージ量計算値 = MIN(ダメージ量計算値 * DT_CELL_GET("戦闘効果データベース", 転換行数, "効果量_割合") / 100, BATTLE_STATE:戦闘行動対象:最大ＭＰ - BATTLE_STATE:戦闘行動対象:ＭＰ)
		SIF DT_CELL_GET("戦闘効果データベース", 転換行数, "効果量_固定値") > 0
			ダメージ量計算値 = MIN(ダメージ量計算値, DT_CELL_GET("戦闘効果データベース", 転換行数, "効果量_固定値"))
		アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(戦闘行動対象)%的ＭＰ恢复了{ダメージ量計算値}！
		BATTLE_STATE:戦闘行動対象:ＭＰ = BATTLE_STATE:戦闘行動対象:ＭＰ + ダメージ量計算値

		;回数消費
		CALL バフ回数経過処理(戦闘行動対象, "ＭＰ転換")
		;特殊反応中は連鎖させない
		IF 特殊反応フラグ == 0
			;被タゲだけ処理
			IF MATCH(被タゲ反応者, 戦闘行動対象) < 1
				配列番号 = FINDELEMENT(被タゲ反応者, -1)
				被タゲ反応者:配列番号 = 戦闘行動対象
				被タゲ反応回数:配列番号 = 1
				被タゲ反応対象:配列番号 = 戦闘行動キャラ
			ELSE
				被タゲ反応回数:(FINDELEMENT(被タゲ反応者, 戦闘行動対象)) += 1
			ENDIF
		ENDIF
		CONTINUE
	ENDIF

	;クリティカル判定
	IF 戦闘行動対象 < 10
		対象属性 = BATTLE_STATE:戦闘行動対象:属性
	ELSEIF 戦闘行動対象 >= 10
		対象属性 = 敵BATTLE_STATE:(戦闘行動対象 - 10):属性
	ENDIF
	IF 戦闘行動キャラ < 10
		;味方側処理
		属性番号 = BATTLE_STATE:戦闘行動キャラ:属性
		IF バフ番号取得_枠("慧眼" , 戦闘行動キャラ) > -1
			属性番号 = 慧眼属性変更(属性番号, 対象属性)
			属性補正フラグ = 1
		ELSE
			属性補正フラグ = 属性有利不利(属性番号, 対象属性, "味方側")
		ENDIF
	ELSEIF 戦闘行動キャラ >= 10
		;敵側処理
		属性番号 = 敵BATTLE_STATE:(戦闘行動キャラ - 10):属性
		属性補正フラグ = 属性有利不利(属性番号, 対象属性,  "敵側")
	ENDIF
	;ダメージの属性に応じて文字色変化
	属性文字色 = %属性数値文字色変換_HTML(属性番号)%

	IF 属性補正フラグ == 1
		IF アビ汎用変数:クリティカル率計算値保存 == -1
			CALL バフ・デバフ測定(戦闘行動キャラ, "クリティカル率", 1)
			アビ汎用変数:クリティカル率計算値保存 = RESULT
		ENDIF
		クリ率数値 = アビ汎用変数:クリティカル率計算値保存 + アビ汎用変数:クリティカル率補正値
		IF アビ汎用変数:クリティカルフラグ == 999 || (アビ汎用変数:クリティカルフラグ != -999 && RAND:100 < クリ率数値)
			表示文章一時格納 += "暴击！　"
			;DAやTAでも全部クリティカルにするために、クリティカルフラグ999を入れる
			アビ汎用変数:クリティカルフラグ = 999
			戦闘中カウント:戦闘行動キャラ:クリティカル回数 += 1
		ELSE
			;クリ抽選にハズレたらこの通常攻撃の間はクリさせない
			アビ汎用変数:クリティカルフラグ = -999
		ENDIF
	ENDIF

	表示文章一時格納 += @"%戦闘キャラ名前取得(戦闘行動対象)%"
	FOR LOCAL, 0, 連撃数
		SIF LOCAL && 追撃数
			表示文章一時格納 += @"<br>"
		CALL ダメージ計算処理(アビ汎用変数:効果割合, アビ汎用文字列:攻撃側使用能力値, アビ汎用文字列:防御側使用能力値, アビ汎用変数:数値乱数幅 ,連撃数 - LOCAL - 1)
		ダメージ量計算値 = RESULT + アビ汎用変数:効果量

		;通常攻撃ダメージ補正(連撃や全体攻撃で回数を余計に消費しないためにここでは観測のみ)
		CALL バフ・デバフ測定(戦闘行動キャラ, "ダメージ補正_通常攻撃ダメージ", ダメージ量計算値, 1)
		ダメージ量計算値 = RESULT

		SIF アビ汎用変数:ダメージ上限無視オプション == 0
			ダメージ量計算値 = MIN(ダメージ量計算値, ダメージ上限計算(戦闘行動キャラ))
		総ダメージ量 += ダメージ量計算値

		バリア行数 = バフ番号取得("バリア", 戦闘行動対象)
		IF バリア行数 > -1 && !アビ汎用変数:阻害無視オプション
			SIF LOCAL == 0
				表示文章一時格納 += "的"
			バリア耐久 = DT_CELL_GET("戦闘効果データベース", バリア行数, "効果量_固定値")
			IF バリア耐久 >= ダメージ量計算値
				表示文章一時格納 += @"屏障受到了<font color='#%属性文字色%'>{ダメージ量計算値}</font>点伤害！　"
				IF バリア耐久 == ダメージ量計算値
					LOCALS += "　屏障被打破！"
					CALL 戦闘効果削除(バリア行数)
				ELSE
					DT_CELL_SET "戦闘効果データベース", バリア行数, "効果量_固定値", バリア耐久 - ダメージ量計算値
					ダメージ量計算値 = 0
					;回数消費
					CALL バフ回数経過処理(戦闘行動対象, "バリア")
				ENDIF

				;特殊反応中は連鎖させない
				IF 特殊反応フラグ == 0
					;被タゲだけ処理
					IF MATCH(被タゲ反応者, 戦闘行動対象) < 1
						配列番号 = FINDELEMENT(被タゲ反応者, -1)
						被タゲ反応者:配列番号 = 戦闘行動対象
						被タゲ反応回数:配列番号 = 1
						被タゲ反応対象:配列番号 = 戦闘行動キャラ
					ELSE
						被タゲ反応回数:(FINDELEMENT(被タゲ反応者, 戦闘行動対象)) += 1
					ENDIF
				ENDIF
				CONTINUE
			ELSE
				表示文章一時格納 += @"屏障受到了<font color='#%属性文字色%'>{ダメージ量計算値}</font>点伤害！　屏障被打破！"
				ダメージ量計算値 -= バリア耐久
				CALL 戦闘効果削除(バリア行数)
				アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %表示文章一時格納%
				表示文章一時格納 = 
			ENDIF
		ELSE
			SIF LOCAL == 0
				表示文章一時格納 += "受到"
		ENDIF


		表示文章一時格納 += @"<font color='#%属性文字色%'>{ダメージ量計算値}</font>点伤害！　"

		;追撃チェック
		VARSET 追撃効果量
		VARSET 追撃効果割合
		追撃ダメージ合計値 = 0
		追撃数 = 0
		FOR LOCAL:1, 0, DT_ROW_LENGTH("戦闘効果データベース")
			SIF バフ・デバフ効果適用判定_行指定(LOCAL:1, "バフ", "追撃", 戦闘行動キャラ) == 0
				CONTINUE
			;ダメージ量決定
			追撃効果量:追撃数 = DT_CELL_GET("戦闘効果データベース", LOCAL:1, "効果量_固定値")
			追撃効果割合:追撃数 = DT_CELL_GET("戦闘効果データベース", LOCAL:1, "効果量_割合")
			追撃数 += 1
		NEXT
		FOR LOCAL:1, 0, 追撃数
			追撃ダメージ = 追撃効果割合:(LOCAL:1) * ダメージ量計算値 / 100 + 追撃効果量:(LOCAL:1)
			表示文章一時格納 += @"以及<font color='#%属性文字色%'>{追撃ダメージ}</font>点追击伤害！　"
			総ダメージ量 += 追撃ダメージ
			追撃ダメージ合計値 += 追撃ダメージ
			戦闘中カウント:戦闘行動キャラ:与ヒット数合計 += 1
			戦闘中カウント:戦闘行動対象:被ヒット数合計 += 1
		NEXT


		戦闘中カウント:戦闘行動キャラ:与ヒット数合計 += 1
		戦闘中カウント:戦闘行動対象:被ヒット数合計 += 1
		IF 戦闘行動対象 < 10
			HP数値 = MAX(BATTLE_STATE:戦闘行動対象:ＨＰ - ダメージ量計算値 - 追撃ダメージ合計値, 0)
			戦闘中カウント:戦闘行動対象:被ダメ合計 += ダメージ量計算値 + 追撃ダメージ合計値
		ELSE
			HP数値 = MAX(敵BATTLE_STATE:(戦闘行動対象 - 10):ＨＰ - ダメージ量計算値 - 追撃ダメージ合計値, 0)
		ENDIF

		IF HP数値 < 1
			IF バフ番号取得("ガッツ", 戦闘行動対象) != -1
				アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %戦闘キャラ名前取得(戦闘行動対象)%咬紧牙关坚持存活！
				CALL バフ回数経過処理(戦闘行動対象, "ガッツ")
				HP数値 = 1
			ELSE
				死亡フラグ = 1
				;死亡時ダメ属性を記録
				SETBIT 戦闘中カウント:戦闘行動対象:死亡時ダメ属性, 属性番号
			ENDIF
		ENDIF

		IF 戦闘行動対象 < 10
			BATTLE_STATE:戦闘行動対象:ＨＰ = HP数値
		ELSE
			敵BATTLE_STATE:(戦闘行動対象 - 10):ＨＰ = HP数値
		ENDIF

		CALL ダメージ表示アニメ(ダメージ量計算値 + 追撃ダメージ合計値, 戦闘行動対象, LOCAL, 0, 属性補正フラグ)

		IF 死亡フラグ
			表示文章一時格納 += @"<br>%戦闘キャラ名前取得(戦闘行動対象)%已倒下！"
			BREAK
		ELSE
			;特殊反応中は連鎖させない
			IF 特殊反応フラグ == 0
				;被タゲ登録、被ダメ登録
				IF MATCH(被タゲ反応者, 戦闘行動対象) < 1
					配列番号 = FINDELEMENT(被タゲ反応者, -1)
					被タゲ反応者:配列番号 = 戦闘行動対象
					被タゲ反応回数:配列番号 = 1
					被タゲ反応対象:配列番号 = 戦闘行動キャラ
				ELSE
					被タゲ反応回数:(FINDELEMENT(被タゲ反応者, 戦闘行動対象)) += 1
				ENDIF
				IF MATCH(被ダメ反応者, 戦闘行動対象) < 1
					配列番号 = FINDELEMENT(被ダメ反応者, -1)
					被ダメ反応者:配列番号 = 戦闘行動対象
					被ダメ反応回数:配列番号 = 1
					被ダメ反応対象:配列番号 = 戦闘行動キャラ
					被ダメ時最大ダメ:配列番号 = ダメージ量計算値 + 追撃ダメージ合計値
					被ダメ時総ダメ:配列番号 = ダメージ量計算値 + 追撃ダメージ合計値
				ELSE
					配列番号 = FINDELEMENT(被ダメ反応者, 戦闘行動対象)
					被ダメ反応回数:配列番号 += 1
					被ダメ時総ダメ:配列番号 += ダメージ量計算値 + 追撃ダメージ合計値
					SIF 被ダメ時最大ダメ:配列番号 < ダメージ量計算値 + 追撃ダメージ合計値
						被ダメ時最大ダメ:配列番号 = ダメージ量計算値 + 追撃ダメージ合計値
				ENDIF
			ENDIF
		ENDIF
	NEXT
	アビ汎用変数:クリティカルフラグ = 0
	アビテンプレート用_表示メッセージ格納:対象番号:(A_M_NUM:対象番号++) = %表示文章一時格納%
	IF 死亡フラグ
		CALL 戦闘不能者登録(戦闘行動対象, 戦闘行動キャラ)
		口上用トドメフラグ += 1
	ENDIF
NEXT

;このタイミングで追撃とダメージ補正の回数を消費
CALL バフ回数経過処理(戦闘行動キャラ, "追撃")
CALL バフ回数経過処理(戦闘行動キャラ, "ダメージ補正_通常攻撃ダメージ")

CALL 通常攻撃後処理関数(連撃数)

IF 戦闘行動キャラ < 10
	戦闘中カウント:戦闘行動キャラ:通常攻撃回数 += 連撃数
	戦闘中カウント:戦闘行動キャラ:与ダメ合計 += 総ダメージ量
ENDIF
アビ汎用変数:クリティカル率計算値保存 = -1
アビ汎用変数:クリティカルダメージ計算値保存 = -1

CALL 全滅チェック

RETURN 総ダメージ量

