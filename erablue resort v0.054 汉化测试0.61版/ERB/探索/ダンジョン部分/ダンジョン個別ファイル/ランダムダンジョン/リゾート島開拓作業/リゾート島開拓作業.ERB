
@ダンジョン初期処理_リゾート島開拓作業
;ダンジョン構造の読み込み
;0でない時、そのマスは存在する
;
#DIM 深度
#DIM 分岐
#DIMS 接続先配列,2

VARSET ダンジョン構造配列_リゾート島開拓作業
VARSET 分割ブロックリスト
VARSET ランダムダンジョン配列
VARSET ダンジョン内一時変数
ランダムダンジョン中フラグ = 1
ダンジョン階層記録 += 1
CALL 穴掘り方式()
CALL 部屋タイプ割り当て_リゾート島開拓作業

ダンジョンサブタイトル = NEVER ENDING DEVELOPMENT
ダンジョンマス画像URL_伏せ状態 = 壁_森
ダンジョン現在位置:0 = ランダムダンジョン初期位置:0
ダンジョン現在位置:1 = ランダムダンジョン初期位置:1
ダンジョン背景画像 = 背景_森

;スタート地点は必ず存在
;初期からオープン済みなので3を入れる
;ビット0：存在するか　ビット1：移動できるか　ビット2：そこから通路を伸ばすか　ビット3：入れないが表示する場合に使用
;ビット4以降：自由枠フラグ

IF GETVAR(@"ダンジョン構造配列_%ダンジョン名%:{ランダムダンジョン初期位置:0}:{ランダムダンジョン初期位置:1}") == 0
	SETVAR @"ダンジョン構造配列_%ダンジョン名%:{ランダムダンジョン初期位置:0}:{ランダムダンジョン初期位置:1}", 3
ENDIF


FOR 深度, 1, 100
	LOCAL = 0
	FOR 分岐, 0, 9
		IF ダンジョン構造配列_リゾート島開拓作業:深度:分岐
			;既にマス情報が入ってるなら飛ばす
			LOCAL = 1
			CONTINUE
		ELSEIF ENUMFUNCBEGINSWITH(@"ダンジョンマス情報_リゾート島開拓作業_{深度}_{分岐}")
			LOCAL = 1
			ダンジョン構造配列_リゾート島開拓作業:深度:分岐 = 1
		ENDIF
	NEXT
	IF LOCAL
		ダンジョン最大深度 = 深度
	ENDIF
NEXT

@ダンジョン解説文_リゾート島開拓作業

詳細文文字列受け渡し変数 = 
詳細文文字列受け渡し変数 += "度假岛未开拓区域压制与开拓用迷宫。<br>"
詳細文文字列受け渡し変数 += "自然之力强盛，若单次探索未能击败首领则需重头再来。<br>"
詳細文文字列受け渡し変数 += "但若成功击败首领，下次可从后续阶层开始，并能获得建造大型设施的土地。<br>"
詳細文文字列受け渡し変数 += "每次进入场景结构都会变化。<br>"
詳細文文字列受け渡し変数 += "每提升一个阶层敌人都会强化。（大致适配等级=层级数）<br>"

ランダムダンジョンフラグ = 1

;推奨レベルを返す
;いずれはクリアレベルをクリアボス階層に合わせるが今は１０Fのみ
IF 開拓エリア解放フラグ:0
	RETURN 11
ELSE
	RETURN 1
ENDIF

@ダンジョン突入時特殊処理_リゾート島開拓作業
CALL ダンジョン解説文_リゾート島開拓作業
PRINTFORML ■度假岛开拓作业　　推荐等级：1～
PRINTL
HTML_PRINT 詳細文文字列受け渡し変数
PRINTL
PRINTL 从第几层开始？
PRINTBUTTON "[0] 第１层", 0
PRINTL
;FOR LOCAL, 0, 7
;本来は80階まであるが、まだボス作ってないのでとりあえず20階まで
FOR LOCAL, 0, 1
	IF 開拓エリア解放フラグ:LOCAL
		PRINTBUTTON @"[{LOCAL * 10 + 10}] 第%TOFULL(TOSTR(LOCAL * 10 + 11))%层", LOCAL * 10 + 10
		PRINTL
	ENDIF
NEXT
PRINTL
PRINTBUTTON "[999] 返回", 999
PRINTL
BINPUT
SELECTCASE RESULT
	CASE 999
		RETURN -1
	CASEELSE
		ダンジョン階層記録 = RESULT
		CALL DUNGEON_MAIN_LOOP("リゾート島開拓作業")
ENDSELECT

@敵討伐後処理_ダンジョン固有_リゾート島開拓作業(討伐エネミー数)
;ダンジョン内で戦闘した後に呼ばれる関数、主にダンジョンごとのドロップアイテム取得に使用
;まだ敵データはリセットしていないので敵BATTLE_STATEで色々情報は取得可能
#DIM 討伐エネミー数
#DIM ドロップ確率
#DIMS ドロップアイテム

ドロップ確率 = 5 * 討伐エネミー数
ドロップアイテム = 星晶碎片
CALL ドロップ判定処理(ドロップ確率, ドロップアイテム)

ドロップ確率 = 1 * 討伐エネミー数
ドロップアイテム = 赤铜古纹
CALL ドロップ判定処理(ドロップ確率, ドロップアイテム)

;----------
;部屋の内容を割り当てる
;----------
@部屋タイプ割り当て_リゾート島開拓作業
#DIM ランダムイベ数
#DIM キャライベ数
#DIMS ランダムイベ名
#DIM 対象キャラ
;部屋の属性を調べて対応する条件の部屋からランダムに割り当てる
;ランダムダンジョン配列:深度:分岐:イベント名 = イベントの名前
#DIM 深度
#DIM 分岐

;固有イベントをチェック
VARSET RESULTS
VARSET LOCALS
LOCAL:1 = 0
キャライベ数 = ENUMFUNCBEGINSWITH("イベント_リゾート島開拓作業_キャラ依頼_")
FOR LOCAL, 0, キャライベ数
	;依頼のキャラを引っ張ってくる
	対象キャラ = TOINT(SUBSTRING(RESULTS:LOCAL, 33))
	SIF 対象キャラ < 1
		CONTINUE
	;キャラが島にいないとダメ
	SIF CFLAG:対象キャラ:滞在期間 < 0
		CONTINUE
	;キャラがPTメンバーにいるとダメ
	SIF GROUPMATCH(対象キャラ, BATTLE_STATE:0:キャラ登録番号, BATTLE_STATE:1:キャラ登録番号, BATTLE_STATE:2:キャラ登録番号, BATTLE_STATE:3:キャラ登録番号, BATTLE_STATE:10:キャラ登録番号, BATTLE_STATE:11:キャラ登録番号, BATTLE_STATE:12:キャラ登録番号, BATTLE_STATE:13:キャラ登録番号)
		CONTINUE
	LOCALS:(LOCAL:1) = %RESULTS:LOCAL%
	LOCAL:1 += 1
NEXT
キャライベ数 = LOCAL:1

;最初に次のエリアに行くマスを確保
DO
	深度 = RAND:10
	分岐 = RAND:10
	IF ランダムダンジョン配列:深度:分岐:イベント状態 != ""
		SIF 深度 == ランダムダンジョン初期位置:0 && 分岐 == ランダムダンジョン初期位置:1
			CONTINUE
		IF ダンジョン階層記録 % 10 != 0
			ランダムダンジョン配列:深度:分岐:イベント名 = 次階層
			ランダムダンジョン配列:深度:分岐:マス画像名 = 次階層
		ELSE
			ランダムダンジョン配列:深度:分岐:イベント名 = ボスマス
			ランダムダンジョン配列:深度:分岐:マス画像名 = ボスマス
		ENDIF
		BREAK
	ENDIF
LOOP 1

VARSET RESULTS
ランダムイベ数 = ENUMFUNCBEGINSWITH("イベント_リゾート島開拓作業_ランダム_")
FOR 深度, 0, 10
	FOR 分岐, 0, 10
		SIF ランダムダンジョン配列:深度:分岐:イベント状態 == ""
			CONTINUE
		SIF ランダムダンジョン配列:深度:分岐:イベント名 != ""
			CONTINUE
		IF 深度 == ランダムダンジョン初期位置:0 && 分岐 == ランダムダンジョン初期位置:1
			;初期位置
			ランダムダンジョン配列:深度:分岐:イベント名 = 初期マス
		ELSE
			;イベントがあるのは2/3のマス
			IF RAND:3 == 0
				ランダムダンジョン配列:深度:分岐:イベント名 = 何もなし
				CONTINUE
			ENDIF
			;戦闘は残り1/3
			IF RAND:3 == 0
				ランダムダンジョン配列:深度:分岐:イベント名 = 雑魚敵
				ランダムダンジョン配列:深度:分岐:マス画像名 = 雑魚敵
				CONTINUE
			ENDIF
			;エッチイベは残り1/5
			IF RAND:5 == 0
				ランダムダンジョン配列:深度:分岐:イベント名 = えっちイベ
				ランダムダンジョン配列:深度:分岐:マス画像名 = えっちイベ
				CONTINUE
			ENDIF
			;残りは汎用イベ
			ランダムイベ名 = %RESULTS:(RAND:ランダムイベ数)%
			ランダムダンジョン配列:深度:分岐:イベント名 = %REPLACE(ランダムイベ名, "イベント_リゾート島開拓作業_", "")%
			IF STRFIND(ランダムイベ名, "えっちイベ") > -1
				ランダムダンジョン配列:深度:分岐:マス画像名 = えっちイベ
			ELSE
				ランダムダンジョン配列:深度:分岐:マス画像名 = イベント
			ENDIF
		ENDIF
	NEXT
NEXT


;----------
;マスタイプ
;----------
@マスタイプ_リゾート島開拓作業(深度,分岐)
#DIM 深度
#DIM 分岐
SELECTCASE ランダムダンジョン配列:深度:分岐:マス画像名
	;マスタイプで分岐
	CASE IS == "イベント"
		ダンジョンマス画像URL = 床_草原
		IF ランダムダンジョン配列:深度:分岐:イベント状態 != "イベント完了"
			ダンジョンマス画像URL_重ね表示 = 会話アイコン
		ENDIF
	CASE IS == "次階層"
		ダンジョンマス画像URL = 床_草原
		ダンジョンマス画像URL_重ね表示 = 右アイコン
	CASE IS == "ボスマス"
		ダンジョンマス画像URL = 床_草原
		ダンジョンマス画像URL_重ね表示 = エネミーアイコン_赤
	CASE IS == "雑魚敵"
		ダンジョンマス画像URL = 床_草原
		IF ランダムダンジョン配列:深度:分岐:イベント状態 != "雑魚敵討伐完了"
			ダンジョンマス画像URL_重ね表示 = エネミーアイコン
		ENDIF
	CASE IS == "えっちイベ"
		ダンジョンマス画像URL = 床_草原
		IF ランダムダンジョン配列:深度:分岐:イベント状態 != "えっちイベ完了"
			ダンジョンマス画像URL_重ね表示 = えっちハート
		ENDIF
	CASE IS == "宝箱"
		ダンジョンマス画像URL = 床_草原
		IF ランダムダンジョン配列:深度:分岐:イベント状態 != "宝箱取得済み"
			ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
		ELSE
			ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱
		ENDIF
	CASE IS == ""
		ダンジョンマス画像URL = 床_草原
	CASEELSE
		ダンジョンマス画像URL = 床_草原
ENDSELECT



;----------
;イベント内容
;----------
@イベント_リゾート島開拓作業_初期マス
CALL 口上変数初期化
IF 初来訪マス判定用フラグ == 0
	KSTR:(K++) = 通过环岛探索推进开拓进度。
	CALL メッセージ欄表示用関数(,,,0)
ELSE
	;最初に訪れた時
	KSTR:(K++) = 抵达未开拓区域。
	KSTR:(K++) = 请保持警戒前进。
	CALL メッセージ欄表示用関数()
	CALL 接続ルート全開放処理((ダンジョン現在位置:0), (ダンジョン現在位置:1))
	CALL 口上変数初期化
ENDIF
CALL 画面再描画

@イベント_リゾート島開拓作業_次階層
CALL 接続ルート全開放処理((ダンジョン現在位置:0), (ダンジョン現在位置:1))
CALL 画面再描画
CALL 口上変数初期化
WSTR:(K++) = 从此处可前往下一阶层。
KSTR:(K++) = 要前进吗？（无法返回当前阶层）
KSTR:(K++) = BUTTON_[确定]
KSTR:(K++) = BUTTON_[取消]
CALL メッセージ欄表示用関数(,,,0)
CALL 口上変数初期化
$LOOP_MESSAGE
BINPUTS
SELECTCASE RESULTS
	CASE "[确定]"
		KSTR:(K++) = %CALLNAME:PLAYER%一行向下一阶层进发…
		CALL メッセージ欄表示用関数()
		;次階層生成
		CALL ダンジョン初期処理_リゾート島開拓作業
		CALL 踏破マス開放処理
		CALL 接続ルート全開放処理((ダンジョン現在位置:0), (ダンジョン現在位置:1))
	CASE "[取消]"
		KSTR:(K++) = 再继续探索当前阶层吧。
		CALL メッセージ欄表示用関数()
	CASEELSE
		CLEARLINE 1
		REUSELASTLINE  
		GOTO LOOP_MESSAGE
ENDSELECT


@イベント_リゾート島開拓作業_ボスマス
CALL 接続ルート全開放処理((ダンジョン現在位置:0), (ダンジョン現在位置:1))
CALL 画面再描画
CALL 口上変数初期化
WSTR:(K++) = 感受到周遭存在强大魔物的气息！！
KSTR:(K++) = 要前进吗？（触发BOSS战，击败后脱离迷宫）
KSTR:(K++) = BUTTON_[确定]
KSTR:(K++) = BUTTON_[取消]
CALL メッセージ欄表示用関数(,,,0)
CALL 口上変数初期化
$LOOP_MESSAGE2
BINPUTS
SELECTCASE RESULTS
	CASE "[确定]"
		WSTR:(K++) = %CALLNAME:PLAYER%一行整备完毕，向强敌发起挑战！
		CALL メッセージ欄表示用関数(,,,0)
		
		CALL ランダムボスセット関数(2, ダンジョン階層記録)
		SIF ランダムダンジョン中加護 != ""
			戦闘時_特殊処理フラグ '= ランダムダンジョン中加護
		CALL 雑魚敵遭遇汎用処理
		IF RESULT == 0
			;勝利時
			CALL 口上変数初期化
			WSTR:(K++) = %CALLNAME:PLAYER%一行成功讨伐了强敌！
			LOCAL = MAX(0, ダンジョン階層記録 / 10 - 1)
			IF 開拓エリア解放フラグ:LOCAL == 0
				WSTR:(K++) = 现在可以改造新区域了！
				開拓エリア解放フラグ:LOCAL = 1
			ELSE
				IF ダンジョン階層記録 < 30
					WSTR:(K++) = 重新探索了一片已经开发的区域，得到了５个赤铜古纹。
					CALL 素材入手処理("赤铜古纹", 5)
				ELSEIF ダンジョン階層記録 < 60
					WSTR:(K++) = 重新探索了一片已经开发的区域，得到了５个白银古纹。
					CALL 素材入手処理("白银古纹", 5)
				ELSE
					WSTR:(K++) = 重新探索了一片已经开发的区域，得到了５个黄金古纹。
					CALL 素材入手処理("黄金古纹", 5)
				ENDIF
			ENDIF
			CALL メッセージ欄表示用関数(,,,0)
			;帰還処理
			ダンジョンクリアフラグ_リゾート島開拓作業 = 1
			CALL 口上変数初期化
			ダンジョン終了状況 = 踏破達成
		ELSEIF RESULT == -1
			;逃走時
			CALL 口上変数初期化
		ENDIF
	CASE "[取消]"
		KSTR:(K++) = 再继续探索当前阶层吧。
		CALL メッセージ欄表示用関数()
	CASEELSE
		CLEARLINE 1
		REUSELASTLINE  
		GOTO LOOP_MESSAGE2
ENDSELECT
CALL 画面再描画



@イベント_リゾート島開拓作業_何もなし
CALL 口上変数初期化
IF 初来訪マス判定用フラグ == 0
	KSTR:(K++) = 周围没有异常状况。
	CALL メッセージ欄表示用関数(,,,0)
ELSE
	;最初に訪れた時
	KSTR:(K++) = 此区域未发现异常状况。
	KSTR:(K++) = 继续前进吧。
	CALL メッセージ欄表示用関数()
	CALL 接続ルート全開放処理((ダンジョン現在位置:0), (ダンジョン現在位置:1))
	CALL 口上変数初期化
ENDIF
CALL 画面再描画

@イベント_リゾート島開拓作業_雑魚敵
CALL 口上変数初期化
IF ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):イベント状態 == "雑魚敵討伐完了"
	KSTR:(K++) = 周围没有异常状况。
	CALL メッセージ欄表示用関数(,,,0)
ELSE
	;最初に訪れた時
	KSTR:(K++) = 在前进的道路上，魔物们挡住了去路！
	CALL メッセージ欄表示用関数()
	
	CALL ランダムエネミーセット関数(4, ダンジョン階層記録)
	SIF ランダムダンジョン中加護 != ""
		戦闘時_特殊処理フラグ '= ランダムダンジョン中加護
	CALL 雑魚敵遭遇汎用処理
	IF RESULT == 0
		CALL 接続ルート全開放処理((ダンジョン現在位置:0), (ダンジョン現在位置:1))
		ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):イベント状態 = 雑魚敵討伐完了
	ENDIF
ENDIF
CALL 画面再描画

@イベント_リゾート島開拓作業_えっちイベ
CALL 口上変数初期化
IF ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):イベント状態 == "えっちイベ完了"
	KSTR:(K++) = 周围没有异常状况。
	CALL メッセージ欄表示用関数(,,,0)
ELSE
	;最初に訪れた時
	CALL ダンジョンハプニング基本処理()
	IF RESULT
		ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):イベント状態 = えっちイベ完了
	ENDIF
	CALL 接続ルート全開放処理((ダンジョン現在位置:0), (ダンジョン現在位置:1))
	CALL 口上変数初期化
ENDIF
CALL 画面再描画
