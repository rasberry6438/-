ランダムダンジョン構造配列生成処理のブロック生成～ブロック内部屋生成に相当します。
ダンジョンの雰囲気とか、階層ごとランダムとかで割り振る想定。


@穴掘り方式(サイズ = 8, 採掘回数基準値 = 0, 部屋多さ = 20, 最大部屋作成数 = 20, 採掘ロジック幅深さ = -1, 採掘ロジック関数 = -1, 採掘方角決定ロジック = 0, 通路長さ固定フラグ = -1, 生成リトライ回数 = 3)

マップの幅、通路長さ、分岐の多さ、マップ全体での部屋数の制限（最小値保障にも使用）。これ以降はダンジョン形の傾向が変わる、掘り方のオプションです。
”よくわからんがいい感じに頼む”を目標にオプションの初期値はランダム要素多め。


・採掘オプションたち、-1でランダム。
採掘ロジック幅深さ = 0,序盤に分岐が多め, 1,終盤まで分岐がある。
採掘ロジック関数 = 1,さらに深さ優先のダンジョンができる。
採掘方角決定ロジック = 1,掘り進むときに後退しない、作ってみたが扱いが難しい…。
通路長さ固定フラグ = 0,確率で採掘回数が変わります 1,固定にします。
生成リトライ回数 = 3,最大部屋作成数の1/4未満の時、ダンジョン生成をやり直せます。そのリトライ上限回数。

通路の長さでなく採掘回数で制御しているので、オプション単体だと実際の通路の長さは変動があります。
採掘方角決定ロジック = 1,通路長さ固定フラグ = 1,でかなり制限できますが、制限することはダンジョン成長がうまくいかない可能性を高めることになります。


CALL ブロック生成(8)
CALL ブロック内部屋生成(20)
↓
CALL 穴掘り方式()


採掘マップイメージ

最初は0
■■■■■■
■■■■■■
■■■■■■
■■■■■■
■■■■■■
■■■■■■

掘れるマスを与えて
■■■■■■
■□□□□■
■□□□□■
■□□□□■
■□□□□■
■■■■■■

初期位置を決める
■■■■■■
■□□□□■
■□□□□■
■□□☆□■
■□□□□■
■■■■■■

掘り進んで部屋を置く
■■■■■■
■□★■□■
■□□■□■
■□□☆□■
■□□□□■
■■■■■■

＊繰り返し
■■■■■■
■□★■□■
■□■■□■
■★■☆□■
■□□□□■
■■■■■■



ベースを穴掘り方式1.2にした

ARRAYSHIFTを使うため部屋リストを分割して一次元配列にした。
（採掘順を入れ替えることで深さ優先で掘る）

ランダムダンジョン配列の初期化処理を生成関数の中に取り込んだ。リトライ処理で利用するため。
VARSET ランダムダンジョン配列

うまく成長できなかったダンジョンを破棄してリトライする機能
	IF 生成部屋数が最大部屋数の1/4行っていない



