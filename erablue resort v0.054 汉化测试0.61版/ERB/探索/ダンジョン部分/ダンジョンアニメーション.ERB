
@ダンジョン突入アニメ
#DIM CONST レイヤー番号 = 50
#DIM CONST 画像位置 = 22, 248
#DIM CONST 文字位置 = 22, 350
;#DIM CONST 画像位置キャラ0 = 542, 216
;#DIM CONST 画像位置キャラ1 = 542, 342
;#DIM CONST 画像位置キャラ2 = 542, 469
;#DIM CONST 画像位置キャラ3 = 542, 596
#DIM CONST 画像位置キャラ0 = 552, 226
#DIM CONST 画像位置キャラ1 = 552, 352
#DIM CONST 画像位置キャラ2 = 552, 479
#DIM CONST 画像位置キャラ3 = 552, 606

GDISPOSE レイヤー番号 + 15
CALL GCREATE_拡張子(レイヤー番号 + 15 , "ダンジョン背景/" + ダンジョン背景画像)
;背景を保管
GDISPOSE レイヤー番号 + 16 
GCREATE レイヤー番号 + 16 , 1600, 900
GSETBRUSH レイヤー番号 + 16 , 0xFF101010
GFILLRECTANGLE レイヤー番号 + 16 , 0, 0, 1600, 900
GDRAWG レイヤー番号 + 16 , レイヤー番号 + 15 , 画像位置:0, 画像位置:1, GWIDTH(レイヤー番号 + 15 ), GHEIGHT(レイヤー番号 + 15 ) - 20, 0, 0, GWIDTH(レイヤー番号 + 15 ), GHEIGHT(レイヤー番号 + 15 ) - 20
;背景フェードイン
FOR LOCAL, 0, 5
CBGREMOVERANGE -1, -1
GDISPOSE レイヤー番号 + 1 
GCREATE レイヤー番号 + 1 , 1600, 900
CALL カットイン用カラーマトリクス取得(80 - LOCAL * 20)
GDRAWG レイヤー番号 + 1 , レイヤー番号 + 16 , 0, 0, 1600, 900, 0, 0, 1600, 900, カットイン用カラーマトリクス:0:0
CBGSETG レイヤー番号 + 1, 0, 0, -1
AWAIT 1
NEXT

;顔スライド、GID 2000 + LOCAL のリソースを引用する
FOR LOCAL, 0, 35
	GDISPOSE レイヤー番号 + 2 
	GCREATE レイヤー番号 + 2 , 1600, 900
	IF LOCAL > 25
		GDRAWG レイヤー番号 + 2 , 2003, 画像位置キャラ3:0, 画像位置キャラ3:1, GWIDTH(2003) * 100 / 180, GHEIGHT(2003) * 100 / 180, 0, 0, GWIDTH(2003), GHEIGHT(2003)
	ELSEIF LOCAL > 15
		CALL カットイン用カラーマトリクス取得(10 * (25 - LOCAL))
		GDRAWG レイヤー番号 + 2 , 2003, 画像位置キャラ3:0 + 2 * (25 - LOCAL), 画像位置キャラ3:1, GWIDTH(2003) * 100 / 180, GHEIGHT(2003) * 100 / 180, 0, 0, GWIDTH(2003), GHEIGHT(2003), カットイン用カラーマトリクス:0:0
	ENDIF
	IF LOCAL > 20
		GDRAWG レイヤー番号 + 2 , 2002, 画像位置キャラ2:0, 画像位置キャラ2:1, GWIDTH(2002) * 100 / 180, GHEIGHT(2002) * 100 / 180, 0, 0, GWIDTH(2002), GHEIGHT(2002)
	ELSEIF LOCAL > 10
		CALL カットイン用カラーマトリクス取得(10 * (20 - LOCAL))
		GDRAWG レイヤー番号 + 2 , 2002, 画像位置キャラ2:0 + 2 * (20 - LOCAL), 画像位置キャラ2:1, GWIDTH(2002) * 100 / 180, GHEIGHT(2002) * 100 / 180, 0, 0, GWIDTH(2002), GHEIGHT(2002), カットイン用カラーマトリクス:0:0
	ENDIF
	IF LOCAL > 15
		GDRAWG レイヤー番号 + 2 , 2001, 画像位置キャラ1:0, 画像位置キャラ1:1, GWIDTH(2001) * 100 / 180, GHEIGHT(2001) * 100 / 180, 0, 0, GWIDTH(2001), GHEIGHT(2001)
	ELSEIF LOCAL > 5
		CALL カットイン用カラーマトリクス取得(10 * (15 - LOCAL))
		GDRAWG レイヤー番号 + 2 , 2001, 画像位置キャラ1:0 + 2 * (15 - LOCAL), 画像位置キャラ1:1, GWIDTH(2001) * 100 / 180, GHEIGHT(2001) * 100 / 180, 0, 0, GWIDTH(2001), GHEIGHT(2001), カットイン用カラーマトリクス:0:0
	ENDIF
	IF LOCAL > 10
		GDRAWG レイヤー番号 + 2 , 2000, 画像位置キャラ0:0, 画像位置キャラ0:1, GWIDTH(2000) * 100 / 180, GHEIGHT(2000) * 100 / 180, 0, 0, GWIDTH(2000), GHEIGHT(2000)
	ELSE
		CALL カットイン用カラーマトリクス取得(10 * (10 - LOCAL))
		GDRAWG レイヤー番号 + 2 , 2000, 画像位置キャラ0:0 + 2 * (10 - LOCAL), 画像位置キャラ0:1, GWIDTH(2000) * 100 / 180, GHEIGHT(2000) * 100 / 180, 0, 0, GWIDTH(2000), GHEIGHT(2000), カットイン用カラーマトリクス:0:0
	ENDIF
	CBGREMOVERANGE -2, -2
	CBGSETG レイヤー番号 + 2 , 0, 0, -2
	AWAIT 1
NEXT

;テキストレイヤーの作成
GDISPOSE レイヤー番号 + 17 
GCREATE レイヤー番号 + 17 , 1600, 900
GSETBRUSH レイヤー番号 + 17 , 0xFFC0C0C0

{
	;----------------------------攻略目標の表示したい
	;FONT +4 で取消し線
	;メインクエスト
IF GETVAR("ダンジョンクリアフラグ_" + ダンジョン名)
	GSETFONT レイヤー番号 + 17 , GETFONT(), 18, 4
ELSE
	GSETFONT レイヤー番号 + 17 , GETFONT(), 18, 0
ENDIF
GSETPEN レイヤー番号 + 17 , 0xFFF0F0F0, 1
GDRAWTEXT レイヤー番号 + 17 , "メインクエスト：人食い鳥の掃討", 文字位置:0 + 100, 文字位置:1 + 108
	;二行目座標メモ、フォントは個別に指定する
GDRAWTEXT レイヤー番号 + 17 , "サブクエスト：水のエレメント１０体の討伐", 文字位置:0 + 100, 文字位置:1 + 140
}

;今はタイトルだけなのでY座標を下にずらしておく
LOCAL:1 = 50
GSETBRUSH レイヤー番号 + 17 , 0xFFC0C0C0
GSETFONT レイヤー番号 + 17 , GETFONT(), 90, 3
GSETPEN レイヤー番号 + 17 , 0xFF101010, 1
GDRAWTEXT レイヤー番号 + 17 , ダンジョン名, 文字位置:0, 文字位置:1 + LOCAL:1
GSETPEN レイヤー番号 + 17 , 0xFFC0C0C0, 1
GDRAWLINE レイヤー番号 + 17 ,  文字位置:0, 文字位置:1 + 90 + LOCAL:1, 900, 文字位置:1 + 90 + LOCAL:1
GSETFONT レイヤー番号 + 17 , GETFONT(), 18, 1
GSETPEN レイヤー番号 + 17 , 0x7F101010, 0 
GGETTEXTSIZE ダンジョンサブタイトル, GETFONT(), 18
GDRAWTEXT レイヤー番号 + 17 , ダンジョンサブタイトル, 830 - RESULT, 文字位置:1 + 90 + 4 + LOCAL:1
;テキストレイヤーフェードイン
FOR LOCAL, 0, 5
	GDISPOSE レイヤー番号 + 3 
	GCREATE レイヤー番号 + 3 , 1600, 900
	CALL カットイン用カラーマトリクス取得(50 - LOCAL * 10)
	GDRAWG レイヤー番号 + 3 , レイヤー番号 + 17 , 0 + 4 * (5 - LOCAL), 0, 1600, 900, 0, 0, 1600, 900, カットイン用カラーマトリクス:0:0
	CBGSETG レイヤー番号 + 3 , 0, 0, -3
	AWAIT 1
NEXT

;フェードアウト用に全要素を統合したグラフィックを用意する
GDISPOSE レイヤー番号 + 0 
GCREATE レイヤー番号 + 0 , 1600, 900
GDRAWG レイヤー番号 + 0 , レイヤー番号 + 16 , 0, 0, 1600, 900, 0, 0, 1600, 900
GDRAWG レイヤー番号 + 0 , レイヤー番号 + 2 , 0, 0, 1600, 900, 0, 0, 1600, 900
GDRAWG レイヤー番号 + 0 , レイヤー番号 + 17 , 0, 0, 1600, 900, 0, 0, 1600, 900


;裏で画像切り替えをする
CALL 画面再描画

AWAIT 400

;統合前画像を削除
CBGREMOVERANGE -3, -1
;統合画像をフェードアウトさせる
FOR LOCAL, 0, 5
	CBGREMOVERANGE -1, -1
	GDISPOSE レイヤー番号 + 1
	GCREATE レイヤー番号 + 1 , 1600, 900
	CALL カットイン用カラーマトリクス取得(LOCAL * 20)
	GDRAWG レイヤー番号 + 1 , レイヤー番号 + 0 , 0, 0, 1600, 900, 0, 0, 1600, 900, カットイン用カラーマトリクス:0:0
	CBGSETG レイヤー番号 + 1 , 0, 0, -1
	AWAIT 1
NEXT

;リソースの解放
CBGREMOVERANGE -1, -1
GDISPOSE レイヤー番号 + 0 
GDISPOSE レイヤー番号 + 1 
GDISPOSE レイヤー番号 + 2 
GDISPOSE レイヤー番号 + 3 
GDISPOSE レイヤー番号 + 15 
GDISPOSE レイヤー番号 + 16 
GDISPOSE レイヤー番号 + 17 


@リザルト画面
#DIM CONST レイヤー番号 = 50
#DIM 画像位置キャラ, 4, 2
#DIM 入力アイコンID
#DIM キャラ番号
#DIM 画像候補数
#DIM パーティ人数
#DIMS ダンジョン終了タイトル
#DIMS 拡大表示グラ文字列
#DIMS キャラ別メッセージ,4 
#DIM 表示済み文字数

パーティ人数 = 4
FOR LOCAL, 0, 4
	IF BATTLE_STATE:LOCAL:キャラ登録番号 < 1
		パーティ人数 = LOCAL
		BREAK
	ENDIF
NEXT
画像位置キャラ:0:0 = 552, 226
画像位置キャラ:1:0 = 552, 352
画像位置キャラ:2:0 = 552, 479
画像位置キャラ:3:0 = 552, 606

;状況別変数の格納と、口上の回収
SELECTCASE ダンジョン終了状況
	CASE "討伐達成"
		FOR LOCAL, 0, パーティ人数
			キャラ番号 = BATTLE_STATE:LOCAL:キャラ登録番号
			CALL 口上変数初期化
			TRYCALLFORM KOJO_DUNGEON_%ダンジョン終了状況%リザルト_{NO:キャラ番号}(キャラ番号)
			キャラ別メッセージ:LOCAL '= KSTR:0
		NEXT
		拡大表示グラ文字列 '= "/ダンジョン_討伐達成"
		ダンジョン終了タイトル '= "ダンジョン攻略達成"
	CASE "踏破達成"
		FOR LOCAL, 0, パーティ人数
			キャラ番号 = BATTLE_STATE:LOCAL:キャラ登録番号
			CALL 口上変数初期化
			TRYCALLFORM KOJO_DUNGEON_%ダンジョン終了状況%リザルト_{NO:キャラ番号}(キャラ番号)
			キャラ別メッセージ:LOCAL '= KSTR:0
		NEXT
		拡大表示グラ文字列 '= "/ダンジョン_踏破達成"
		ダンジョン終了タイトル '= "ダンジョンを踏破しました"
	CASE "撤退"
		FOR LOCAL, 0, パーティ人数
			キャラ番号 = BATTLE_STATE:LOCAL:キャラ登録番号
			CALL 口上変数初期化
			TRYCALLFORM KOJO_DUNGEON_%ダンジョン終了状況%リザルト_{NO:キャラ番号}(キャラ番号)
			キャラ別メッセージ:LOCAL '= KSTR:0
		NEXT
		拡大表示グラ文字列 '= "/ダンジョン_撤退"
		ダンジョン終了タイトル '= "ダンジョンから帰還します"
	CASE "全滅"
		FOR LOCAL, 0, パーティ人数
			キャラ番号 = BATTLE_STATE:LOCAL:キャラ登録番号
			CALL 口上変数初期化
			TRYCALLFORM KOJO_DUNGEON_%ダンジョン終了状況%リザルト_{NO:キャラ番号}(キャラ番号)
			キャラ別メッセージ:LOCAL '= KSTR:0
		NEXT
		拡大表示グラ文字列 '= "/ダンジョン_全滅"
		ダンジョン終了タイトル '= "全滅しました・・・"
	CASE "エロトラップで追い出された"
		FOR LOCAL, 0, パーティ人数
			キャラ番号 = BATTLE_STATE:LOCAL:キャラ登録番号
			CALL 口上変数初期化
			TRYCALLFORM KOJO_DUNGEON_%ダンジョン終了状況%リザルト_{NO:キャラ番号}(キャラ番号)
			キャラ別メッセージ:LOCAL '= KSTR:0
		NEXT
		拡大表示グラ文字列 '= ""
		ダンジョン終了タイトル '= ""
ENDSELECT
GDISPOSE レイヤー番号 + 16 
GCREATE レイヤー番号 + 16 , 1600, 900
GSETBRUSH レイヤー番号 + 16 , 0xFF101010
GFILLRECTANGLE レイヤー番号 + 16 , 0, 0, 1600, 900

GDISPOSE レイヤー番号 + 17 
GCREATE レイヤー番号 + 17 , 1600, 900
GSETBRUSH レイヤー番号 + 17 , 0xFF101010
GFILLRECTANGLE レイヤー番号 + 17 , 画像位置キャラ:0:0, 画像位置キャラ:0:1, 100, 100
GFILLRECTANGLE レイヤー番号 + 17 , 画像位置キャラ:1:0, 画像位置キャラ:1:1, 100, 100
GFILLRECTANGLE レイヤー番号 + 17 , 画像位置キャラ:2:0, 画像位置キャラ:2:1, 100, 100
GFILLRECTANGLE レイヤー番号 + 17 , 画像位置キャラ:3:0, 画像位置キャラ:3:1, 100, 100
CBGSETG レイヤー番号 + 17 , 0, 0, -1

;キャラ画像を被せてから再描画する
CBGREMOVERANGE -2, -2
GDISPOSE レイヤー番号 + 2 
GCREATE レイヤー番号 + 2 , 1600, 900
GDRAWG レイヤー番号 + 2 , 2003 , 画像位置キャラ:3:0, 画像位置キャラ:3:1, GWIDTH(2003 ) * 100  / 180, GHEIGHT(2003 ) * 100  / 180, 0, 0, GWIDTH(2003 ), GHEIGHT(2003 )
GDRAWG レイヤー番号 + 2 , 2002 , 画像位置キャラ:2:0, 画像位置キャラ:2:1, GWIDTH(2002 ) * 100  / 180, GHEIGHT(2002 ) * 100  / 180, 0, 0, GWIDTH(2002 ), GHEIGHT(2002 )
GDRAWG レイヤー番号 + 2 , 2001 , 画像位置キャラ:1:0, 画像位置キャラ:1:1, GWIDTH(2001 ) * 100  / 180, GHEIGHT(2001 ) * 100  / 180, 0, 0, GWIDTH(2001 ), GHEIGHT(2001 )
GDRAWG レイヤー番号 + 2 , 2000 , 画像位置キャラ:0:0, 画像位置キャラ:0:1, GWIDTH(2000 ) * 100  / 180, GHEIGHT(2000 ) * 100  / 180, 0, 0, GWIDTH(2000 ), GHEIGHT(2000 )
CBGSETG レイヤー番号 + 2 , 0, 0, -2

CALL 画面再描画

FOR LOCAL, 0, 10
	AWAIT 1
	CBGREMOVERANGE -2, -2
	GDISPOSE レイヤー番号 + 2 
	GCREATE レイヤー番号 + 2 , 1600, 900
	CALL カットイン用カラーマトリクス取得(LOCAL * 10)
	GDRAWG レイヤー番号 + 2 , 2003 , 画像位置キャラ:3:0 + LOCAL * 2, 画像位置キャラ:3:1, GWIDTH(2003 ) * 100 / 180, GHEIGHT(2003 ) * 100 / 180, 0, 0, GWIDTH(2003 ), GHEIGHT(2003 ), カットイン用カラーマトリクス:0:0
	GDRAWG レイヤー番号 + 2 , 2002 , 画像位置キャラ:2:0 + LOCAL * 2, 画像位置キャラ:2:1, GWIDTH(2002 ) * 100 / 180, GHEIGHT(2002 ) * 100 / 180, 0, 0, GWIDTH(2002 ), GHEIGHT(2002 ), カットイン用カラーマトリクス:0:0
	GDRAWG レイヤー番号 + 2 , 2001 , 画像位置キャラ:1:0 + LOCAL * 2, 画像位置キャラ:1:1, GWIDTH(2001 ) * 100 / 180, GHEIGHT(2001 ) * 100 / 180, 0, 0, GWIDTH(2001 ), GHEIGHT(2001 ), カットイン用カラーマトリクス:0:0
	GDRAWG レイヤー番号 + 2 , 2000 , 画像位置キャラ:0:0 + LOCAL * 2, 画像位置キャラ:0:1, GWIDTH(2000 ) * 100 / 180, GHEIGHT(2000 ) * 100 / 180, 0, 0, GWIDTH(2000 ), GHEIGHT(2000 ), カットイン用カラーマトリクス:0:0
	CBGSETG レイヤー番号 + 2 , 0, 0, -2
NEXT
AWAIT 1
CBGREMOVERANGE -2, -2

;再表示する位置をセット
画像位置キャラ:0:0 = 100, 250
画像位置キャラ:1:0 = 100, 500
画像位置キャラ:2:0 = 500, 250
画像位置キャラ:3:0 = 500, 500
FOR LOCAL, 0, 10
	AWAIT 1
	CBGREMOVERANGE -2, -2
	GDISPOSE レイヤー番号 + 2 
	GCREATE レイヤー番号 + 2 , 1600, 900
	CALL カットイン用カラーマトリクス取得(10 * (9 - LOCAL))
	GDRAWG レイヤー番号 + 2 , 2003, 画像位置キャラ:3:0 + 2 * (10 - LOCAL), 画像位置キャラ:3:1, GWIDTH(2003), GHEIGHT(2003), 0, 0, GWIDTH(2003), GHEIGHT(2003), カットイン用カラーマトリクス:0:0
	GDRAWG レイヤー番号 + 2 , 2002, 画像位置キャラ:2:0 + 2 * (10 - LOCAL), 画像位置キャラ:2:1, GWIDTH(2002), GHEIGHT(2002), 0, 0, GWIDTH(2002), GHEIGHT(2002), カットイン用カラーマトリクス:0:0
	GDRAWG レイヤー番号 + 2 , 2001, 画像位置キャラ:1:0 + 2 * (10 - LOCAL), 画像位置キャラ:1:1, GWIDTH(2001), GHEIGHT(2001), 0, 0, GWIDTH(2001), GHEIGHT(2001), カットイン用カラーマトリクス:0:0
	GDRAWG レイヤー番号 + 2 , 2000, 画像位置キャラ:0:0 + 2 * (10 - LOCAL), 画像位置キャラ:0:1, GWIDTH(2000), GHEIGHT(2000), 0, 0, GWIDTH(2000), GHEIGHT(2000), カットイン用カラーマトリクス:0:0
	CBGREMOVERANGE -1, -1
	GDISPOSE レイヤー番号 + 1 
	GCREATE レイヤー番号 + 1 , 1600, 900
	CALL カットイン用カラーマトリクス取得(90 - LOCAL * 4)
	GDRAWG レイヤー番号 + 1 , レイヤー番号 + 16 , 0, 0, 1600, 900, 0, 0, 1600, 900, カットイン用カラーマトリクス:0:0
	CBGSETG レイヤー番号 + 1 , 0, 0, -1
	CBGSETG レイヤー番号 + 2 , 0, 0, -2
	;顔画像位置の塗りつぶし
	CBGSETG レイヤー番号 + 17 , 0, 0, -1
NEXT

;顔と縮小した表示画像をボタンにする
CBGREMOVERANGE -2, -2
FOR LOCAL, 0, パーティ人数
	キャラ番号 = BATTLE_STATE:LOCAL:キャラ登録番号
	SIF CSTR:キャラ番号:画像フォルダ == ""
		CSTR:キャラ番号:画像フォルダ '= GET_RESOURCES_BASE_FOLDER(キャラ番号)
	GDISPOSE レイヤー番号 + 10 + LOCAL  
	GCREATE レイヤー番号 + 10 + LOCAL , 180, 190
	GDISPOSE レイヤー番号 + 20 + LOCAL 
	画像候補数 = ENUMFILES("resources/" + CSTR:キャラ番号:画像フォルダ, REPLACE(拡大表示グラ文字列, "/", "") + "*.*")
	IF 画像候補数 > 1
		拡大表示グラ文字列 '= SUBSTRING(RESULTS:(RAND:画像候補数), STRLENS(CSTR:キャラ番号:画像フォルダ) + 11, -1)
		拡大表示グラ文字列 '= REPLACE(拡大表示グラ文字列, ".webp", "")
		拡大表示グラ文字列 '= REPLACE(拡大表示グラ文字列, ".png", "")
		拡大表示グラ文字列 '= "/" + 拡大表示グラ文字列
	ENDIF
	CALL GCREATE_拡張子(レイヤー番号 + 20 + LOCAL, CSTR:キャラ番号:画像フォルダ + 拡大表示グラ文字列)
	IF RESULT
		IF GWIDTH(レイヤー番号 + 20 + LOCAL) > GHEIGHT(レイヤー番号 + 20 + LOCAL)
			GDRAWG レイヤー番号 + 10 + LOCAL , レイヤー番号 + 20 + LOCAL , 0, 0, 180, 180, 0, 0, GHEIGHT(レイヤー番号 + 20 + LOCAL), GHEIGHT(レイヤー番号 + 20 + LOCAL)
		ELSE
			GDRAWG レイヤー番号 + 10 + LOCAL , レイヤー番号 + 20 + LOCAL , 0, 0, 180, 180, 0, 0, GWIDTH(レイヤー番号 + 20 + LOCAL), GWIDTH(レイヤー番号 + 20 + LOCAL)
		ENDIF
		SPRITECREATE "キャラリザルト" + TOSTR(LOCAL) + "0", 2000 + LOCAL
		SPRITECREATE "キャラリザルト" + TOSTR(LOCAL) + "1", レイヤー番号 + 10 + LOCAL
		CBGSETBUTTONSPRITE 0x000000 + 0x100000 * LOCAL, "キャラリザルト" + TOSTR(LOCAL) + "0", "キャラリザルト" + TOSTR(LOCAL) + "1", 画像位置キャラ:LOCAL:0, 画像位置キャラ:LOCAL:1 - 900 + 180, -2
	ELSE
		GDRAWG レイヤー番号 + 10 + LOCAL , 2000 + LOCAL , 0, 0, 180, 180, 0, 0, 180, 180
		SPRITECREATE "キャラリザルト" + TOSTR(LOCAL) + "0", 2000 + LOCAL
		SPRITECREATE "キャラリザルト" + TOSTR(LOCAL) + "1", レイヤー番号 + 10 + LOCAL
		CBGSETBUTTONSPRITE 0x000000 + 0x100000 * LOCAL, "キャラリザルト" + TOSTR(LOCAL) + "0", "キャラリザルト" + TOSTR(LOCAL) + "1", 画像位置キャラ:LOCAL:0, 画像位置キャラ:LOCAL:1 - 900 + 180, -2
	ENDIF
NEXT
;終了ボタン
FOR LOCAL, 0, 2
	GDISPOSE レイヤー番号 + 14 + LOCAL 
	GCREATE レイヤー番号 + 14 + LOCAL , 360, 90
	GSETBRUSH レイヤー番号 + 14 + LOCAL , 0xFFC0C0C0
	GSETFONT レイヤー番号 + 14 + LOCAL , GETFONT(), 36, 0
	GSETPEN レイヤー番号 + 14 + LOCAL , 0x80C0C0C0, 0
	GDRAWTEXT レイヤー番号 + 14 + LOCAL , "終了する", 10, 10 + -(10 * LOCAL)
	GFILLRECTANGLE レイヤー番号 + 14 + LOCAL , 0, 48, 300, 2
	SPRITECREATE "キャラリザルト9" + TOSTR(LOCAL), レイヤー番号 + 14 + LOCAL 
NEXT
CBGSETBUTTONSPRITE 0xF00000, "キャラリザルト90", "キャラリザルト91", 600, -40, -2

;当たり判定
GDISPOSE レイヤー番号 + 9 
GCREATE レイヤー番号 + 9 , 1600, 900
GSETBRUSH レイヤー番号 + 9 , 0xFFFFFFFF
GFILLRECTANGLE レイヤー番号 + 9 , 0, 0, 1600, 900
GSETBRUSH レイヤー番号 + 9 , 0xFFF00000
GFILLRECTANGLE レイヤー番号 + 9 , 600, 770, 360, 60
FOR LOCAL, 0, パーティ人数
	IF キャラ別メッセージ:LOCAL != "" || GCREATED(レイヤー番号 + 20 + LOCAL ) ;口上がある　あるいは　画像がある
		GSETBRUSH レイヤー番号 + 9 , 0xFF000000 + 0x00100000 * LOCAL
		GFILLRECTANGLE レイヤー番号 + 9 , 画像位置キャラ:LOCAL:0, 画像位置キャラ:LOCAL:1, 180, 180
	ENDIF
NEXT
CBGSETBMAPG レイヤー番号 + 9

;文字の表示演出
GDISPOSE レイヤー番号 + 3 
GCREATE レイヤー番号 + 3 , 1600, 900
GSETBRUSH レイヤー番号 + 3 , 0x7F101010
GFILLRECTANGLE レイヤー番号 + 3 , 0, 420, 1600, 140
GSETBRUSH レイヤー番号 + 3 , 0xFFC0C0C0
GSETFONT レイヤー番号 + 3 , GETFONT(), 72, 1
GSETPEN レイヤー番号 + 3 , 0x80101010, 2
GDRAWTEXT レイヤー番号 + 3 , ダンジョン終了タイトル, 60, 450
FOR LOCAL, 0, 5
	AWAIT 1
	CBGREMOVERANGE -3, -3
		GDISPOSE レイヤー番号 + 33 
		GCREATE レイヤー番号 + 33 , 1600, 900
		CALL カットイン用カラーマトリクス取得(80 - LOCAL * 20)
		GDRAWG レイヤー番号 + 33 , レイヤー番号 + 3 , 0 + 4 * (5 - LOCAL), 0, 1600, 900, 0, 0, 1600, 900, カットイン用カラーマトリクス:0:0
	CBGSETG レイヤー番号 + 33 , 0, 0, -3
NEXT
AWAIT 400
FOR LOCAL, 0, 5
	CBGREMOVERANGE -3, -3
		GDISPOSE レイヤー番号 + 33 
		GCREATE レイヤー番号 + 33 , 1600, 900
		CALL カットイン用カラーマトリクス取得(LOCAL * 20)
		GDRAWG レイヤー番号 + 33 , レイヤー番号 + 3 , 0 + -4 * (LOCAL), 0, 1600, 900, 0, 0, 1600, 900, カットイン用カラーマトリクス:0:0
	CBGSETG レイヤー番号 + 33 , 0, 0, -3
	AWAIT 1
NEXT
CBGREMOVERANGE -3, -3


$LOOP
INPUTMOUSEKEY
;入力セレクト　指定の動作以外で終了
入力アイコンID = 99
IF RESULT == 1 && RESULT:1 == 0x100000 ;画面のどこかを左クリック
	SELECTCASE RESULT:4
		CASE 0x000000
			入力アイコンID = 0
		CASE 0x100000
			入力アイコンID = 1
		CASE 0x200000
			入力アイコンID = 2
		CASE 0x300000
			入力アイコンID = 3
		CASE 0xF00000
			入力アイコンID = 15
	ENDSELECT
ELSEIF RESULT == 3 ;キーボード１～４でキャラ画像表示できる
	SELECTCASE RESULT:2
		CASE 49 ;1
			入力アイコンID = 0
		CASE 50 ;2
			入力アイコンID = 1
		CASE 51 ;3
			入力アイコンID = 2
		CASE 52 ;4
			入力アイコンID = 3
		CASEELSE
			GOTO 終了処理
	ENDSELECT
ELSE
		GOTO 終了処理
ENDIF

SELECTCASE 入力アイコンID
	CASE IS < パーティ人数
	CASE 15
		GOTO 終了処理
	CASE IS < 100
		GOTO LOOP
ENDSELECT

;クリックしたときの表示
CBGREMOVERANGE -6, -4
GDISPOSE レイヤー番号 + 4 
GCREATE レイヤー番号 + 4 , 1600, 900
GSETBRUSH レイヤー番号 + 4 , 0x80101010
GFILLRECTANGLE レイヤー番号 + 4 , 0, 0, 1600, 900
GDISPOSE レイヤー番号 + 5 
GCREATE レイヤー番号 + 5 , 1600, 900
GDRAWG レイヤー番号 + 5 , レイヤー番号 + 20  + 入力アイコンID , 40, (900 -  GHEIGHT(レイヤー番号 + 20  + 入力アイコンID )) / 2, GWIDTH(レイヤー番号 + 20  + 入力アイコンID ), GHEIGHT(レイヤー番号 + 20  + 入力アイコンID ), 0, 0, GWIDTH(レイヤー番号 + 20  + 入力アイコンID ), GHEIGHT(レイヤー番号 + 20  + 入力アイコンID )
GDISPOSE レイヤー番号 + 6 
GCREATE レイヤー番号 + 6 , 1600, 900
GSETBRUSH レイヤー番号 + 6 , 0xFFF0F0F0
GSETFONT レイヤー番号 + 6 , GETFONT(), 36, 0
GSETPEN レイヤー番号 + 6 , 0xFFF0F0F0, 0
IF STRFIND(キャラ別メッセージ:入力アイコンID, "_H") >= 0
	;この文章はセリフのはずなので、ハートマークが先頭に来ることはないはず
	;ハートマークがあるなら分割して書き込む
	VARSET RESULTS
	表示済み文字数 = 0
	SPLIT キャラ別メッセージ:入力アイコンID, "_", RESULTS
	FOR LOCAL, 0, RESULT
		IF RESULTS:LOCAL == "H"
			GDRAWSPRITE レイヤー番号 + 6, "えっちハート", GWIDTH(レイヤー番号 + 20  + 入力アイコンID ) + 60 + (表示済み文字数 * 18), 500, 36, 36
			表示済み文字数 += 2
		ELSEIF RESULTS:LOCAL != ""
			GDRAWTEXT レイヤー番号 + 6, RESULTS:LOCAL, GWIDTH(レイヤー番号 + 20  + 入力アイコンID ) + 60 + (表示済み文字数 * 18), 500
			表示済み文字数 += STRLENS(RESULTS:LOCAL)
		ENDIF
	NEXT
ELSE
	GDRAWTEXT レイヤー番号 + 6 , キャラ別メッセージ:入力アイコンID, GWIDTH(レイヤー番号 + 20  + 入力アイコンID ) + 60, 500
ENDIF

CBGSETG レイヤー番号 + 4 , 0, 0, -4
CBGSETG レイヤー番号 + 5 , 0, 0, -5
CBGSETG レイヤー番号 + 6 , 0, 0, -6

WAIT
CBGREMOVERANGE -6, -4
GOTO LOOP


$終了処理

GDISPOSE レイヤー番号 + 7 
GCREATE レイヤー番号 + 7 , 1600, 900
GSETBRUSH レイヤー番号 + 7 , 0xFF101010
GFILLRECTANGLE レイヤー番号 + 7 , 0, 0, 1600, 900
CBGSETG レイヤー番号 + 7, 0, 0, -7
FOR LOCAL, 0, 5
CBGREMOVERANGE -7, -7
GDISPOSE レイヤー番号 + 8 
GCREATE レイヤー番号 + 8 , 1600, 900
CALL カットイン用カラーマトリクス取得(80 - LOCAL * 20)
GDRAWG レイヤー番号 + 8 , レイヤー番号 + 7 , 0, 0, 1600, 900, 0, 0, 1600, 900, カットイン用カラーマトリクス:0:0
CBGSETG レイヤー番号 + 8, 0, 0, -8
AWAIT 1
NEXT

FOR LOCAL, 0 ,50
PRINTL
NEXT
CBGCLEAR

FOR LOCAL, 0, 18
	GDISPOSE レイヤー番号 + LOCAL
NEXT
GDISPOSE レイヤー番号 + 20 
GDISPOSE レイヤー番号 + 21 
GDISPOSE レイヤー番号 + 22 
GDISPOSE レイヤー番号 + 23 
GDISPOSE レイヤー番号 + 33
RETURN
