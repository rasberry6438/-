@編成セット切替()
#DIM 編成番号
#DIM 表示アビ番号
#DIM キャラ順番
#DIM 対象キャラ
#DIM id一時保存

;セット画面に入った時、現在編成を使用しているセットに記録
	;乗機記録
	編成セット記録配列:使用編成セット番号:編成乗機番号 = 装備乗機ID
	IF 装備乗機ID > 0
		FOR 表示アビ番号, 0, 6
			IF DT_CELL_GETS("所持乗機データベース", 装備乗機ID, @"武装{表示アビ番号}", 1) == "不可"
				編成セット記録配列:使用編成セット番号:(2 + 表示アビ番号) = -1
			ELSEIF DT_CELL_GETS("所持乗機データベース", 装備乗機ID, @"武装{表示アビ番号}", 1) == "固有"
				編成セット記録配列:使用編成セット番号:(2 + 表示アビ番号) = -2
			ELSEIF ISNUMERIC(DT_CELL_GETS("所持乗機データベース", 装備乗機ID, @"武装{表示アビ番号}", 1))
				編成セット記録配列:使用編成セット番号:(2 + 表示アビ番号) = TOINT(DT_CELL_GETS("所持乗機データベース", 装備乗機ID, @"武装{表示アビ番号}", 1))
			ELSE
				編成セット記録配列:使用編成セット番号:(2 + 表示アビ番号) = 0
			ENDIF
		NEXT
	ELSE
		編成セット記録配列:使用編成セット番号:編成兵装番号１ = 0
		編成セット記録配列:使用編成セット番号:編成兵装番号２ = 0
		編成セット記録配列:使用編成セット番号:編成兵装番号３ = 0
		編成セット記録配列:使用編成セット番号:編成兵装番号４ = 0
		編成セット記録配列:使用編成セット番号:編成兵装番号５ = 0
		編成セット記録配列:使用編成セット番号:編成兵装番号６ = 0
	ENDIF
	
	;キャラ情報記録
	FOR キャラ順番, 0, 14
		IF キャラ順番 > 3 && キャラ順番 < 10
			CONTINUE
		ENDIF
		編成セット記録配列:使用編成セット番号:(キャラ順番 * 10 + 100) = BATTLE_STATE:キャラ順番:キャラ登録番号
		IF BATTLE_STATE:キャラ順番:キャラ登録番号 > 0
			編成セット記録配列:使用編成セット番号:(キャラ順番 * 10 + 101) = 装備ステータス補正保存:(BATTLE_STATE:キャラ順番:キャラ登録番号):装備指輪番号
			編成セット記録配列:使用編成セット番号:(キャラ順番 * 10 + 102) = 装備ステータス補正保存:(BATTLE_STATE:キャラ順番:キャラ登録番号):装備耳飾り番号
			編成セット記録配列:使用編成セット番号:(キャラ順番 * 10 + 103) = 装備ステータス補正保存:(BATTLE_STATE:キャラ順番:キャラ登録番号):装備証番号
		ELSE
			編成セット記録配列:使用編成セット番号:(キャラ順番 * 10 + 101) = 0
			編成セット記録配列:使用編成セット番号:(キャラ順番 * 10 + 102) = 0
			編成セット記録配列:使用編成セット番号:(キャラ順番 * 10 + 103) = 0
		ENDIF
	NEXT

	;表示編成に現在編成をセット
	編成番号 = 使用編成セット番号

;ループここから
$表示_LOOP

LOCALS = <div rect='200,0,5662,500' border='31' bcolor='#C0C0C0' padding='50,25,50'>
LOCALS += "请选择要切换的编队。<br>"
LOCALS += "<br>"
LOCALS += "　　　　　　　　　　　　　　　　　　　　　　　　　　　　<button value='998'>[998] 复制其他编队</button>　　<button value='999'>[999] 返回</button>"
LOCALS += "</div>"
HTML_PRINT LOCALS, 1
CALL 編成セットボタン表示(編成番号, 200, 450)
FOR LOCAL, 0, 6
	PRINTL
NEXT
DRAWLINE

CALL 編成基礎情報表示(編成番号)
CALL 編成キャラ情報表示(編成番号)
FOR LOCAL, 0, 28
	PRINTL
NEXT
DRAWLINE
BINPUT
SELECTCASE RESULT
	CASE 999
		IF 使用編成セット番号 != 編成番号
			;違うセットになったなら内容をロード
			
			;乗機呼び出し
			装備乗機ID = 編成セット記録配列:編成番号:編成乗機番号
			IF 装備乗機ID > 0
				FOR 表示アビ番号, 0, 6
					IF 編成セット記録配列:編成番号:(2 + 表示アビ番号) == -1
						;不可なのでスキップ
					ELSEIF 編成セット記録配列:編成番号:(2 + 表示アビ番号) == -2
						;固有なのでスキップ
					ELSEIF 編成セット記録配列:編成番号:(2 + 表示アビ番号) == 0
						;未装備をセット
						IF ISNUMERIC(DT_CELL_GETS("所持乗機データベース", 装備乗機ID, @"武装{表示アビ番号}", 1))
							DT_CELL_SET "所持兵器データベース", TOINT(DT_CELL_GETS("所持乗機データベース", 装備乗機ID, @"武装{表示アビ番号}", 1)), "装備乗機id", 0, 1
						ENDIF
						DT_CELL_SET "所持乗機データベース", 装備乗機ID, @"武装{表示アビ番号}", "", 1
					ELSE
						;装備武装をセット
						IF DT_SELECT("所持兵器データベース", @"id = {編成セット記録配列:編成番号:(2 + 表示アビ番号)}")
							;誰かが装備してるんならそれをはずす
							IF DT_CELL_GET("所持兵器データベース", 編成セット記録配列:編成番号:(2 + 表示アビ番号), "装備乗機id", 1) > 0
								id一時保存 = DT_CELL_GET("所持兵器データベース", 編成セット記録配列:編成番号:(2 + 表示アビ番号), "装備乗機id", 1)
								FOR LOCAL, 0, 6
									IF ISNUMERIC(DT_CELL_GETS("所持乗機データベース", id一時保存, @"武装{LOCAL}", 1)) && 編成セット記録配列:編成番号:(2 + 表示アビ番号) == TOINT(DT_CELL_GETS("所持乗機データベース", id一時保存, @"武装{LOCAL}", 1))
										DT_CELL_SET "所持乗機データベース", id一時保存, @"武装{LOCAL}", "", 1
										BREAK
									ENDIF
								NEXT
							ENDIF
							;この枠に何かが装備されてるならそれをはずす
							IF ISNUMERIC(DT_CELL_GETS("所持乗機データベース", 装備乗機ID, @"武装{表示アビ番号}", 1))
								DT_CELL_SET "所持兵器データベース", TOINT(DT_CELL_GETS("所持乗機データベース", 装備乗機ID, @"武装{表示アビ番号}", 1)), "装備乗機id", 0, 1
							ENDIF
							;乗機と兵器両方に互いのidを突っ込む
							DT_CELL_SET "所持兵器データベース", 編成セット記録配列:編成番号:(2 + 表示アビ番号), "装備乗機id", 装備乗機ID, 1
							DT_CELL_SET "所持乗機データベース", 装備乗機ID, @"武装{表示アビ番号}", @"{編成セット記録配列:編成番号:(2 + 表示アビ番号)}", 1
						ELSE
							;なんかの原因で該当兵装が存在しないなら外す
							DT_CELL_SET "所持乗機データベース", 装備乗機ID, @"武装{表示アビ番号}", "", 1
						ENDIF
					ENDIF
				NEXT
			ENDIF
			;一旦キャラ枠を全部リセット
			FOR LOCAL, 0, 14
				BATTLE_STATE:LOCAL:キャラ登録番号 = 0
			NEXT
			
			;キャラ情報呼び出し
			FOR キャラ順番, 0, 14
				IF キャラ順番 > 3 && キャラ順番 < 10
					CONTINUE
				ENDIF
				BATTLE_STATE:キャラ順番:キャラ登録番号 = 編成セット記録配列:編成番号:(キャラ順番 * 10 + 100)
				対象キャラ = BATTLE_STATE:キャラ順番:キャラ登録番号

				;指輪
				IF 編成セット記録配列:編成番号:(キャラ順番 * 10 + 101) > 0
					IF 装備ステータス補正保存:対象キャラ:装備指輪番号 > 0
						DT_CELL_SET "所持指輪データベース", 装備ステータス補正保存:対象キャラ:装備指輪番号, "装備キャラ番号", 0, 1
					ENDIF
					LOCAL:1 = DT_CELL_GET("所持指輪データベース", 編成セット記録配列:編成番号:(キャラ順番 * 10 + 101), "装備キャラ番号", 1)
					IF LOCAL:1 > 0
						装備ステータス補正保存:(LOCAL:1):装備指輪番号 = 0
						CALL 装備再計算処理(LOCAL:1)
					ENDIF
					装備ステータス補正保存:対象キャラ:装備指輪番号 = 編成セット記録配列:編成番号:(キャラ順番 * 10 + 101)
					DT_CELL_SET "所持指輪データベース", 装備ステータス補正保存:対象キャラ:装備指輪番号, "装備キャラ番号", 対象キャラ, 1
				ELSE
					DT_CELL_SET "所持指輪データベース", 装備ステータス補正保存:対象キャラ:装備指輪番号, "装備キャラ番号", 0, 1
					装備ステータス補正保存:対象キャラ:装備指輪番号 = 0
				ENDIF

				;耳飾り
				IF 編成セット記録配列:編成番号:(キャラ順番 * 10 + 102) > 0
					IF 装備ステータス補正保存:対象キャラ:装備耳飾り番号 > 0
						DT_CELL_SET "所持耳飾りデータベース", 装備ステータス補正保存:対象キャラ:装備耳飾り番号, "装備キャラ番号", 0, 1
					ENDIF
					LOCAL:1 = DT_CELL_GET("所持耳飾りデータベース", 編成セット記録配列:編成番号:(キャラ順番 * 10 + 102), "装備キャラ番号", 1)
					IF LOCAL:1 > 0
						装備ステータス補正保存:(LOCAL:1):装備耳飾り番号 = 0
						CALL 装備再計算処理(LOCAL:1)
					ENDIF
					装備ステータス補正保存:対象キャラ:装備耳飾り番号 = 編成セット記録配列:編成番号:(キャラ順番 * 10 + 102)
					DT_CELL_SET "所持耳飾りデータベース", 装備ステータス補正保存:対象キャラ:装備耳飾り番号, "装備キャラ番号", 対象キャラ, 1
				ELSE
					DT_CELL_SET "所持耳飾りデータベース", 装備ステータス補正保存:対象キャラ:装備耳飾り番号, "装備キャラ番号", 0, 1
					装備ステータス補正保存:対象キャラ:装備耳飾り番号 = 0
				ENDIF
				
				;ジョブ証
				装備ステータス補正保存:対象キャラ:装備証番号 = 編成セット記録配列:編成番号:(キャラ順番 * 10 + 103)
				
				;再計算
				CALL 装備再計算処理(対象キャラ)
			NEXT
			使用編成セット番号 = 編成番号
		ENDIF
		RETURN 0
	CASE 998
		CALL 編成コピー処理(編成番号)
	CASEELSE
		編成番号 = RESULT
ENDSELECT
GOTO 表示_LOOP

@編成コピー処理(コピー先番号)
#DIM 編成番号
#DIM コピー先番号
#DIM キャラ順番

LOCALS = <div rect='200,0,5662,500' border='31' bcolor='#C0C0C0' padding='50,25,50'>
LOCALS += @"要将哪个编队复制到目标编队{コピー先番号}号？<br>"
LOCALS += "<br>"
LOCALS += "　　　　　　　　　　　　　　　　　　　　　　　　　　　　<button value='998'>[998] 复制这个编队</button>　　<button value='999'>[999] 返回</button>"
LOCALS += "</div>"
HTML_PRINT LOCALS, 1
CALL 編成セットボタン表示(編成番号, 200, 450)
FOR LOCAL, 0, 6
	PRINTL
NEXT
DRAWLINE

CALL 編成基礎情報表示(編成番号)
CALL 編成キャラ情報表示(編成番号)
FOR LOCAL, 0, 28
	PRINTL
NEXT
DRAWLINE
BINPUT
SELECTCASE RESULT
	CASE 999
		RETURN 0
	CASE 998
		PRINTFORMW 已将编队{編成番号}号配置复制到目标编队{コピー先番号}号。

		;乗機記録
		編成セット記録配列:コピー先番号:編成乗機番号 = 編成セット記録配列:編成番号:編成乗機番号
		編成セット記録配列:コピー先番号:編成兵装番号１ = 編成セット記録配列:編成番号:編成兵装番号１
		編成セット記録配列:コピー先番号:編成兵装番号２ = 編成セット記録配列:編成番号:編成兵装番号２
		編成セット記録配列:コピー先番号:編成兵装番号３ = 編成セット記録配列:編成番号:編成兵装番号３
		編成セット記録配列:コピー先番号:編成兵装番号４ = 編成セット記録配列:編成番号:編成兵装番号４
		編成セット記録配列:コピー先番号:編成兵装番号５ = 編成セット記録配列:編成番号:編成兵装番号５
		編成セット記録配列:コピー先番号:編成兵装番号６ = 編成セット記録配列:編成番号:編成兵装番号６
		
		;キャラ情報記録
		FOR キャラ順番, 0, 14
			IF キャラ順番 > 3 && キャラ順番 < 10
				CONTINUE
			ENDIF
			編成セット記録配列:コピー先番号:(キャラ順番 * 10 + 100) = 編成セット記録配列:編成番号:(キャラ順番 * 10 + 100)
			編成セット記録配列:コピー先番号:(キャラ順番 * 10 + 101) = 編成セット記録配列:編成番号:(キャラ順番 * 10 + 101)
			編成セット記録配列:コピー先番号:(キャラ順番 * 10 + 102) = 編成セット記録配列:編成番号:(キャラ順番 * 10 + 102)
			編成セット記録配列:コピー先番号:(キャラ順番 * 10 + 103) = 編成セット記録配列:編成番号:(キャラ順番 * 10 + 103)
		NEXT
		RETURN 0
	CASEELSE
		編成番号 = RESULT
		RESTART
ENDSELECT


@編成セットボタン表示(編成番号 = -1, x位置, y位置)
#DIM x位置
#DIM y位置
#DIM ボタン番号
#DIM レイヤー番号
#DIM CONST ボタン総数 = 編成セット最大数
#DIM CONST レイヤーズラし量 = 100
#DIM 編成番号
レイヤー番号 = 350

LOCALS = 
FOR ボタン番号, 0, ボタン総数
	;グラフィック準備
	GDISPOSE レイヤー番号
	GDISPOSE レイヤー番号 + レイヤーズラし量
	SPRITEDISPOSE (@"編成セット_{ボタン番号}")
	SPRITEDISPOSE (@"編成セット_{ボタン番号}_ボタン")
	GCREATE レイヤー番号, 50, 50
	GCREATE レイヤー番号 + レイヤーズラし量, 50, 50
	GSETFONT レイヤー番号, GETFONT(), 18
	GSETPEN レイヤー番号, 0x00FFFFFF, -1
	;枠の表示
	GSETBRUSH レイヤー番号, 0xFFC0C0C0
	GFILLRECTANGLE レイヤー番号, 0 , 0, 50, 50
	IF 編成番号 == ボタン番号
		GSETBRUSH レイヤー番号, 0xFFFFD900
	ELSE
		GSETBRUSH レイヤー番号, 0xFF101010
	ENDIF
	GFILLRECTANGLE レイヤー番号, 5, 5, 40, 40
	
	;ボタン番号表示
	GSETBRUSH レイヤー番号, 0xFFC0C0C0
	IF ボタン番号 < 10
		GDRAWTEXT レイヤー番号, @"{ボタン番号}", 20, 16
	ELSE
		GDRAWTEXT レイヤー番号, @"{ボタン番号}", 16, 16
	ENDIF

	;リソース登録
	CALL リソース登録(@"編成セット_{ボタン番号}", レイヤー番号)
	GDRAWG レイヤー番号 + レイヤーズラし量, レイヤー番号, 0 , 0, 50, 50, 0 , 0, 50, 50, ボタン化用カラーマトリクス:0:0
	CALL リソース登録(@"編成セット_{ボタン番号}_ボタン", レイヤー番号 + レイヤーズラし量)

	;表示文字列登録
	LOCALS += @"<div rect='{ボタン番号 * 330 + x位置},{y位置},300,300'><button value='{ボタン番号}'><img src='編成セット_{ボタン番号}' srcb='編成セット_{ボタン番号}_ボタン' height='300' width='300' ypos='0'></button></div>"

	レイヤー番号 += 1
NEXT
HTML_PRINT LOCALS


@編成基礎情報表示(編成番号 = 0)
#DIM 編成番号
#DIM 表示アビ番号
#DIM 表示id
#DIM 兵器id

表示id = 編成セット記録配列:編成番号:編成乗機番号

PRINT 机体：
IF DT_SELECT("所持乗機データベース", @"id = {表示id}")
	PRINTFORML %DT_CELL_GETS("所持乗機データベース", 表示id, "乗機名", 1)%
	FOR 表示アビ番号, 0, 6
		SIF 表示アビ番号 == 3
			PRINTL
		SIF 編成セット記録配列:編成番号:(2 + 表示アビ番号) == -1
			CONTINUE
		PRINTFORM 武装{表示アビ番号}：
		IF 編成セット記録配列:編成番号:(2 + 表示アビ番号) == -2
			TRYCALLFORM 乗機兵装関数_%DT_CELL_GETS("所持乗機データベース", 表示id, "乗機名", 1)%_{表示アビ番号}("アビ名")
			PRINTFORM %TSTR:コマンド名受渡 + "(固有武装)", 20, LEFT%
		ELSEIF 編成セット記録配列:編成番号:(2 + 表示アビ番号) > 0
			兵器id = 編成セット記録配列:編成番号:(2 + 表示アビ番号)
			TRYCALLFORM 搭載兵器関数_%DT_CELL_GETS("所持兵器データベース", 兵器id, "兵器名", 1)%("アビ名", 兵器id)
			PRINTFORM %TSTR:コマンド名受渡, 30, LEFT%
		ELSE
			PRINTFORM %"装備なし", 30, LEFT%
		ENDIF
		PRINT 　　
	NEXT
	PRINTL
ELSE
	PRINTL 无
	PRINTL
	PRINTL
ENDIF
DRAWLINE



@編成キャラ情報表示(編成番号 = 0)
#DIM キャラ順番
#DIM 編成番号

CALL 編成セット用_キャラ画像生成(編成番号)

PRINTL ・主装备槽　　　　　　　　　　　　　　　　　　　　　　　　　　　・副装备槽
LOCALS = 
FOR キャラ順番, 0, 14
	IF キャラ順番 > 3 && キャラ順番 < 10
		CONTINUE
	ENDIF
	SIF 編成セット記録配列:編成番号:(キャラ順番 * 10 + 100) < 1
		CONTINUE
	LOCALS += @"<div rect='{(キャラ順番 / 10) * 3200 + 30},{(キャラ順番 % 10) * 790},3000,2000'>"
	LOCALS += @"<img src='編成セット用_{キャラ順番}' height='750' width='2462'>"
	LOCALS += @"</div>"
NEXT
HTML_PRINT LOCALS, 1




@編成セット用_キャラ画像生成(編成番号)
#DIM 属性記録
#DIM 編成番号
#DIM 対象キャラ
#DIM キャラ順番
#DIM 指輪記録
#DIM 耳飾り記録
#DIM 証記録
#DIM 縦幅
#DIM 横幅
#DIM 表示位置調整用
#DIM レイヤー番号
#DIM CONST レイヤーズラし量 = 100
レイヤー番号 = 1100

;画像リソースを全解放
SPRITEDISPOSEALL 0

;ステータス
FOR キャラ順番, 0, 14
	IF キャラ順番 > 3 && キャラ順番 < 10
		CONTINUE
	ENDIF
	
	対象キャラ = 編成セット記録配列:編成番号:(キャラ順番 * 10 + 100)
	指輪記録 = 編成セット記録配列:編成番号:(キャラ順番 * 10 + 101)
	耳飾り記録 = 編成セット記録配列:編成番号:(キャラ順番 * 10 + 102)
	証記録 = 編成セット記録配列:編成番号:(キャラ順番 * 10 + 103)

	;顔グラ生成
	GDISPOSE 2000 + キャラ順番
	SIF 対象キャラ < 1
		CONTINUE
	CALLF 顔グラ表示用文字列関数(対象キャラ, 1000 + キャラ順番)
	CALLF スプライト作成(@"編成セット用_{キャラ順番}_顔", 2000 + キャラ順番, 0)

	;枠生成
	GDISPOSE レイヤー番号
	SPRITEDISPOSE (@"編成セット用_{キャラ順番}")
	GCREATE レイヤー番号, 394, 120
	GSETFONT レイヤー番号, GETFONT(), 18
	GSETPEN レイヤー番号, 0x00FFFFFF, -1

	
	IF 対象キャラ < 1
		GSETBRUSH レイヤー番号, 0xFFC0C0C0
		GFILLRECTANGLE レイヤー番号, 0 , 0, 394, 120
		GSETBRUSH レイヤー番号, 0xFF101010
		GFILLRECTANGLE レイヤー番号, 5, 5, 384, 110
		CALL リソース登録(@"編成セット用_{キャラ順番}", レイヤー番号)
		レイヤー番号 += 1
		CONTINUE
	ENDIF

	;属性情報取得
	IF DT_SELECT("所持耳飾りデータベース", @"id = {耳飾り記録}")
		IF DT_CELL_GETS("所持耳飾りデータベース", 耳飾り記録, "変更属性", 1) == ""
			属性記録 = 基礎BATTLE_STATE:対象キャラ:属性
		ELSE
			属性記録 = 属性文字列数値変換(DT_CELL_GETS("所持耳飾りデータベース", 耳飾り記録, "変更属性", 1))
		ENDIF
	ELSE
		属性記録 = 基礎BATTLE_STATE:対象キャラ:属性
	ENDIF
	GSETBRUSH レイヤー番号, 属性数値文字色変換_透明度込(属性記録)
	GFILLRECTANGLE レイヤー番号, 0 , 0, 394, 120
	GSETBRUSH レイヤー番号, 0xFF101010
	GFILLRECTANGLE レイヤー番号, 5, 5, 384, 110

	IF SPRITECREATED(@"編成セット用_{キャラ順番}_顔")
		;縦横幅を取得して表示位置を調整
		横幅 = SPRITEWIDTH(@"編成セット用_{キャラ順番}_顔")
		縦幅 = SPRITEHEIGHT(@"編成セット用_{キャラ順番}_顔")
		IF 横幅 > 縦幅
			表示位置調整用 = (100 - (縦幅 * 100 / 横幅)) / 2
			CALL 画像合成(レイヤー番号, @"編成セット用_{キャラ順番}_顔", 10, 10 + 表示位置調整用, 100, 縦幅 * 100 / 横幅)
		ELSEIF 横幅 < 縦幅
			表示位置調整用 = (100 - (横幅 * 100 / 縦幅)) / 2
			CALL 画像合成(レイヤー番号, @"編成セット用_{キャラ順番}_顔", 10 + 表示位置調整用, 10, 横幅 * 100 / 縦幅, 100)
		ELSE
			表示位置調整用 = 0
			CALL 画像合成(レイヤー番号, @"編成セット用_{キャラ順番}_顔", 10, 10, 100, 100)
		ENDIF
	ELSE
		CALL 画像合成(レイヤー番号, "顔ノーイメ", 10, 10, 100, 100)
	ENDIF

	GSETBRUSH レイヤー番号, 0xFFC0C0C0
	GDRAWTEXT レイヤー番号, @"%CALLNAME:対象キャラ%", 120, 10
	GSETBRUSH レイヤー番号, 0xFFC0C0C0
	LOCAL:2 = 基礎BATTLE_STATE:対象キャラ:Lv
	GDRAWTEXT レイヤー番号, @"Lv:{LOCAL:2, 3}", 280, 10
	
	GSETBRUSH レイヤー番号, 属性数値文字色変換_透明度込(属性記録)
	GDRAWTEXT レイヤー番号, @"%属性数値文字列変換(属性記録)%", 350, 10
	GSETBRUSH レイヤー番号, 0xFFC0C0C0
	
	IF DT_SELECT("所持指輪データベース", @"id = {指輪記録}")
		GDRAWTEXT レイヤー番号, @"指輪　：%DT_CELL_GETS("所持指輪データベース", 指輪記録, "指輪名", 1)%", 120, 30
	ELSE
		GDRAWTEXT レイヤー番号, "指輪　：なし", 120, 30
	ENDIF
	IF DT_SELECT("所持耳飾りデータベース", @"id = {耳飾り記録}")
		IF DT_CELL_GETS("所持耳飾りデータベース", 耳飾り記録, "変更属性", 1) != ""
			GSETBRUSH レイヤー番号, 属性数値文字色変換_透明度込(属性記録)
		ENDIF
		GDRAWTEXT レイヤー番号, @"耳飾り：%DT_CELL_GETS("所持耳飾りデータベース", 耳飾り記録, "耳飾り名", 1)%", 120, 50
		GSETBRUSH レイヤー番号, 0xFFC0C0C0
	ELSE
		GDRAWTEXT レイヤー番号, "耳飾り：なし", 120, 50
	ENDIF
	IF DT_SELECT("所持ジョブ証データベース", @"id = {証記録}")
		GDRAWTEXT レイヤー番号, @"証　　：%DT_CELL_GETS("所持ジョブ証データベース", 証記録, "ジョブ証名", 1)%", 120, 70
	ELSE
		GDRAWTEXT レイヤー番号, "証　　：なし", 120, 70
	ENDIF

	CALL リソース登録(@"編成セット用_{キャラ順番}", レイヤー番号)
	レイヤー番号 += 1
NEXT



