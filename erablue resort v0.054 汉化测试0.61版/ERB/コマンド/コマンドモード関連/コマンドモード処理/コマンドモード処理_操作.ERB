;-------------------------------------------------------------------------------------------
;追加、削除など体位モードデータベースを操作する関数群
;-------------------------------------------------------------------------------------------
@MODE_DELETE_配列詰め(削除番号)
#DIM 削除番号

DT_ROW_REMOVE "体位モードデータベース", DT_CELL_GET("体位モードデータベース", 削除番号, "id")
CALL 部位専有再計算()


@MODE_DELETE_FROM_ID(削除ID)
#DIM 削除ID

DT_ROW_REMOVE "体位モードデータベース", 削除ID
CALL 部位専有再計算()


@MODE_DELETE_プレイヤー側(削除モード名, 判定キャラ番号 = -1)
#DIM 判定キャラ番号
#DIMS 削除モード名
#DIM 配列番号

IF 判定キャラ番号 == -1
	判定キャラ番号 = PLAYER
ENDIF

;判定モード名があるかどうかを見る
FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	SIF DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名") == ""
		BREAK
	;アイテム系はプレイヤー側の値は関係ないのでスルー
	SIF 系統リスト_アイテム系(DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名"))
		CONTINUE
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 判定キャラ番号
		IF DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名") == 削除モード名
			CALL MODE_DELETE_配列詰め(配列番号)
			配列番号 -= 1
		ELSEIF MODE系統確認(DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名"), 削除モード名)
			CALL MODE_DELETE_配列詰め(配列番号)
			配列番号 -= 1
		ENDIF
	ENDIF
NEXT


@MODE_DELETE_ターゲット側(削除モード名, 判定キャラ番号 = -1)
#DIM 判定キャラ番号
#DIMS 削除モード名
#DIM 配列番号

IF 判定キャラ番号 == -1
	判定キャラ番号 = TARGET
ENDIF

;判定モード名があるかどうかを見る
FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	SIF DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名") == ""
		BREAK
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 判定キャラ番号
		IF DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名") == 削除モード名
			CALL MODE_DELETE_配列詰め(配列番号)
			配列番号 -= 1
		ELSEIF MODE系統確認(DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名"), 削除モード名)
			CALL MODE_DELETE_配列詰め(配列番号)
			配列番号 -= 1
		ENDIF
	ENDIF
NEXT


@MODE_DELETE_完全一致(削除モード名, プレイヤー側番号 = -1, ターゲット側番号 = -1)
#DIM プレイヤー側番号
#DIM ターゲット側番号
#DIMS 削除モード名
#DIM 配列番号

IF プレイヤー側番号 == -1
	プレイヤー側番号 = PLAYER
ENDIF
IF ターゲット側番号 == -1
	ターゲット側番号 = TARGET
ENDIF

;判定モード名があるかどうかを見る
FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	SIF DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名") == ""
		BREAK
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == プレイヤー側番号 && DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == ターゲット側番号
		IF DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名") == 削除モード名
			CALL MODE_DELETE_配列詰め(配列番号)
			配列番号 -= 1
		ELSEIF MODE系統確認(DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名"), 削除モード名)
			CALL MODE_DELETE_配列詰め(配列番号)
			配列番号 -= 1
		ENDIF
	ENDIF
NEXT


@特定キャラモードリセット(対象キャラ番号, 対象キャラ番号２ = -1)
#DIM 対象キャラ番号
#DIM 対象キャラ番号２
#DIM 配列番号

SIF 対象キャラ番号 < 0 && 対象キャラ番号２ < 0
	RETURN -1

FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	SIF DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名") == ""
		BREAK
	IF 対象キャラ番号 >= 0 && DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 対象キャラ番号 || DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 対象キャラ番号
		CALL MODE_DELETE_配列詰め(配列番号)
		配列番号 -= 1
	ELSEIF 対象キャラ番号２ >= 0 && DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 対象キャラ番号２ || DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 対象キャラ番号２
		CALL MODE_DELETE_配列詰め(配列番号)
		配列番号 -= 1
	ENDIF
NEXT


@MODE_CHANGE(実行モード名, 実行キャラ番号, 対象キャラ番号, フリー変数 = 0, フリー文字列 = "", 強さ初期値 = 0, 速さ初期値 = 0)
#DIM 対象キャラ番号
#DIM 実行キャラ番号
#DIMS 実行モード名
#DIM フリー変数
#DIMS フリー文字列
#DIM 配列番号
#DIM 例外配列
#DIM 指競合フラグ_プレイヤー
#DIM 指競合フラグ_ターゲット
#DIM 消去フラグ
#DIM 文字列表示フラグ
#DIM スキップフラグ
#DIM モードID
#DIM 強さ初期値
#DIM 速さ初期値
#DIM 弱点番号
#DIM 看破数
#DIM 最後尾番号
#DIM 判定番号
#DIM 弱点モードフラグ

SIF 実行モード名 == ""
	RETURN 0
SIF MODE_存在判定_完全一致(実行モード名, 実行キャラ番号, 対象キャラ番号)
	RETURN 0
弱点モードフラグ = 0

;片側がMASTERである場合
IF !初体験日:実行キャラ番号:実行モード名 && 対象キャラ番号 == MASTER
	初体験日:実行キャラ番号:実行モード名 = DAY
	CALL 履歴データベース登録(CFLAG:実行キャラ番号:人物番号, @"<font color='#%カラーパレット_HTML("薄ピンク")%'>初次对%CALLNAME:対象キャラ番号%进行了[%実行モード名%]</font>","うふふ")
	SIF GROUPMATCH(実行モード名, "キス", "ディープキス")
		初体験日:実行キャラ番号:(GETNUM(初体験日, 実行モード名) + 100) = DAY
ENDIF
IF !初体験日:対象キャラ番号:(GETNUM(初体験日, 実行モード名) + 100) && 実行キャラ番号 == MASTER
	初体験日:対象キャラ番号:(GETNUM(初体験日, 実行モード名) + 100) = DAY
	IF GROUPMATCH(実行モード名, "キス", "ディープキス")
		初体験日:対象キャラ番号:実行モード名 = DAY
		CALL 履歴データベース登録(CFLAG:対象キャラ番号:人物番号, @"<font color='#%カラーパレット_HTML("薄ピンク")%'>初次对%CALLNAME:実行キャラ番号%进行了[%実行モード名%]</font>","うふふ")
	ELSEIF 系統リスト_自慰系(実行モード名)
		CALL 履歴データベース登録(CFLAG:対象キャラ番号:人物番号, @"<font color='#%カラーパレット_HTML("薄ピンク")%'>初次在性交中尝试[%実行モード名%]</font>","うふふ")
	ELSE
		CALL 履歴データベース登録(CFLAG:対象キャラ番号:人物番号, @"<font color='#%カラーパレット_HTML("薄ピンク")%'>初次被%CALLNAME:実行キャラ番号%施行了[%実行モード名%]</font>","うふふ")
	ENDIF
ENDIF

IF MATCH(実行モード名, "ディープキス")
	CFLAG:実行キャラ番号:ディープキス開始時間 = TIME
	CFLAG:対象キャラ番号:ディープキス開始時間 = TIME
ENDIF

;弱点モード判定
弱点番号 = 弱点番号算出(対象キャラ番号, @"MODE_%実行モード名%")
IF 弱点番号 >= 0
	IF 弱点看破:対象キャラ番号:弱点番号 == 0
		弱点看破:対象キャラ番号:弱点番号 = 1
		;弱点の欠片は持続快楽で取得するのでここではなし
		DRAWLINE
		SETCOLOR カラーパレット("えっちな色")
		PRINTW <<<弱点模式！！>>>
		RESETCOLOR
		弱点モードフラグ = 1
		CALL 履歴データベース登録(CFLAG:MASTER:人物番号, @"<font color='#%カラーパレット_HTML("薄ピンク")%'>发现%CALLNAME:対象キャラ番号%对模式：%実行モード名%的弱点</font>","うふふ")
		CALL 履歴データベース登録(CFLAG:対象キャラ番号:人物番号, @"<font color='#%カラーパレット_HTML("薄ピンク")%'>被%CALLNAME:MASTER%知晓了自己对模式：%実行モード名%的弱点</font>","うふふ")
		IF 弱点全看破チェック(対象キャラ番号)
			CALL 履歴データベース登録(CFLAG:MASTER:人物番号, @"<font color='#%カラーパレット_HTML("薄ピンク")%'>已完全识破%CALLNAME:対象キャラ番号%的所有弱点</font><img src='えっちハート'>","うふふ実績")
			CALL 履歴データベース登録(CFLAG:対象キャラ番号:人物番号, @"<font color='#%カラーパレット_HTML("薄ピンク")%'>所有弱点都被%CALLNAME:MASTER%完全识破</font><img src='えっちハート'>","うふふ実績")
		ENDIF
	ENDIF
ELSE
	弱点番号 = 追加弱点番号算出(対象キャラ番号, @"MODE_%実行モード名%")
	IF 弱点番号 >= 0
		TCVAR:対象キャラ番号:弱点コマンドフラグ = 1
	ENDIF
ENDIF

;片側がMASTERでない場合
LOCALS = %GETVARS(@"コマンド初回フラグ_PLAYER:実行キャラ番号:%実行モード名%")%
IF 対象キャラ番号 != MASTER && STRFIND(LOCALS, @"-{CFLAG:対象キャラ番号:人物番号}-") < 0
	;文字列に存在しなければ初、口上用に一時保存文字列に突っ込む
	モード初回フラグ_PLAYER_一時保存:実行キャラ番号:0 += @"%実行モード名%_{CFLAG:対象キャラ番号:人物番号}_"
	CALL 履歴データベース登録(CFLAG:実行キャラ番号:人物番号, @"<font color='#%カラーパレット_HTML("薄ピンク")%'>初次对%CALLNAME:対象キャラ番号%进行了[%実行モード名%]</font>","うふふ")
ENDIF
LOCALS = %GETVARS(@"コマンド初回フラグ:対象キャラ番号:%実行モード名%")%
IF 実行キャラ番号 != MASTER && STRFIND(LOCALS, @"-{CFLAG:実行キャラ番号:人物番号}-") < 0
	;文字列に存在しなければ初、口上用に一時保存文字列に突っ込む
	モード初回フラグ_一時保存:対象キャラ番号:0 += @"%実行モード名%_{CFLAG:実行キャラ番号:人物番号}_"
	IF GROUPMATCH(実行モード名, "キス", "ディープキス")
		IF STRFIND(GETVARS(@"コマンド初回フラグ_PLAYER:対象キャラ番号:%実行モード名%"), @"-{CFLAG:実行キャラ番号:人物番号}-") < 0
			CALL 履歴データベース登録(CFLAG:対象キャラ番号:人物番号, @"<font color='#%カラーパレット_HTML("薄ピンク")%'>初次对%CALLNAME:実行キャラ番号%进行了[%実行モード名%]</font>","うふふ")
			モード初回フラグ_PLAYER_一時保存:対象キャラ番号:0 += @"%実行モード名%_{CFLAG:実行キャラ番号:人物番号}_"
		ENDIF
	ELSEIF 系統リスト_自慰系(実行モード名)
		IF 初体験日:対象キャラ番号:実行モード名 <= 0
			初体験日:対象キャラ番号:実行モード名 = DAY
			CALL 履歴データベース登録(CFLAG:対象キャラ番号:人物番号, @"<font color='#%カラーパレット_HTML("薄ピンク")%'>初次在性交中尝试[%実行モード名%]</font>","うふふ")
		ENDIF
	ELSE
		CALL 履歴データベース登録(CFLAG:対象キャラ番号:人物番号, @"<font color='#%カラーパレット_HTML("薄ピンク")%'>初次被%CALLNAME:実行キャラ番号%施行了[%実行モード名%]</font>","うふふ")
	ENDIF
ENDIF

;現在のモードとの比較・消去
指競合フラグ_プレイヤー = 0
指競合フラグ_ターゲット = 0
文字列表示フラグ = 0
FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	消去フラグ = 0
	SIF DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名") == ""
		BREAK

	SIF DT_CELL_ISNULL("体位モードデータベース", 配列番号, "同時実行id") == 0 && DT_CELL_GET("体位モードデータベース", 配列番号, "同時実行id") == 同時実行ID保存
		CONTINUE

	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 実行キャラ番号 || DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 実行キャラ番号
		CALL MODE_競合判定_プレイヤー(実行モード名, 配列番号, 実行キャラ番号, 対象キャラ番号, 指競合フラグ_プレイヤー)
		消去フラグ += RESULT
	ENDIF
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 対象キャラ番号 || DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 対象キャラ番号
		CALL MODE_競合判定_ターゲット(実行モード名, 配列番号, 実行キャラ番号, 対象キャラ番号, 指競合フラグ_ターゲット)
		消去フラグ += RESULT
	ENDIF
	;競合するならモード消去
	IF 消去フラグ
		;初回のみ定型文表示
		IF 文字列表示フラグ == 0
			DRAWLINE
			IF 実行キャラ番号 >= 0
				PRINTFORM %CALLNAME:実行キャラ番号%对%CALLNAME:対象キャラ番号%
			ELSE
				PRINTFORM %CALLNAME:対象キャラ番号%
			ENDIF
			PRINTFORML 进行%実行モード名%时，已暂停以下模式。
		ENDIF
		PRINTFORM [%DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名")%] 
		SIF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") >= 0
			PRINTFORM 执行者：%CALLNAME:DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ"), 16, LEFT% 
		PRINTFORML 目标者：%CALLNAME:DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ"), 16, LEFT%
		CALL MODE_DELETE_配列詰め(配列番号)
		配列番号 -= 1
		文字列表示フラグ = 1
	ENDIF
NEXT
SIF 文字列表示フラグ
	PRINTW

;モード格納
DT_ROW_ADD "体位モードデータベース", "モード名", 実行モード名, "実行キャラ", 実行キャラ番号, "対象キャラ", 対象キャラ番号, "フリー変数", フリー変数, "フリー文字列", フリー文字列, "弱点フラグ", 弱点モードフラグ
モードID = RESULT
IF GETBIT(FLAG:モード管理, モードビット_同時)
	SIF 同時実行ID保存 == 0
		同時実行ID保存 = モードID
	DT_ROW_SET "体位モードデータベース", モードID, "同時実行id", 同時実行ID保存
ENDIF
CALL 部位専有再計算()

IF 系統リスト_Ｖ挿入系(実行モード名)
	V挿入強さ = 強さ初期値
ELSEIF 系統リスト_Ａ挿入系(実行モード名)
	A挿入強さ = 強さ初期値
ELSEIF EXISTVAR(@"%実行モード名%強さ")
	SETVAR @"%実行モード名%強さ", 強さ初期値
ENDIF

IF 系統リスト_Ｖ挿入系(実行モード名)
	V挿入速さ = 速さ初期値
ELSEIF 系統リスト_Ａ挿入系(実行モード名)
	A挿入速さ = 速さ初期値
ELSEIF EXISTVAR(@"%実行モード名%速さ")
	SETVAR @"%実行モード名%速さ", 速さ初期値
ENDIF


@部位専有再計算
#DIM 対象キャラ番号
#DIM 実行キャラ番号
#DIM 部位番号
#DIM 配列番号

;現在あるモードを参照して部位専有を入れ直す
;助手も全員リセット
FOR 部位番号, 0, 部位_要素数
	CVARSET TEQUIP, 101 + 部位番号, 0
NEXT
CVARSET TEQUIP, GETNUM(TEQUIP, "指２"), 0

FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	実行キャラ番号 = DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ")
	対象キャラ番号 = DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ")
	FOR 部位番号, 0, 部位_要素数
		;部位専有の場合１を突っ込む
		CALLFORM MODETYPE_%DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名")%(部位番号, "プレイヤー", 実行キャラ番号, 対象キャラ番号)
		IF RESULT & 部位状況_占有
			IF 部位番号 == 部位_指 && !(RESULT & 部位状況_占有２) && !TEQUIP:実行キャラ番号:指２
				TEQUIP:実行キャラ番号:指２ = 1
			ELSE
				TEQUIP:実行キャラ番号:(101 + 部位番号) = 1
			ENDIF
		ENDIF
		CALLFORM MODETYPE_%DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名")%(部位番号, "ターゲット", 実行キャラ番号, 対象キャラ番号)
		IF RESULT & 部位状況_占有
			IF 部位番号 == 部位_指 && !(RESULT & 部位状況_占有２) && !TEQUIP:対象キャラ番号:指２
				TEQUIP:対象キャラ番号:指２ = 1
			ELSE
				TEQUIP:対象キャラ番号:(101 + 部位番号) = 1
			ENDIF
		ENDIF
	NEXT
NEXT


@移動時モード消去(移動キャラ)
#DIM キャラ番号
#DIM 移動キャラ
#DIM 配列番号
#DIM 体位番号
#DIMS モード名
#DIM 相手キャラ
;同室にいる、相手が必要なモードを全部消す

FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	モード名 '= DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名")
	SIF モード名 == ""
		BREAK
	SIF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") != 移動キャラ && DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") != 移動キャラ
		CONTINUE
	SIF 系統リスト_アイテム系(モード名)
		CONTINUE
	SIF 系統リスト_触手系(モード名)
		CONTINUE
	SIF 系統リスト_ハーヴィンオナホ系(モード名)
		CONTINUE
	SIF 系統リスト_同行系(モード名)
		CONTINUE
	SIF モード名 == "全裸散歩"
		CONTINUE
	; ;移動時に同室に相手がいる場合はモードを残す(これをしないと移動直後にキス乞いに応えた場合、キスがモードとして残らない)
	; IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") != 移動キャラ
	; 	相手キャラ = DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ")
	; ELSE
	; 	相手キャラ = DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ")
	; ENDIF
	; SIF CFLAG:移動キャラ:現在位置 == CFLAG:相手キャラ:現在位置
	; 	CONTINUE
	CALL MODE_DELETE_配列詰め(配列番号)
	配列番号 -= 1
NEXT

;追跡も消す
SIF 移動キャラ == PLAYER
	あなた追跡キャラ = 0



@ランダム自慰・アイテムモード算出(対象キャラ)
#FUNCTIONS
#DIM 対象キャラ
#DIMS 候補配列, 50
#DIM 候補数
#DIM 配列番号

;素質や経験を見て候補を出してセット
VARSET 候補配列
候補数 = 0

;オートで収集は逆に重たくなりそうなので全部手動
IF GETBIT(TALENT:対象キャラ:性別, 0)
	IF TALENT:対象キャラ:Ｂ感度 != -2 && !OPTION変数:玩具プレイ禁止
		候補配列:候補数 = 乳头夹
		候補数 ++
		IF 性癖素質:対象キャラ:搾乳プレイ > 0
			候補配列:候補数 = 挤奶机
			候補数 ++
		ENDIF
	ELSEIF TALENT:対象キャラ:Ｂ感度 != -2
		候補配列:候補数 = チクニー
		候補数 ++
		IF TALENT:対象キャラ:バストサイズ > 0
			候補配列:候補数 = セルフ乳首吸い
			候補数 ++
		ENDIF
	ENDIF
	IF TALENT:対象キャラ:Ｖ感度 != -2 && !OPTION変数:玩具プレイ禁止
		IF !TALENT:対象キャラ:処女 && EXP:対象キャラ:Ｖ経験 > 50
			候補配列:候補数 = 振动棒
			候補数 ++
		ENDIF
	ELSEIF TALENT:対象キャラ:Ｖ感度 != -2
		IF EXP:対象キャラ:Ｖ経験 > 30
			候補配列:候補数 = 膣オナ
			候補数 ++
		ENDIF
	ENDIF
	IF TALENT:対象キャラ:Ｃ感度 != -2  && !OPTION変数:玩具プレイ禁止
		IF GETBIT(TALENT:対象キャラ:性別, 1)
			候補配列:候補数 = 飞机杯
			候補数 ++
			候補配列:候補数 = セルフ手コキ
			候補数 ++
		ELSE
			候補配列:候補数 = 阴蒂夹
			候補数 ++
			候補配列:候補数 = クリオナ
			候補数 ++
		ENDIF
	ELSEIF TALENT:対象キャラ:Ｃ感度 != -2
		IF GETBIT(TALENT:対象キャラ:性別, 1)
			候補配列:候補数 = セルフ手コキ
			候補数 ++
		ELSE
			候補配列:候補数 = クリオナ
			候補数 ++
		ENDIF
	ENDIF
	IF TALENT:対象キャラ:Ａ感度 != -2  && !OPTION変数:玩具プレイ禁止
		IF EXP:対象キャラ:Ａ経験 > 100
			候補配列:候補数 = 肛门振动棒
			候補数 ++
		ENDIF
		IF EXP:対象キャラ:Ａ経験 > 50
			候補配列:候補数 = 肛门拉珠
			候補数 ++
		ENDIF
	ELSEIF TALENT:対象キャラ:Ａ感度 != -2 
		IF EXP:対象キャラ:Ａ経験 > 30
			候補配列:候補数 = アナニー
			候補数 ++
		ENDIF
	ENDIF
ELSE
	IF TALENT:対象キャラ:Ｃ感度 != -2 && !OPTION変数:玩具プレイ禁止
		IF GETBIT(TALENT:対象キャラ:性別, 1)
			候補配列:候補数 = 飞机杯
			候補数 ++
		ENDIF
	ELSEIF TALENT:対象キャラ:Ｃ感度 != -2 && ( TALENT:対象キャラ:性別 != 2 ||  !OPTION変数:男性への愛撫禁止)
		IF GETBIT(TALENT:対象キャラ:性別, 1)
			候補配列:候補数 = セルフ手コキ
			候補数 ++
		ENDIF
	ENDIF
	IF TALENT:対象キャラ:Ｂ感度 != -2 && EXP:対象キャラ:Ｂ経験 > 150  && ( TALENT:対象キャラ:性別 != 2 ||  !OPTION変数:男性への愛撫禁止)
		候補配列:候補数 = チクニー
		候補数 ++
	ENDIF
	IF TALENT:対象キャラ:Ａ感度 != -2 && !OPTION変数:玩具プレイ禁止
		IF EXP:対象キャラ:Ａ経験 > 100
			候補配列:候補数 = 肛门振动棒
			候補数 ++
		ENDIF
		IF EXP:対象キャラ:Ａ経験 > 50
			候補配列:候補数 = 肛门拉珠
			候補数 ++
		ENDIF
	ELSEIF TALENT:対象キャラ:Ａ感度 != -2 && ( TALENT:対象キャラ:性別 != 2 ||  !OPTION変数:男性への愛撫禁止)
		IF EXP:対象キャラ:Ａ経験 > 30
			候補配列:候補数 = アナニー
			候補数 ++
		ENDIF
	ENDIF
ENDIF

;候補数からランダムで返す
SIF 候補数 > 0
	RETURNF 候補配列:(RAND:候補数)

@ランダム愛撫モード算出(対象キャラ)
#FUNCTIONS
#DIM 対象キャラ
#DIMS 候補配列, 50
#DIM 候補数
#DIM 配列番号

;素質や経験を見て候補を出してセット
VARSET 候補配列
候補数 = 0

;オートで収集は逆に重たくなりそうなので全部手動
IF TALENT:対象キャラ:Ｂ感度 != -2 && ( TALENT:対象キャラ:性別 != 2 ||  !OPTION変数:男性への愛撫禁止)
	候補配列:候補数 = Ｂ愛撫
	候補数 ++
ENDIF
IF TALENT:対象キャラ:Ｃ感度 != -2 && ( TALENT:対象キャラ:性別 != 2 ||  !OPTION変数:男性への愛撫禁止)
	候補配列:候補数 = Ｃ愛撫
	候補数 ++
ELSEIF TALENT:対象キャラ:Ｃ感度 != -2
	候補配列:候補数 = フェラチオ
	候補数 ++
	候補配列:候補数 = パイズリフェラ
	候補数 ++
	候補配列:候補数 = パイズリ
	候補数 ++
	候補配列:候補数 = 手コキ
	候補数 ++
	候補配列:候補数 = 素股
	候補数 ++
	候補配列:候補数 = 疑似性交
	候補数 ++
ENDIF
IF GETBIT(TALENT:対象キャラ:性別, 0)
	IF TALENT:対象キャラ:Ｖ感度 != -2
		候補配列:候補数 = Ｖ愛撫
		候補数 ++
	ENDIF
ENDIF
IF EXP:対象キャラ:Ａ経験 > 30 || RAND:100 < 5
	候補配列:候補数 = Ａ愛撫
	候補数 ++
ENDIF

;候補数からランダムで返す
SIF 候補数 > 0
	RETURNF 候補配列:(RAND:候補数)


@ランダム挿入モードセット(攻めキャラ, 受けキャラ)
;性別によって攻め受けが入れ替わることもあるので、モードセットまでここでやる
#DIM 攻めキャラ
#DIM 受けキャラ
#DIMS 候補配列, 50
#DIM 候補数
#DIM 配列番号

;素質や経験を見て候補を出してセット
VARSET 候補配列
候補数 = 0

;まず受け攻めの性別を見る
SELECTCASE TALENT:攻めキャラ:性別 * 10 +TALENT:受けキャラ:性別
	CASE 0 TO 3, 10, 20, 30
		;無性別が混じってる場合、何もしない
		RETURN 0
	CASE 11
		;女女
		IF TALENT:攻めキャラ:処女 || TALENT:攻めキャラ:Ｖ感度 == -2
			;ペニバン装着不可だとダメ
		ELSE
			IF OPTION変数:同性愛処女・童貞
				IF !TALENT:受けキャラ:処女 && TALENT:受けキャラ:Ｖ感度 != -2
					候補配列:候補数 = Ｖ挿入系
					候補数 ++
				ENDIF
				IF !TALENT:受けキャラ:Ａ処女 && TALENT:受けキャラ:Ａ感度 != -2
					候補配列:候補数 = Ａ挿入系
					候補数 ++
				ENDIF
			ELSE
				IF (!TALENT:受けキャラ:処女 || EXP:受けキャラ:Ｖ経験 > 30) && TALENT:受けキャラ:Ｖ感度 != -2
					候補配列:候補数 = Ｖ挿入系
					候補数 ++
				ENDIF
				IF (!TALENT:受けキャラ:Ａ処女 || EXP:受けキャラ:Ａ経験 > 80) && TALENT:受けキャラ:Ａ感度 != -2
					候補配列:候補数 = Ａ挿入系
					候補数 ++
				ENDIF
			ENDIF
		ENDIF
	CASE 12
		;女男
		IF TALENT:攻めキャラ:処女 || TALENT:攻めキャラ:Ｖ感度 == -2
			;ペニバン装着不可だと男側が挿入
			IF TALENT:受けキャラ:Ｃ感度 != -2
				IF OPTION変数:夜這い処女・童貞
					IF !TALENT:攻めキャラ:処女 && GETBIT(TALENT:受けキャラ:非童貞, 0) && TALENT:攻めキャラ:Ｖ感度 != -2
						候補配列:候補数 = Ｖ挿入系
						候補数 ++
					ENDIF
					IF !TALENT:攻めキャラ:Ａ処女 && GETBIT(TALENT:受けキャラ:非童貞, 1) && TALENT:攻めキャラ:Ａ感度 != -2
						候補配列:候補数 = Ａ挿入系
						候補数 ++
					ENDIF
				ELSE
					IF (!TALENT:攻めキャラ:処女 || EXP:攻めキャラ:Ｖ経験 > 30) && TALENT:攻めキャラ:Ｖ感度 != -2
						候補配列:候補数 = Ｖ挿入系
						候補数 ++
					ENDIF
					IF (!TALENT:攻めキャラ:Ａ処女 || EXP:攻めキャラ:Ａ経験 > 80) && TALENT:攻めキャラ:Ａ感度 != -2
						候補配列:候補数 = Ａ挿入系
						候補数 ++
					ENDIF
				ENDIF
				SWAP 攻めキャラ, 受けキャラ
			ENDIF
		ELSE
			IF OPTION変数:夜這い処女・童貞
				IF !TALENT:受けキャラ:Ａ処女 && TALENT:受けキャラ:Ａ感度 != -2
					候補配列:候補数 = Ａ挿入系
					候補数 ++
				ENDIF
			ELSE
				IF (!TALENT:受けキャラ:Ａ処女 || EXP:受けキャラ:Ａ経験 > 150) && TALENT:受けキャラ:Ａ感度 != -2
					候補配列:候補数 = Ａ挿入系
					候補数 ++
				ENDIF
			ENDIF
		ENDIF
	CASE 13
		;女ふたなり
		IF TALENT:攻めキャラ:処女 || TALENT:攻めキャラ:Ｖ感度 == -2
			;ペニバン装着不可だとふたなり側が挿入
			IF TALENT:受けキャラ:Ｃ感度 != -2
				IF OPTION変数:夜這い処女・童貞
					IF !TALENT:攻めキャラ:処女 && GETBIT(TALENT:受けキャラ:非童貞, 0) && TALENT:攻めキャラ:Ｖ感度 != -2
						候補配列:候補数 = Ｖ挿入系
						候補数 ++
					ENDIF
					IF !TALENT:攻めキャラ:Ａ処女 && GETBIT(TALENT:受けキャラ:非童貞, 1) && TALENT:攻めキャラ:Ａ感度 != -2
						候補配列:候補数 = Ａ挿入系
						候補数 ++
					ENDIF
				ELSE
					IF (!TALENT:攻めキャラ:処女 || EXP:攻めキャラ:Ｖ経験 > 30) && TALENT:攻めキャラ:Ｖ感度 != -2
						候補配列:候補数 = Ｖ挿入系
						候補数 ++
					ENDIF
					IF (!TALENT:攻めキャラ:Ａ処女 || EXP:攻めキャラ:Ａ経験 > 80) && TALENT:攻めキャラ:Ａ感度 != -2
						候補配列:候補数 = Ａ挿入系
						候補数 ++
					ENDIF
				ENDIF
				SWAP 攻めキャラ, 受けキャラ
			ENDIF
		ELSE
			IF OPTION変数:同性愛処女・童貞
				IF !TALENT:受けキャラ:処女 && TALENT:受けキャラ:Ｖ感度 != -2
					候補配列:候補数 = Ｖ挿入系
					候補数 ++
				ENDIF
				IF !TALENT:受けキャラ:Ａ処女 && TALENT:受けキャラ:Ａ感度 != -2
					候補配列:候補数 = Ａ挿入系
					候補数 ++
				ENDIF
			ELSE
				IF (!TALENT:受けキャラ:処女 || EXP:受けキャラ:Ｖ経験 > 30) && TALENT:受けキャラ:Ｖ感度 != -2
					候補配列:候補数 = Ｖ挿入系
					候補数 ++
				ENDIF
				IF (!TALENT:受けキャラ:Ａ処女 || EXP:受けキャラ:Ａ経験 > 80) && TALENT:受けキャラ:Ａ感度 != -2
					候補配列:候補数 = Ａ挿入系
					候補数 ++
				ENDIF
			ENDIF
		ENDIF
	CASE 21
		;男女
		IF TALENT:攻めキャラ:Ｃ感度 != -2
			IF OPTION変数:夜這い処女・童貞
				IF !TALENT:受けキャラ:処女 && GETBIT(TALENT:攻めキャラ:非童貞, 0) && TALENT:受けキャラ:Ｖ感度 != -2
					候補配列:候補数 = Ｖ挿入系
					候補数 ++
				ENDIF
				IF !TALENT:受けキャラ:Ａ処女 && GETBIT(TALENT:攻めキャラ:非童貞, 1) && TALENT:受けキャラ:Ａ感度 != -2
					候補配列:候補数 = Ａ挿入系
					候補数 ++
				ENDIF
			ELSE
				IF (!TALENT:受けキャラ:処女 || EXP:受けキャラ:Ｖ経験 > 30) && TALENT:受けキャラ:Ｖ感度 != -2
					候補配列:候補数 = Ｖ挿入系
					候補数 ++
				ENDIF
				IF (!TALENT:受けキャラ:Ａ処女 || EXP:受けキャラ:Ａ経験 > 80) && TALENT:受けキャラ:Ａ感度 != -2
					候補配列:候補数 = Ａ挿入系
					候補数 ++
				ENDIF
			ENDIF
		ENDIF
	CASE 22
		;男男
		IF TALENT:攻めキャラ:Ｃ感度 != -2
			IF OPTION変数:夜這い処女・童貞
				IF !TALENT:受けキャラ:Ａ処女 && GETBIT(TALENT:攻めキャラ:非童貞, 1) && TALENT:受けキャラ:Ａ感度 != -2
					候補配列:候補数 = Ａ挿入系
					候補数 ++
				ENDIF
			ELSE
				IF (!TALENT:受けキャラ:Ａ処女 || EXP:受けキャラ:Ａ経験 > 80) && TALENT:受けキャラ:Ａ感度 != -2
					候補配列:候補数 = Ａ挿入系
					候補数 ++
				ENDIF
			ENDIF
		ENDIF
	CASE 23
		;男ふたなり
		IF TALENT:攻めキャラ:Ｃ感度 != -2
			IF OPTION変数:夜這い処女・童貞
				IF !TALENT:受けキャラ:処女 && GETBIT(TALENT:攻めキャラ:非童貞, 0) && TALENT:受けキャラ:Ｖ感度 != -2
					候補配列:候補数 = Ｖ挿入系
					候補数 ++
				ENDIF
				IF !TALENT:受けキャラ:Ａ処女 && GETBIT(TALENT:攻めキャラ:非童貞, 1) && TALENT:受けキャラ:Ａ感度 != -2
					候補配列:候補数 = Ａ挿入系
					候補数 ++
				ENDIF
			ELSE
				IF (!TALENT:受けキャラ:処女 || EXP:受けキャラ:Ｖ経験 > 30) && TALENT:受けキャラ:Ｖ感度 != -2
					候補配列:候補数 = Ｖ挿入系
					候補数 ++
				ENDIF
				IF (!TALENT:受けキャラ:Ａ処女 || EXP:受けキャラ:Ａ経験 > 80) && TALENT:受けキャラ:Ａ感度 != -2
					候補配列:候補数 = Ａ挿入系
					候補数 ++
				ENDIF
			ENDIF
		ENDIF
	CASE 31
		;ふたなり女
		IF TALENT:攻めキャラ:Ｃ感度 != -2
			IF OPTION変数:夜這い処女・童貞
				IF !TALENT:受けキャラ:処女 && GETBIT(TALENT:攻めキャラ:非童貞, 0) && TALENT:受けキャラ:Ｖ感度 != -2
					候補配列:候補数 = Ｖ挿入系
					候補数 ++
				ENDIF
				IF !TALENT:受けキャラ:Ａ処女 && GETBIT(TALENT:攻めキャラ:非童貞, 1) && TALENT:受けキャラ:Ａ感度 != -2
					候補配列:候補数 = Ａ挿入系
					候補数 ++
				ENDIF
			ELSE
				IF (!TALENT:受けキャラ:処女 || EXP:受けキャラ:Ｖ経験 > 30) && TALENT:受けキャラ:Ｖ感度 != -2
					候補配列:候補数 = Ｖ挿入系
					候補数 ++
				ENDIF
				IF (!TALENT:受けキャラ:Ａ処女 || EXP:受けキャラ:Ａ経験 > 80) && TALENT:受けキャラ:Ａ感度 != -2
					候補配列:候補数 = Ａ挿入系
					候補数 ++
				ENDIF
			ENDIF
		ENDIF
	CASE 32
		;ふたなり男
		IF TALENT:攻めキャラ:Ｃ感度 == -2
			;ちんこなしだと男側が挿入
			IF TALENT:受けキャラ:Ｃ感度 != -2
				IF OPTION変数:夜這い処女・童貞
					IF !TALENT:攻めキャラ:処女 && GETBIT(TALENT:受けキャラ:非童貞, 0) && TALENT:攻めキャラ:Ｖ感度 != -2
						候補配列:候補数 = Ｖ挿入系
						候補数 ++
					ENDIF
					IF !TALENT:攻めキャラ:Ａ処女 && GETBIT(TALENT:受けキャラ:非童貞, 1) && TALENT:攻めキャラ:Ａ感度 != -2
						候補配列:候補数 = Ａ挿入系
						候補数 ++
					ENDIF
				ELSE
					IF (!TALENT:攻めキャラ:処女 || EXP:攻めキャラ:Ｖ経験 > 30) && TALENT:攻めキャラ:Ｖ感度 != -2
						候補配列:候補数 = Ｖ挿入系
						候補数 ++
					ENDIF
					IF (!TALENT:攻めキャラ:Ａ処女 || EXP:攻めキャラ:Ａ経験 > 80) && TALENT:攻めキャラ:Ａ感度 != -2
						候補配列:候補数 = Ａ挿入系
						候補数 ++
					ENDIF
				ENDIF
				SWAP 攻めキャラ, 受けキャラ
			ENDIF
		ELSE
			IF OPTION変数:夜這い処女・童貞
				IF !TALENT:受けキャラ:Ａ処女 && GETBIT(TALENT:攻めキャラ:非童貞, 1) && TALENT:受けキャラ:Ａ感度 != -2
					候補配列:候補数 = Ａ挿入系
					候補数 ++
				ENDIF
			ELSE
				IF (!TALENT:受けキャラ:Ａ処女 || EXP:受けキャラ:Ａ経験 > 80) && TALENT:受けキャラ:Ａ感度 != -2
					候補配列:候補数 = Ａ挿入系
					候補数 ++
				ENDIF
			ENDIF
		ENDIF
	CASE 33
		;ふたなりふたなり
		IF TALENT:攻めキャラ:Ｃ感度 == -2
			;ちんこなしだと受け側が挿入
			IF TALENT:受けキャラ:Ｃ感度 != -2
				IF OPTION変数:夜這い処女・童貞
					IF !TALENT:攻めキャラ:処女 && GETBIT(TALENT:受けキャラ:非童貞, 0) && TALENT:攻めキャラ:Ｖ感度 != -2
						候補配列:候補数 = Ｖ挿入系
						候補数 ++
					ENDIF
					IF !TALENT:攻めキャラ:Ａ処女 && GETBIT(TALENT:受けキャラ:非童貞, 1) && TALENT:攻めキャラ:Ａ感度 != -2
						候補配列:候補数 = Ａ挿入系
						候補数 ++
					ENDIF
				ELSE
					IF (!TALENT:攻めキャラ:処女 || EXP:攻めキャラ:Ｖ経験 > 30) && TALENT:攻めキャラ:Ｖ感度 != -2
						候補配列:候補数 = Ｖ挿入系
						候補数 ++
					ENDIF
					IF (!TALENT:攻めキャラ:Ａ処女 || EXP:攻めキャラ:Ａ経験 > 80) && TALENT:攻めキャラ:Ａ感度 != -2
						候補配列:候補数 = Ａ挿入系
						候補数 ++
					ENDIF
				ENDIF
				SWAP 攻めキャラ, 受けキャラ
			ENDIF
		ELSE
			IF OPTION変数:夜這い処女・童貞
				IF !TALENT:受けキャラ:処女 && GETBIT(TALENT:攻めキャラ:非童貞, 0) && TALENT:受けキャラ:Ｖ感度 != -2
					候補配列:候補数 = Ｖ挿入系
					候補数 ++
				ENDIF
				IF !TALENT:受けキャラ:Ａ処女 && GETBIT(TALENT:攻めキャラ:非童貞, 1) && TALENT:受けキャラ:Ａ感度 != -2
					候補配列:候補数 = Ａ挿入系
					候補数 ++
				ENDIF
			ELSE
				IF (!TALENT:受けキャラ:処女 || EXP:受けキャラ:Ｖ経験 > 30) && TALENT:受けキャラ:Ｖ感度 != -2
					候補配列:候補数 = Ｖ挿入系
					候補数 ++
				ENDIF
				IF (!TALENT:受けキャラ:Ａ処女 || EXP:受けキャラ:Ａ経験 > 80) && TALENT:受けキャラ:Ａ感度 != -2
					候補配列:候補数 = Ａ挿入系
					候補数 ++
				ENDIF
			ENDIF
		ENDIF
ENDSELECT

IF 候補数 > 0
	SELECTCASE 候補配列:(RAND:候補数)
		CASE "Ｖ挿入系"
			候補数 = 0
			候補配列:候補数 = 正常位
			候補数 ++
			候補配列:候補数 = 後背位
			候補数 ++
			候補配列:候補数 = 寝バック
			候補数 ++
			候補配列:候補数 = 対面座位
			候補数 ++
			候補配列:候補数 = 背面座位
			候補数 ++
			候補配列:候補数 = 騎乗位
			候補数 ++
			候補配列:候補数 = 側位
			候補数 ++
			候補配列:候補数 = 屈曲位
			候補数 ++
			IF 体格差計算(攻めキャラ, 受けキャラ) < 3
				候補配列:候補数 = 駅弁
				候補数 ++
				候補配列:候補数 = 背面駅弁
				候補数 ++
			ENDIF
			IF 体格差計算(攻めキャラ, 受けキャラ) < 4
				候補配列:候補数 = 対面立位
				候補数 ++
				候補配列:候補数 = 立ちバック
				候補数 ++
			ENDIF
			CALL MODE_CHANGE(候補配列:(RAND:候補数), 攻めキャラ, 受けキャラ)
		CASE "Ａ挿入系"
			候補数 = 0
			候補配列:候補数 = Ａ正常位
			候補数 ++
			候補配列:候補数 = Ａ後背位
			候補数 ++
			候補配列:候補数 = Ａ寝バック
			候補数 ++
			候補配列:候補数 = Ａ対面座位
			候補数 ++
			候補配列:候補数 = Ａ背面座位
			候補数 ++
			候補配列:候補数 = Ａ騎乗位
			候補数 ++
			候補配列:候補数 = Ａ側位
			候補数 ++
			候補配列:候補数 = Ａ屈曲位
			候補数 ++
			IF 体格差計算(攻めキャラ, 受けキャラ) < 3
				候補配列:候補数 = Ａ駅弁
				候補数 ++
				候補配列:候補数 = Ａ背面駅弁
				候補数 ++
			ENDIF
			IF 体格差計算(攻めキャラ, 受けキャラ) < 4
				候補配列:候補数 = Ａ対面立位
				候補数 ++
				候補配列:候補数 = Ａ立ちバック
				候補数 ++
			ENDIF
			CALL MODE_CHANGE(候補配列:(RAND:候補数), 攻めキャラ, 受けキャラ)
	ENDSELECT
ENDIF
