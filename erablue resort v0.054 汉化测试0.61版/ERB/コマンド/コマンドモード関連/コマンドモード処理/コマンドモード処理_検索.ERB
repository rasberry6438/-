;-------------------------------------------------------------------------------------------
;モードを検索し配列番号や相手キャラなどを返す関数群
;-------------------------------------------------------------------------------------------
@MODE_確認_プレイヤー側(判定モード名, 判定キャラ番号 = -1)
#FUNCTION
#DIM 配列番号
#DIMS 判定モード名
#DIM 判定キャラ番号

IF 判定キャラ番号 == -1
	判定キャラ番号 = PLAYER
ENDIF

;判定モード名があるかどうかを見る
FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 判定キャラ番号
		IF 判定モード名 == "ALL"
			RETURNF 配列番号
		ELSEIF DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名") == 判定モード名
			RETURNF 配列番号
		ELSEIF MODE系統確認(DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名"), 判定モード名)
			RETURNF 配列番号
		ENDIF
	ENDIF
NEXT

RETURNF -1


@MODE_確認_ターゲット側(判定モード名, 判定キャラ番号 = -1)
#FUNCTION
#DIM 配列番号
#DIMS 判定モード名
#DIM 判定キャラ番号

IF 判定キャラ番号 == -1
	判定キャラ番号 = TARGET
ENDIF

;判定モード名があるかどうかを見る
FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 判定キャラ番号
		IF 判定モード名 == "ALL"
			RETURNF 配列番号
		ELSEIF DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名") == 判定モード名
			RETURNF 配列番号
		ELSEIF MODE系統確認(DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名"), 判定モード名)
			RETURNF 配列番号
		ENDIF
	ENDIF
NEXT

RETURNF -1


@MODE_確認_完全一致(判定モード名, 実行キャラ番号 = -1, 対象キャラ番号 = -1)
#FUNCTION
#DIM 配列番号
#DIMS 判定モード名
#DIM 実行キャラ番号
#DIM 対象キャラ番号

IF 実行キャラ番号 == -1
	実行キャラ番号 = PLAYER
ENDIF
IF 対象キャラ番号 == -1
	対象キャラ番号 = TARGET
ENDIF

;判定モード名があるかどうかを見る
FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 実行キャラ番号 && DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 対象キャラ番号
		IF 判定モード名 == "ALL"
			RETURNF 配列番号
		ELSEIF DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名") == 判定モード名
			RETURNF 配列番号
		ELSEIF MODE系統確認(DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名"), 判定モード名)
			RETURNF 配列番号
		ENDIF
	ENDIF
NEXT

RETURNF -1


@MODE_確認_競合先(判定モード名, 実行キャラ番号, 対象キャラ番号)
#DIMS 判定モード名
#DIM 実行キャラ番号
#DIM 対象キャラ番号
#DIM 配列番号
#DIM 競合個数
#DIM 競合配列, 体位モード検索上限 + 1
#DIM 指競合フラグ_プレイヤー
#DIM 指競合フラグ_ターゲット
;MODE_CHANGE(判定モード名, 実行キャラ番号, 対象キャラ番号)で追加する予定のモードに対し
;既存のモードで競合するものがあるかを確認しその個数を返す
;RESULT:1～に競合したモードIDを入れる　RESULTの扱いに注意

VARSET 競合配列
競合個数 = 0
指競合フラグ_プレイヤー = 0
指競合フラグ_ターゲット = 0
FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 実行キャラ番号 || DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 実行キャラ番号
		CALL MODE_競合判定_プレイヤー(判定モード名, 配列番号, 実行キャラ番号, 対象キャラ番号, 指競合フラグ_プレイヤー)
		IF RESULT
			競合個数 += 1
			競合配列:競合個数 = DT_CELL_GET("体位モードデータベース", 配列番号, "id")
			SIF 競合個数 == 体位モード検索上限
				BREAK
			CONTINUE
		ENDIF
	ENDIF
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 対象キャラ番号 || DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 対象キャラ番号
		CALL MODE_競合判定_ターゲット(判定モード名, 配列番号, 実行キャラ番号, 対象キャラ番号, 指競合フラグ_ターゲット)
		IF RESULT
			競合個数 += 1
			競合配列:競合個数 = DT_CELL_GET("体位モードデータベース", 配列番号, "id")
			SIF 競合個数 == 体位モード検索上限
				BREAK
			CONTINUE
		ENDIF
	ENDIF
NEXT

ARRAYCOPY "競合配列", "RESULT"
RETURN 競合個数


@MODE_存在判定_プレイヤー側(判定モード名, 判定キャラ番号 = -1)
#FUNCTION
#DIM 配列番号
#DIMS 判定モード名
#DIM 判定キャラ番号

配列番号 = MODE_確認_プレイヤー側(判定モード名, 判定キャラ番号)
IF 配列番号 == -1
	モードID受渡し = 0
	RETURNF 0
ELSE
	モードID受渡し = DT_CELL_GET("体位モードデータベース", 配列番号, "id")
	RETURNF 1
ENDIF


@MODE_存在判定_ターゲット側(判定モード名, 判定キャラ番号 = -1)
#FUNCTION
#DIM 配列番号
#DIMS 判定モード名
#DIM 判定キャラ番号

配列番号 = MODE_確認_ターゲット側(判定モード名, 判定キャラ番号)
IF 配列番号 == -1
	モードID受渡し = 0
	RETURNF 0
ELSE
	モードID受渡し = DT_CELL_GET("体位モードデータベース", 配列番号, "id")
	RETURNF 1
ENDIF


@MODE_存在判定_いずれか側(判定モード名, 判定キャラ番号 = -1)
#FUNCTION
#DIM 配列番号
#DIM 配列カウンタ
#DIMS 判定モード名
#DIM 判定キャラ番号

IF 判定キャラ番号 == -1
	判定キャラ番号 = TARGET
ENDIF

配列番号 = -1
;判定モード名があるかどうかを見る
FOR 配列カウンタ, 0, DT_ROW_LENGTH("体位モードデータベース")
	IF DT_CELL_GET("体位モードデータベース", 配列カウンタ, "実行キャラ") == 判定キャラ番号 || DT_CELL_GET("体位モードデータベース", 配列カウンタ, "対象キャラ") == 判定キャラ番号
		IF 判定モード名 == "ALL"
			配列番号 = 配列カウンタ
			BREAK
		ELSEIF DT_CELL_GETS("体位モードデータベース", 配列カウンタ, "モード名") == 判定モード名
			配列番号 = 配列カウンタ
			BREAK
		ELSEIF MODE系統確認(DT_CELL_GETS("体位モードデータベース", 配列カウンタ, "モード名"), 判定モード名)
			配列番号 = 配列カウンタ
			BREAK
		ENDIF
	ENDIF
NEXT

IF 配列番号 == -1
	モードID受渡し = 0
	RETURNF 0
ELSE
	モードID受渡し = DT_CELL_GET("体位モードデータベース", 配列番号, "id")
	RETURNF 1
ENDIF


@MODE_存在判定_完全一致(判定モード名, 実行キャラ番号 = -1, 対象キャラ番号 = -1)
#FUNCTION
#DIM 配列番号
#DIMS 判定モード名
#DIM 実行キャラ番号
#DIM 対象キャラ番号

配列番号 = MODE_確認_完全一致(判定モード名, 実行キャラ番号, 対象キャラ番号)
IF 配列番号 == -1
	モードID受渡し = 0
	RETURNF 0
ELSE
	モードID受渡し = DT_CELL_GET("体位モードデータベース", 配列番号, "id")
	RETURNF 1
ENDIF


@MODE_存在判定_順不同(判定モード名, 判定キャラ番号１ = -1, 判定キャラ番号２ = -1)
#FUNCTION
#DIM 配列番号
#DIM 配列カウンタ
#DIMS 判定モード名
#DIM 判定キャラ番号１
#DIM 判定キャラ番号２

IF 判定キャラ番号１ == -1
	判定キャラ番号１ = PLAYER
ENDIF
IF 判定キャラ番号２ == -1
	判定キャラ番号２ = TARGET
ENDIF

配列番号 = -1
;判定モード名があるかどうかを見る
FOR 配列カウンタ, 0, DT_ROW_LENGTH("体位モードデータベース")
	IF DT_CELL_GET("体位モードデータベース", 配列カウンタ, "実行キャラ") == 判定キャラ番号１ && DT_CELL_GET("体位モードデータベース", 配列カウンタ, "対象キャラ") == 判定キャラ番号２
	ELSEIF DT_CELL_GET("体位モードデータベース", 配列カウンタ, "実行キャラ") == 判定キャラ番号２ && DT_CELL_GET("体位モードデータベース", 配列カウンタ, "対象キャラ") == 判定キャラ番号１
	ELSE
		CONTINUE
	ENDIF

	IF 判定モード名 == "ALL"
		配列番号 = 配列カウンタ
		BREAK
	ELSEIF DT_CELL_GETS("体位モードデータベース", 配列カウンタ, "モード名") == 判定モード名
		配列番号 = 配列カウンタ
		BREAK
	ELSEIF MODE系統確認(DT_CELL_GETS("体位モードデータベース", 配列カウンタ, "モード名"), 判定モード名)
		配列番号 = 配列カウンタ
		BREAK
	ENDIF
NEXT

IF 配列番号 == -1
	モードID受渡し = 0
	RETURNF 0
ELSE
	モードID受渡し = DT_CELL_GET("体位モードデータベース", 配列番号, "id")
	RETURNF 1
ENDIF



@MODE_取得_完全一致(実行キャラ番号 = -1, 対象キャラ番号 = -1)
#FUNCTIONS
#DIM 配列番号
#DIMS DYNAMIC 返し文字列
#DIM 実行キャラ番号
#DIM 対象キャラ番号

;組み合わせが一致するモード名を全て返す
FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 実行キャラ番号 && DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 対象キャラ番号
		IF 返し文字列 != ""
			返し文字列 += "_"
		ENDIF
		返し文字列 += @"%DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名")%"
	ENDIF
NEXT

RETURNF 返し文字列

@MODE_取得_順不同(実行キャラ番号 = -1, 対象キャラ番号 = -1)
#FUNCTIONS
#DIM 配列番号
#DIMS DYNAMIC 返し文字列
#DIM 実行キャラ番号
#DIM 対象キャラ番号
#DIM 実行キャラ
#DIM 対象キャラ

;組み合わせが一致するモード名を全て返す
FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	実行キャラ = DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ")
	対象キャラ = DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ")
	IF (実行キャラ == 実行キャラ番号 && 対象キャラ == 対象キャラ番号) || (実行キャラ == 対象キャラ番号 && 対象キャラ == 実行キャラ番号)
		IF 返し文字列 != ""
			返し文字列 += "_"
		ENDIF
		返し文字列 += @"%DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名")%"
	ENDIF
NEXT

RETURNF 返し文字列


@MODE_直近取得_完全一致(実行キャラ番号 = -1, 対象キャラ番号 = -1)
#FUNCTIONS
#DIM 配列番号
#DIMS DYNAMIC 返し文字列
#DIM 実行キャラ番号
#DIM 対象キャラ番号

;組み合わせが一致するモード名を全て返す
FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 実行キャラ番号 && DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 対象キャラ番号
		返し文字列 = %DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名")%
	ENDIF
NEXT

RETURNF 返し文字列

@MODE_直近取得_順不同(実行キャラ番号 = -1, 対象キャラ番号 = -1)
#FUNCTIONS
#DIM 配列番号
#DIMS DYNAMIC 返し文字列
#DIM 実行キャラ番号
#DIM 対象キャラ番号
#DIM 実行キャラ
#DIM 対象キャラ

;組み合わせが一致するモード名を全て返す
FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	実行キャラ = DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ")
	対象キャラ = DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ")
	IF (実行キャラ == 実行キャラ番号 && 対象キャラ == 対象キャラ番号) || (実行キャラ == 対象キャラ番号 && 対象キャラ == 実行キャラ番号)
		返し文字列 = %DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名")%
	ENDIF
NEXT

RETURNF 返し文字列

