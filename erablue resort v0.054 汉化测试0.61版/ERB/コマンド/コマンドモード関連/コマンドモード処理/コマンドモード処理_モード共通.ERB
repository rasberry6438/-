;-------------------------------------------------------------------------------------------
;系統リスト、競合など各モードが持っている処理をまとめる関数群
;-------------------------------------------------------------------------------------------
@体格差計算(実行キャラ番号, 対象キャラ番号, 体位補正 = 0)
#FUNCTION
#DIM 実行キャラ番号
#DIM 対象キャラ番号
#DIM 体位補正
#DIM ハーヴィン補正
;結果が0より大きい…対象キャラのほうが体格が大きい
;　差1…不自由ない
;　差2…肩を組むのがギリギリで胸まで手が回らない
;　差3…角や首筋に届かない/駅弁を支えられない
;　差4以上…キスや立位が届かない/相手に抱え込まれたりできる
;結果が0より小さい…実行キャラのほうが体格が大きい
;　差-1…不自由ない
;　差-2…(キスで相手に背伸びさせてしまう程度の差)
;　差-3…しゃがまないと肩組めない
;　差-4以上…キスが届かない/側位で胸が届く/相手を抱え込んだりできる
;体位補正が0より大きい…対面座位など、対象側のが位置が高いときに使用

ハーヴィン補正 = 0
SIF TALENT:実行キャラ番号:体格 == 体格_ハーヴィン並
	ハーヴィン補正 += 1
SIF TALENT:対象キャラ番号:体格 == 体格_ハーヴィン並
	ハーヴィン補正 -= 1
RETURNF TALENT:対象キャラ番号:体格 - TALENT:実行キャラ番号:体格 + 体位補正 + ハーヴィン補正


@MODE_部位届く判定(判定部位, 実行キャラ番号 = -1, 対象キャラ番号 = -1)
#DIM 配列番号
#DIM 判定部位
#DIM 実行キャラ番号
#DIM 対象キャラ番号
;実行キャラが対象キャラの指定部位に対して触れるかどうかを判定する

IF 実行キャラ番号 == -1
	実行キャラ番号 = PLAYER
ENDIF
IF 対象キャラ番号 == -1
	対象キャラ番号 = TARGET
ENDIF

;判定部位名をチェック
FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 実行キャラ番号 && DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 対象キャラ番号
		CALLFORM MODETYPE_%DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名")%(判定部位, "ターゲット", 実行キャラ番号, 対象キャラ番号)
		SIF RESULT == 部位状況_届かない
			RETURN 0
	ENDIF
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 対象キャラ番号 && DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 実行キャラ番号
		CALLFORM MODETYPE_%DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名")%(判定部位, "プレイヤー", 対象キャラ番号, 実行キャラ番号)
		SIF RESULT == 部位状況_届かない
			RETURN 0
	ENDIF
NEXT

RETURN 1


@MODE_部位届く計算(実行キャラ番号 = -1, 対象キャラ番号 = -1)
#DIM 実行キャラ番号
#DIM 対象キャラ番号
#DIM 配列番号
#DIM 部位番号
#DIMS モード名
;実行キャラと対象キャラが互いに各部位に対して触れるかどうかを判定して変数に格納する

IF 実行キャラ番号 == -1
	実行キャラ番号 = PLAYER
ENDIF
IF 対象キャラ番号 == -1
	対象キャラ番号 = TARGET
ENDIF

VARSET 部位届かない配列_プレイヤー側, 0
VARSET 部位届かない配列_ターゲット側, 0

FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 実行キャラ番号 && DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 対象キャラ番号
		モード名 '= DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名")
		FOR 部位番号, 0, 部位_要素数
			CALLFORM MODETYPE_%モード名%(部位番号, "プレイヤー", 実行キャラ番号, 対象キャラ番号)
			SIF RESULT == 部位状況_届かない
				部位届かない配列_プレイヤー側:部位番号 = 1
			CALLFORM MODETYPE_%モード名%(部位番号, "ターゲット", 実行キャラ番号, 対象キャラ番号)
			SIF RESULT == 部位状況_届かない
				部位届かない配列_ターゲット側:部位番号 = 1
		NEXT
	ELSEIF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == 対象キャラ番号 && DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == 実行キャラ番号
		モード名 '= DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名")
		FOR 部位番号, 0, 部位_要素数
			CALLFORM MODETYPE_%モード名%(部位番号, "ターゲット", 対象キャラ番号, 実行キャラ番号)
			SIF RESULT == 部位状況_届かない
				部位届かない配列_プレイヤー側:部位番号 = 1
			CALLFORM MODETYPE_%モード名%(部位番号, "プレイヤー", 対象キャラ番号, 実行キャラ番号)
			SIF RESULT == 部位状況_届かない
				部位届かない配列_ターゲット側:部位番号 = 1
		NEXT
	ENDIF
NEXT


@MODE系統確認(モード名, 系統名)
#FUNCTION
#DIMS モード名
#DIMS 系統名
モード確認結果 = 0
TRYCALLFORMF 系統リスト_%系統名%(モード名)
RETURNF モード確認結果


@MODE_CHECK
;モードが持続している間、特定の快楽が発生し続ける
;すべてのモードをチェック
#DIM 配列番号
#DIM 対象番号
#DIM フラグ保持

FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	対象番号 = DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ")
	SWAP TCVAR:対象番号:弱点コマンドフラグ, フラグ保持
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "弱点フラグ")
		TCVAR:対象番号:弱点コマンドフラグ = 1
		CALL 弱点の欠片取得処理(@"MODE_%DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名")%")
	ELSE
		TCVAR:対象番号:弱点コマンドフラグ = 0
	ENDIF
	TRYCALLFORM MODE_持続快楽_%DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名")%(DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ"), 対象番号)
	SWAP TCVAR:対象番号:弱点コマンドフラグ, フラグ保持
NEXT

RETURN 1


@MODE_絶頂相手(キャラ番号, 絶頂部位)
#FUNCTION
#DIM キャラ番号
#DIM 絶頂部位
#DIM 判定結果
#DIM 自分フラグ
#DIM 配列番号

自分フラグ = 0
FOR 配列番号, 0, DT_ROW_LENGTH("体位モードデータベース")
	IF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ") == キャラ番号
		判定結果 = 絶頂相手_指定なし
		TRYCALLFORMF MODE_絶頂相手_%DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名")%(絶頂部位, "プレイヤー", 判定結果)
		SELECTCASE 判定結果
			CASE 絶頂相手_モード相手
				RETURNF DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ")
			CASE 絶頂相手_自分
				自分フラグ = 1
		ENDSELECT
	ENDIF

	IF DT_CELL_GET("体位モードデータベース", 配列番号, "対象キャラ") == キャラ番号
		判定結果 = 絶頂相手_指定なし
		TRYCALLFORMF MODE_絶頂相手_%DT_CELL_GETS("体位モードデータベース", 配列番号, "モード名")%(絶頂部位, "ターゲット", 判定結果)
		SELECTCASE 判定結果
			CASE 絶頂相手_モード相手
				RETURNF DT_CELL_GET("体位モードデータベース", 配列番号, "実行キャラ")
			CASE 絶頂相手_自分
				自分フラグ = 1
		ENDSELECT
	ENDIF
NEXT

SIF 自分フラグ
	RETURNF キャラ番号
RETURNF -1


@MODE_競合判定_プレイヤー(判定モード名, 判定配列番号, 実行キャラ番号, 対象キャラ番号, 指競合フラグ)
#DIMS 判定モード名
#DIM 判定配列番号
#DIM 部位番号
#DIM 実行キャラ番号
#DIM 対象キャラ番号
#DIM 判定側_部位状況
#DIM 存在側_部位状況
#DIM REF 指競合フラグ
;MODE_CHANGE(判定モード名, 実行キャラ番号, 対象キャラ番号)で追加する予定のモードに対し
;既存のモードの実行キャラの部位状況が競合しているかを確認する

;各モードがどの部位を専有しているかを持ってくる
FOR 部位番号, 0, 部位_要素数
	判定側_部位状況 = 部位状況_なし
	存在側_部位状況 = 部位状況_なし

	TRYCCALLFORM MODETYPE_%判定モード名%(部位番号, "プレイヤー", 実行キャラ番号, 対象キャラ番号)
		判定側_部位状況 = RESULT
	CATCH
		判定側_部位状況 = 部位状況_なし
	ENDCATCH
	IF DT_CELL_GET("体位モードデータベース", 判定配列番号, "実行キャラ") == 実行キャラ番号
		TRYCCALLFORM MODETYPE_%DT_CELL_GETS("体位モードデータベース", 判定配列番号, "モード名")%(部位番号, "プレイヤー", 実行キャラ番号, 対象キャラ番号)
			存在側_部位状況 = RESULT
		CATCH
			存在側_部位状況 = 部位状況_なし
		ENDCATCH
	ELSEIF DT_CELL_GET("体位モードデータベース", 判定配列番号, "対象キャラ") == 実行キャラ番号
		TRYCCALLFORM MODETYPE_%DT_CELL_GETS("体位モードデータベース", 判定配列番号, "モード名")%(部位番号, "ターゲット", 対象キャラ番号, 実行キャラ番号)
			存在側_部位状況 = RESULT
		CATCH
			存在側_部位状況 = 部位状況_なし
		ENDCATCH
	ENDIF

	;競合比較
	IF 判定側_部位状況 != 部位状況_なし && 存在側_部位状況 != 部位状況_なし
		IF (判定側_部位状況 & 部位状況_占有) && (存在側_部位状況 & 部位状況_占有)
			IF 部位番号 == 部位_指 && !(判定側_部位状況 & 部位状況_占有２) && !(存在側_部位状況 & 部位状況_占有２) && 指競合フラグ < 1
				;指の場合は両手占有フラグと指競合フラグを見て、片手が空いてるなら次へ
				指競合フラグ ++
			ELSE
				;競合する
				RETURN 1
			ENDIF
		ELSEIF (判定側_部位状況 & 部位状況_占有) || (存在側_部位状況 & 部位状況_占有)
			;実行対象の組み合わせが一致するなら競合する
			IF GROUPMATCH(対象キャラ番号, DT_CELL_GET("体位モードデータベース", 判定配列番号, "実行キャラ"), DT_CELL_GET("体位モードデータベース", 判定配列番号, "対象キャラ"))
				;例外処理
				IF MODE_競合除外(判定モード名, DT_CELL_GETS("体位モードデータベース", 判定配列番号, "モード名"))
					RETURN 0
				ELSE
					RETURN 2
				ENDIF
			ENDIF
		ENDIF
	ENDIF
NEXT

RETURN 0


@MODE_競合判定_ターゲット(判定モード名, 判定配列番号, 実行キャラ番号, 対象キャラ番号, 指競合フラグ)
#DIMS 判定モード名
#DIM 判定配列番号
#DIM 部位番号
#DIM 実行キャラ番号
#DIM 対象キャラ番号
#DIM 判定側_部位状況
#DIM 存在側_部位状況
#DIM REF 指競合フラグ
;MODE_CHANGE(判定モード名, 実行キャラ番号, 対象キャラ番号)で追加する予定のモードに対し
;既存のモードの対象キャラの部位状況が競合しているかを確認する

;各モードがどの部位を専有しているかを持ってくる
FOR 部位番号, 0, 部位_要素数
	判定側_部位状況 = 部位状況_なし
	存在側_部位状況 = 部位状況_なし

	TRYCCALLFORM MODETYPE_%判定モード名%(部位番号, "ターゲット", 実行キャラ番号, 対象キャラ番号)
		判定側_部位状況 = RESULT
	CATCH
		判定側_部位状況 = 部位状況_なし
	ENDCATCH
	IF DT_CELL_GET("体位モードデータベース", 判定配列番号, "実行キャラ") == 対象キャラ番号
		TRYCCALLFORM MODETYPE_%DT_CELL_GETS("体位モードデータベース", 判定配列番号, "モード名")%(部位番号, "プレイヤー", 対象キャラ番号, 実行キャラ番号)
			存在側_部位状況 = RESULT
		CATCH
			存在側_部位状況 = 部位状況_なし
		ENDCATCH
	ELSEIF DT_CELL_GET("体位モードデータベース", 判定配列番号, "対象キャラ") == 対象キャラ番号
		TRYCCALLFORM MODETYPE_%DT_CELL_GETS("体位モードデータベース", 判定配列番号, "モード名")%(部位番号, "ターゲット", 実行キャラ番号, 対象キャラ番号)
			存在側_部位状況 = RESULT
		CATCH
			存在側_部位状況 = 部位状況_なし
		ENDCATCH
	ENDIF

	;競合比較
	IF 判定側_部位状況 != 部位状況_なし && 存在側_部位状況 != 部位状況_なし
		IF (判定側_部位状況 & 部位状況_占有) && (存在側_部位状況 & 部位状況_占有)
			IF 部位番号 == 部位_指 && !(判定側_部位状況 & 部位状況_占有２) && !(存在側_部位状況 & 部位状況_占有２) && 指競合フラグ < 1
				;指の場合は両手占有フラグと指競合フラグを見て、片手が空いてるなら次へ
				指競合フラグ ++
			ELSE
				;競合する
				RETURN 1
			ENDIF
		ELSEIF (判定側_部位状況 & 部位状況_占有) || (存在側_部位状況 & 部位状況_占有)
			;実行対象の組み合わせが一致するなら競合する
			IF GROUPMATCH(実行キャラ番号, DT_CELL_GET("体位モードデータベース", 判定配列番号, "実行キャラ"), DT_CELL_GET("体位モードデータベース", 判定配列番号, "対象キャラ"))
				IF MODE_競合除外(判定モード名, DT_CELL_GETS("体位モードデータベース", 判定配列番号, "モード名"))
					RETURN 0
				ELSE
					RETURN 2
				ENDIF
			ENDIF
		ENDIF
	ENDIF
NEXT

RETURN 0


@MODE_競合除外(判定モード, 競合モード)
#FUNCTION
#DIMS 判定モード
#DIMS 競合モード
;競合から除外する体位の組み合わせなら1を返す

;シックスナイン可能同士なら除外
SIF 系統リスト_シックスナイン可能(判定モード) && 系統リスト_シックスナイン可能(競合モード)
	RETURNF 1
;自慰系は「届かない」の場合を無視する
SIF 系統リスト_自慰系(判定モード) || 系統リスト_自慰系(競合モード)
	RETURNF 1
;触手系は「届かない」の場合を無視する
SIF 系統リスト_触手系(判定モード) || 系統リスト_触手系(競合モード)
	RETURNF 1
;アイテム系は「届かない」の場合を無視する
SIF 系統リスト_アイテム系(判定モード) || 系統リスト_アイテム系(競合モード)
	RETURNF 1
