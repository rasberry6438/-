@ビーチフラッグ
#DIM CONST レイヤー番号 = 50
#DIM スタートタイム
#DIM スタートフレーム
#DIM クリックタイム
#DIM クリックフレーム
#DIM タイムオーバーフレーム
#DIM タイムオーバーフレーム数
#DIM アニメタイマー = 10
#DIM フレームレート = 20
#DIM CONST アニメサイズ = 450, 450
#DIM 難易度
#DIM ターゲット選択
#DIM 勝敗結果保存
#DIM カラーマトリクス,5,5

SPRITEDISPOSE "フェードイン"
SPRITEANIMECREATE "フェードイン", アニメサイズ:0, アニメサイズ:1
GDISPOSE レイヤー番号 + 11 
GCREATE レイヤー番号 + 11 , アニメサイズ:0, アニメサイズ:1 * 8
FOR LOCAL, 0, 8
	GSETBRUSH レイヤー番号 + 11 , 0x1F101010 + 0x20000000 * LOCAL
	GFILLRECTANGLE レイヤー番号 + 11 , 0,  アニメサイズ:1 * LOCAL, アニメサイズ:0, アニメサイズ:1
	SPRITEANIMEADDFRAME "フェードイン", レイヤー番号 + 11 , 0, アニメサイズ:1 * LOCAL, アニメサイズ:0, アニメサイズ:1, 0, 0, 50
NEXT
GSETBRUSH レイヤー番号 + 11 , 0xFFC0C0C0
GSETFONT レイヤー番号 + 11 , GETFONT(), 36
GSETPEN レイヤー番号 + 11 , 0xFFC0C0C0, 1
GDRAWTEXT レイヤー番号 + 11 , "ＲＥＡＤＹ", 0, アニメサイズ:1 * 7
GSETFONT レイヤー番号 + 11 , GETFONT(), 18
GDRAWTEXT レイヤー番号 + 11 , "どちらのフラッグを狙いますか？", 20, 40 + アニメサイズ:1 * 7


SPRITEANIMEADDFRAME "フェードイン", レイヤー番号 + 11 , 0, アニメサイズ:1 * 7, アニメサイズ:0, アニメサイズ:1, 0, 0, 100000
CBGSETSPRITE "フェードイン", 0, (-CLIENTHEIGHT() + アニメサイズ:1) / 2, -3
SETANIMETIMER 50

SIF CSTR:TARGET:画像フォルダ == ""
	CSTR:TARGET:画像フォルダ '= GET_RESOURCES_BASE_FOLDER(TARGET)
GDISPOSE レイヤー番号 + 20 
RESULT = ENUMFILES("resources/" + CSTR:TARGET:画像フォルダ, "顔_泳装_差分_表情*.*")
IF RESULT > 0
	LOCAL = RAND:(RESULT + 1)
ELSE
	LOCAL = 0
ENDIF
SELECTCASE LOCAL
	CASE RESULT
		LOCALS '= CSTR:TARGET:画像フォルダ + "/顔_泳装"
	CASEELSE
		LOCALS '= SUBSTRING(RESULTS:LOCAL, 10, -1)
ENDSELECT
CALL GCREATE_拡張子(レイヤー番号 + 20 , LOCALS)
GDISPOSE レイヤー番号 + 21
GCREATE レイヤー番号 + 21 , アニメサイズ:0, アニメサイズ:1
GDRAWG レイヤー番号 + 21 , レイヤー番号 + 20 , 0, 0, アニメサイズ:0, アニメサイズ:1, 0, 0, GWIDTH(レイヤー番号 + 20 ), GHEIGHT(レイヤー番号 + 20 )
;影素材
GDISPOSE レイヤー番号 + 12 
CALL GCREATE_拡張子(レイヤー番号 + 12 , "カットイン素材/BEACHFLAGS")

CALL ビーチフラッグ画像セット(レイヤー番号 + 0 , "ビーチフラッグ_用意", "ＳＥＴ", レイヤー番号 + 12 , アニメサイズ:0, アニメサイズ:1)
CALL ビーチフラッグ画像セット(レイヤー番号 + 2 , "ビーチフラッグ_スタート", "ＧＯ", レイヤー番号 + 12 , アニメサイズ:0, アニメサイズ:1)
CALL ビーチフラッグ画像セット(レイヤー番号 + 4 , "ビーチフラッグ_勝ち", "ＷＩＮ", レイヤー番号 + 12 , アニメサイズ:0, アニメサイズ:1)
CALL ビーチフラッグ画像セット(レイヤー番号 + 6 , "ビーチフラッグ_負け", "ＬＯＳＥ", レイヤー番号 + 12 , アニメサイズ:0, アニメサイズ:1)
CALL ビーチフラッグ画像セット(レイヤー番号 + 8 , "ビーチフラッグ_フライング", "ＦＡＬＳＥ", レイヤー番号 + 12 , アニメサイズ:0, アニメサイズ:1)

GDISPOSE レイヤー番号 + 13 
GCREATE レイヤー番号 + 13 , アニメサイズ:0, アニメサイズ:1 * 3
GSETBRUSH レイヤー番号 + 13 , 0xFFC0C0C0
GFILLRECTANGLE レイヤー番号 + 13 , 0, アニメサイズ:1, アニメサイズ:0, アニメサイズ:1
GSETBRUSH レイヤー番号 + 13 , 0xFFC0C0C0
GSETFONT レイヤー番号 + 13 , GETFONT(), 18
GSETPEN レイヤー番号 + 13 , 0xFFC0C0C0, 1
GDRAWTEXT レイヤー番号 + 13 , "[1]近い方", 0, アニメサイズ:1 * 3 / 4
GDRAWTEXT レイヤー番号 + 13 , "[2]遠い方", 0, アニメサイズ:1 / 4
カラーマトリクス:0:0 = 256,   0,   0,   0,   0
カラーマトリクス:1:0 =   0, 256,   0,   0,   0
カラーマトリクス:2:0 =   0,   0, 256,   0,   0
カラーマトリクス:3:0 =   0,   0,   0, 128,   0
GDRAWG レイヤー番号 + 13 , レイヤー番号 + 13 , 0, アニメサイズ:1 * 2, アニメサイズ:0, アニメサイズ:1, 0, 0, アニメサイズ:0, アニメサイズ:1
GDRAWG レイヤー番号 + 13 , レイヤー番号 + 13 , 0, アニメサイズ:1 * 2, アニメサイズ:0, アニメサイズ:1, 0, アニメサイズ:1, アニメサイズ:0, アニメサイズ:1, カラーマトリクス:0:0
SPRITEDISPOSE "[1]近い方0"
SPRITEDISPOSE "[1]近い方1"
SPRITECREATE "[1]近い方0", レイヤー番号 + 13 , 0, アニメサイズ:1 * 2 / 4, アニメサイズ:0, アニメサイズ:1 / 2
SPRITECREATE "[1]近い方1", レイヤー番号 + 13 , 0, アニメサイズ:1 * 10 / 4, アニメサイズ:0, アニメサイズ:1 / 2
CBGSETBUTTONSPRITE 0x000001, "[1]近い方0", "[1]近い方1", 0, (-CLIENTHEIGHT() + アニメサイズ:1) / 2, -4
SPRITEDISPOSE "[2]遠い方0"
SPRITEDISPOSE "[2]遠い方1"
SPRITECREATE "[2]遠い方0", レイヤー番号 + 13 , 0, アニメサイズ:1 * 0 / 4, アニメサイズ:0, アニメサイズ:1 / 2
SPRITECREATE "[2]遠い方1", レイヤー番号 + 13 , 0, アニメサイズ:1 * 8 / 4, アニメサイズ:0, アニメサイズ:1 / 2
CBGSETBUTTONSPRITE 0x000002, "[2]遠い方0", "[2]遠い方1", 0, (-CLIENTHEIGHT()) / 2, -4
GDISPOSE レイヤー番号 + 14 
GCREATE レイヤー番号 + 14 , アニメサイズ:0, (CLIENTHEIGHT() + アニメサイズ:1) / 2
GSETBRUSH レイヤー番号 + 14 , 0xFF000001
GFILLRECTANGLE レイヤー番号 + 14 , 0, アニメサイズ:1 / 2, アニメサイズ:0, アニメサイズ:1 / 2
GSETBRUSH レイヤー番号 + 14 , 0xFF000002
GFILLRECTANGLE レイヤー番号 + 14 , 0, 0, アニメサイズ:0, アニメサイズ:1 / 2
CBGSETBMAPG レイヤー番号 + 14 
$ターゲット入力ループ
INPUTMOUSEKEY
IF RESULT == 1
	SELECTCASE RESULT:4
	CASE 0x000001
		ターゲット選択 = 1
	CASE 0x000002
		ターゲット選択 = 2
	CASEELSE
		GOTO ターゲット入力ループ
	ENDSELECT
ELSEIF RESULT == 3
	SELECTCASE RESULT:2
	CASE 49, 97 ;1 NUM1
		ターゲット選択 = 1
	CASE 50, 98 ;2 NUM2
		ターゲット選択 = 2
	CASEELSE
		GOTO ターゲット入力ループ
	ENDSELECT
ELSE
	GOTO ターゲット入力ループ
ENDIF
CBGREMOVERANGE -4, -4
;相手の勝利フレームとカウント開始フレームの設定
タイムオーバーフレーム数 = ビーチフラッグ難易度判定(ターゲット選択)
スタートフレーム = RAND(1000, 3000)
タイムオーバーフレーム = スタートフレーム + タイムオーバーフレーム数 * フレームレート

GDISPOSE レイヤー番号 + 10 
GCREATE レイヤー番号 + 10 , 100, 4000
GSETBRUSH レイヤー番号 + 10 , 0xFFC0C0C0
GSETFONT レイヤー番号 + 10 , "GEORGIA", 36, 0
GSETPEN レイヤー番号 + 10 , 0xFFC0C0C0, 0
FOR LOCAL, 0, 10
	GDRAWTEXT レイヤー番号 + 10 , "0" + TOSTR(LOCAL), 0, LOCAL * 40
NEXT
FOR LOCAL, 10, タイムオーバーフレーム数
	GDRAWTEXT レイヤー番号 + 10 , TOSTR(LOCAL), 0, LOCAL * 40
NEXT

GSETFONT レイヤー番号 + 7 , "GEORGIA", 36, 0
GDRAWTEXT レイヤー番号 + 7 ,TOSTR(LOCAL), 400, 400
SPRITEDISPOSE "ビーチフラッグ"
SPRITEANIMECREATE "ビーチフラッグ", アニメサイズ:0, アニメサイズ:1
SPRITEANIMEADDFRAME "ビーチフラッグ", レイヤー番号 + 1 , 0, 0, アニメサイズ:0, アニメサイズ:1, 0, 0, スタートフレーム
FOR LOCAL, 0, タイムオーバーフレーム数
	SPRITEANIMEADDFRAME "ビーチフラッグ", レイヤー番号 + 10 , 0, LOCAL * 40, 40, 40, 400, 400, フレームレート
NEXT
SPRITEANIMEADDFRAME "ビーチフラッグ", レイヤー番号 + 7 , 0, 0, アニメサイズ:0, アニメサイズ:1, 0, 0, 1000000

CBGSETG レイヤー番号 + 21 , 0, (-CLIENTHEIGHT() + アニメサイズ:1) / 2, -1
CBGSETG レイヤー番号 + 3, 0, (-CLIENTHEIGHT() + アニメサイズ:1) / 2, -1
CBGREMOVERANGE -3, -3
スタートタイム =  GETMILLISECOND()
CBGSETSPRITE "ビーチフラッグ", 0, (-CLIENTHEIGHT() + アニメサイズ:1) / 2, -3
SETANIMETIMER アニメタイマー
INPUTMOUSEKEY
RESULT:6 = RESULT
クリックタイム = GETMILLISECOND()
クリックフレーム = クリックタイム - スタートタイム
CBGREMOVERANGE -3, -3
SELECTCASE クリックフレーム
CASE IS < スタートフレーム
	IF (RESULT:6 == 1 && RESULT:2 > 1200) || (RESULT:6 == 3 && RESULT:2 == 82)
		GOTO ラフプレー
	ENDIF
	勝敗結果保存 = 1
	CBGSETG レイヤー番号 + 9 , 0, (-CLIENTHEIGHT() + アニメサイズ:1) / 2, -3
CASE IS > タイムオーバーフレーム
	勝敗結果保存 = 2
	CBGSETG レイヤー番号 + 7 , 0, (-CLIENTHEIGHT() + アニメサイズ:1) / 2, -3
CASEELSE
	勝敗結果保存 = 3
	LOCAL = (クリックフレーム - スタートフレーム) / フレームレート
	GSETFONT レイヤー番号 + 5 , "GEORGIA", 36, 0
	IF LOCAL < 10
		GDRAWTEXT レイヤー番号 + 5 , "0" + TOSTR(LOCAL), 400, 400
	ELSE
		GDRAWTEXT レイヤー番号 + 5 , TOSTR(LOCAL), 400, 400
	ENDIF
	CBGSETG レイヤー番号 + 5 , 0, (-CLIENTHEIGHT() + アニメサイズ:1) / 2, -3
ENDSELECT
WAIT

$終了処理
FOR LOCAL, 0, 22
	GDISPOSE レイヤー番号 + LOCAL 
NEXT
SETANIMETIMER -1
CBGCLEAR
RETURN 勝敗結果保存

;ラフプレー中はINPUTOMOUSKEY操作を受け流し、確定勝利アニメを流す
$ラフプレー
勝敗結果保存 = 4
CALL ビーチフラッグ画像セット(レイヤー番号 + 0 , "ビーチフラッグ_ズル", "ＳＥＴ", レイヤー番号 + 12 , アニメサイズ:0, アニメサイズ:1)
IF !RESULT ;汎用妨害画像
	GDISPOSE レイヤー番号 + 0 
	CALL GCREATE_拡張子(レイヤー番号 + 0 , "カットイン素材/UNFAIR")
	GDISPOSE レイヤー番号 + 1 
	GCREATE レイヤー番号 + 1 , アニメサイズ:0, アニメサイズ:1
	GDRAWG レイヤー番号 + 1 , レイヤー番号 + 0 , 0, 0, アニメサイズ:0, アニメサイズ:1, 0, 0, GWIDTH(レイヤー番号 + 0 ), GHEIGHT(レイヤー番号 + 0 )
	GDRAWG レイヤー番号 + 1 , レイヤー番号 + 12 , 0, 0, アニメサイズ:0, アニメサイズ:1, 0, 0, GWIDTH(レイヤー番号 + 12 ), GHEIGHT(レイヤー番号 + 12 )
	GSETBRUSH レイヤー番号 + 1 , 0xFFC0C0C0
	GSETFONT レイヤー番号 + 1 , GETFONT(), 36
	GSETPEN レイヤー番号 + 1 , 0xFFC0C0C0, 1
	GDRAWTEXT レイヤー番号 + 1 , "ＳＥＴ", 0, 0
ENDIF
CALL ビーチフラッグ画像セット(レイヤー番号 + 2 , "顔_泳装_差分_欲情", "ＧＯ", レイヤー番号 + 12 , アニメサイズ:0, アニメサイズ:1)
CBGREMOVERANGE -1, -1
CBGSETG レイヤー番号 + 3, 0, (-CLIENTHEIGHT() + アニメサイズ:1) / 2, -1

GSETFONT レイヤー番号 + 5 , "GEORGIA", 36, 0
GDRAWTEXT レイヤー番号 + 5 ,TOSTR(タイムオーバーフレーム数), 400, 400
SPRITEDISPOSE "ラフプレーアニメ"
SPRITEANIMECREATE "ラフプレーアニメ", アニメサイズ:0, アニメサイズ:1
SPRITEANIMEADDFRAME "ラフプレーアニメ", レイヤー番号 + 1 , 0, 0, アニメサイズ:0, アニメサイズ:1, 0, 0, スタートフレーム - クリックフレーム
FOR LOCAL, 0, タイムオーバーフレーム数
	SPRITEANIMEADDFRAME "ラフプレーアニメ", レイヤー番号 + 10 , 0, LOCAL * 40, 40, 40, 400, 400, フレームレート
NEXT
SPRITEANIMEADDFRAME "ラフプレーアニメ", レイヤー番号 + 5 , 0, 0, アニメサイズ:0, アニメサイズ:1, 0, 0, 1000000
CBGREMOVERANGE -3, -3
CBGSETSPRITE "ラフプレーアニメ", 0, (-CLIENTHEIGHT() + アニメサイズ:1) / 2, -3
$ラフプレー入力ループ
INPUTMOUSEKEY
クリックタイム = GETMILLISECOND()
クリックフレーム = クリックタイム - スタートタイム
IF クリックフレーム < タイムオーバーフレーム
	GOTO ラフプレー入力ループ
ENDIF
GOTO 終了処理

;テスト用
PRINTFORML ST: {スタートタイム}
PRINTFORML SF: {スタートフレーム}
PRINTFORML CT: {クリックタイム}
PRINTFORML CF: {クリックフレーム}
PRINTFORML TF: {タイムオーバーフレーム}
CBGSETG レイヤー番号 + 10, 0, 0, -2

@ビーチフラッグ画像セット(ARG, ARGS, ARGS:1, ARG:1, ARG:2, ARG:3)
GDISPOSE ARG 
;フォルダ確認は済
RESULT = ENUMFILES("resources/" + CSTR:TARGET:画像フォルダ, ARGS + "*.*")
IF RESULT > 0
	LOCAL = RAND:RESULT
	ARGS '= SUBSTRING(RESULTS:LOCAL, 10, -1)
	CALL GCREATE_拡張子(ARG, ARGS)
	LOCAL:1 = 1
ELSE
	GCREATE ARG, ARG:2, ARG:3
	LOCAL:1 = 0
ENDIF
GDISPOSE ARG + 1
GCREATE ARG + 1, ARG:2, ARG:3
GDRAWG ARG + 1, ARG, 0, 0, ARG:2, ARG:3, 0, 0, GWIDTH(ARG), GHEIGHT(ARG)
GDRAWG ARG + 1, ARG:1, 0, 0, ARG:2, ARG:3, 0, 0, GWIDTH(ARG:1), GHEIGHT(ARG:1)
GSETBRUSH ARG + 1, 0xFFC0C0C0
GSETFONT ARG + 1, GETFONT(), 36
GSETPEN ARG + 1, 0xFFC0C0C0, 1
GDRAWTEXT ARG + 1, ARGS:1, 0, 0
RETURN LOCAL:1

@ビーチフラッグ難易度判定(ARG)
#FUNCTION

;反転あり素質
;近い方を選んだときは体格が大きい方が不利
LOCAL = TALENT:TARGET:体格

;反転する
SIF ARG == 1 ;近い方
	LOCAL = -1 * LOCAL


;反転なし素質
;器用
SIF TALENT:TARGET:習得速度 > 0
	LOCAL += 1

;身軽だと有利　極端な体型は不利
SELECTCASE TALENT:TARGET:体型
CASE -3, 3
	LOCAL -= 1
CASE -2, -1
	LOCAL += 1
ENDSELECT

;性格による本気度の違い
SIF TALENT:TARGET:プライド > 0 || TALENT:TARGET:精神的余裕 < 0 ||TALENT:TARGET:目立ちたがり > 0
	LOCAL += 1
SIF TALENT:TARGET:マイペース > 0
	LOCAL -= 1

;勝負ごとに強い
SIF TALENT:TARGET:戦闘好き > 0
	LOCAL += 1
SIF TALENT:TARGET:戦闘好き < 0
	LOCAL -= 1

;爆乳ペナルティ
SIF TALENT:TARGET:バストサイズ > 1
	LOCAL -= 1

;身重は弱体化
SIF PREGNANCY_PROGRESS(TARGET) > 2
	LOCAL -= 1
SIF PREGNANCY_PROGRESS(TARGET) > 3
	LOCAL -= 1
SIF PREGNANCY_PROGRESS(TARGET) > 4
	LOCAL -= 1

;起きるの早い
SIF TALENT:TARGET:早起き > 0
	LOCAL += 1
SIF TALENT:TARGET:早起き < 0
	LOCAL -= 1

;相手はフライングしないのでメリット
SIF TALENT:TARGET:おもらし癖 > 0
	LOCAL += 1

RFLAG:コマンド結果受渡し変数２ = LOCAL
SELECTCASE LOCAL
CASE IS >= 3
	RETURNF 8 + RAND:3 + RAND:3 + RAND:3
CASE 2
	RETURNF 12 + RAND:3 + RAND:3 + RAND:3
CASE 1
	RETURNF 16 + RAND:3 + RAND:3 + RAND:3
CASE 0
	RETURNF 20 + RAND:3 + RAND:3 + RAND:3
CASE -1
	RETURNF 24 + RAND:3 + RAND:3 + RAND:3
CASE -2
	RETURNF 28 + RAND:3 + RAND:3 + RAND:3
CASE -3
	RETURNF 32 + RAND:3 + RAND:3 + RAND:3
CASEELSE
	RETURNF 40
ENDSELECT
