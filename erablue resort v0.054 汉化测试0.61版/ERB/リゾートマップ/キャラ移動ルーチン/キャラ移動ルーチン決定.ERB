;キャラが一日どう過ごすかをここで決定し、それに準ずる行動範囲を設定する。
@移動ルーチンセット決定(ARG)

移動ルーチン:ARG:ルーチンID = 
移動ルーチン:ARG:PMルーチンID = 

;日付限定のイベントなどがあるかどうかをチェック
;イベント番号順に関数が存在するかを見る
IF 開催予定日取り == DAY
	TRYCCALLFORM MOVE_ROUTINE_%開催予定祭り名%(ARG, "参加判定")
		;1が帰ってきたら参加なのでIDに入力
		IF RESULT
			移動ルーチン:ARG:ルーチンID = %開催予定祭り名%
			CALLFORM ROUTINE_SCHEDULE_%開催予定祭り名%(ARG)
			RETURN 0
		ENDIF
	CATCH
	ENDCATCH
ENDIF

;従業員の業務で居場所指定があるかどうかをチェック
;イベント番号順に関数が存在するかを見る
TRYCCALLFORM MOVE_ROUTINE_業務_%現在仕事数字文字列変換(現在仕事:ARG:0, 0, ARG)%(ARG, "参加判定")
	;1が帰ってきたら仕事なのでIDに入力して関数を抜ける
	IF RESULT && TCVAR:ARG:休暇中 == 0
		移動ルーチン:ARG:ルーチンID = 業務_%現在仕事数字文字列変換(現在仕事:ARG:0, 0, ARG)%
		CALLFORM ROUTINE_SCHEDULE_業務_%現在仕事数字文字列変換(現在仕事:ARG:0, 0, ARG)%(ARG)
		RETURN 0
	ENDIF
CATCH
ENDCATCH

;キャラ個別移動関数があるかをチェック
TRYCCALLFORM キャラ固有移動ルーチン判定_{NO:ARG}(ARG)
	IF RESULT
		移動ルーチン:ARG:ルーチンID '= RSTR:ルーチン名受け渡し
		CALLFORM ROUTINE_SCHEDULE_%移動ルーチン:ARG:ルーチンID%(ARG)
		RETURN 0
	ENDIF
CATCH
ENDCATCH

;午前と午後で違うルーチンのキャラも居ていいよね
CALL 汎用移動ルーチン決定(ARG, GETNUM(移動ルーチン, "ルーチンID"))

;1/3の確率（実際はもう少し高い）で午前も午後も同じ行動をする
IF !RAND:3
	CALL 汎用移動ルーチン決定(ARG, GETNUM(移動ルーチン, "PMルーチンID"))
ENDIF

;スケジュールの設定
IF 移動ルーチン:ARG:PMルーチンID != ""
	CALLFORM ROUTINE_SCHEDULE_AM_%移動ルーチン:ARG:ルーチンID%(ARG)
	CALLFORM ROUTINE_SCHEDULE_PM_%移動ルーチン:ARG:PMルーチンID%(ARG)
ELSE
	CALLFORM ROUTINE_SCHEDULE_%移動ルーチン:ARG:ルーチンID%(ARG)
ENDIF

@汎用移動ルーチン決定(対象キャラ, ルーチンID格納先)
#DIM 対象キャラ
#DIM ルーチンID格納先
#DIMS ルーチン候補配列, 10
#DIM 関数数
#DIM 日常生活フラグ
#DIM 関数番号

;プールで遊ぶ、外で遊ぶ、遊戯室で遊ぶは常時発生
;他は条件満たした時出現
LOCAL = 3
ルーチン候補配列:0 '= "プールで遊ぶ"
ルーチン候補配列:1 '= "外で遊ぶ"
ルーチン候補配列:2 '= "遊戯室で遊ぶ"
関数数 = ENUMFUNCBEGINSWITH("ROUTINE_ABLE_")
FOR 関数番号, 0, 関数数
	RESULT = 0
	CALLFORM %RESULTS:関数番号%(対象キャラ)
	IF RESULT
		ルーチン候補配列:LOCAL = %REPLACE(RESULTS:関数番号, "ROUTINE_ABLE_", "")%
		LOCAL += 1
	ENDIF
NEXT

;店持ちは定休じゃない限りは店を開く
IF TALENT:対象キャラ:店持ち
	LOCAL:1 = 店持ちキャラ店検索(対象キャラ)
	IF LOCAL:1 > -1 && 定休日判定(LOCAL:1) == 0
		移動ルーチン:対象キャラ:ルーチンID格納先 = 商業区で店番
		RETURN 0
	ENDIF
ENDIF

;日常生活するかどうかを別判定
IF GET_DAY() == "土" || GET_DAY() == "日"
	;週末は出かけやすいので10%
	IF RAND:10
		日常生活フラグ = 0
	ELSE
		日常生活フラグ = 1
	ENDIF
ELSE
	;通常33%
	IF RAND:3
		日常生活フラグ = 0
	ELSE
		日常生活フラグ = 1
	ENDIF
ENDIF

IF TALENT:対象キャラ:定住者 == 1 && 日常生活フラグ
	IF RAND:2 && 居住区改造度:0:0
		移動ルーチン:対象キャラ:ルーチンID格納先 = 学校で勉強
	ELSE
		移動ルーチン:対象キャラ:ルーチンID格納先 = 居住区エリアで日常生活
	ENDIF
ELSEIF TALENT:対象キャラ:定住者 == 2 && 日常生活フラグ
	IF RAND:2 && 居住区改造度:0:0
		移動ルーチン:対象キャラ:ルーチンID格納先 = 学校で勉強
	ELSE
		移動ルーチン:対象キャラ:ルーチンID格納先 = あなた自宅で日常生活
	ENDIF
ELSE
	移動ルーチン:対象キャラ:ルーチンID格納先 '= ルーチン候補配列:(RAND:LOCAL)
ENDIF


@キャラ就寝場所セット(ARG)
SIF ARG == MASTER
	RETURN
IF CFLAG:ARG:添い寝フラグ
	CFLAG:ARG:現在マップ種別 = CFLAG:PLAYER:現在マップ種別
	CFLAG:ARG:現在位置 = CFLAG:PLAYER:現在位置
	RETURN
ENDIF

CALL CHARA_ROUTINE_STATUS(ARG, "就寝場所")
IF RESULT
	CFLAG:ARG:現在マップ種別 = RESULT:1
	CFLAG:ARG:現在位置 = RESULT:2
ELSE
	CFLAG:ARG:現在位置 = キャラクター部屋検索(ARG)
	CFLAG:ARG:現在マップ種別 = 部屋検索_マップ種別
ENDIF

@CHARA_ROUTINE_STATUS(ARG, ARGS)
IF ARGS == "就寝時刻" || ARGS == "就寝場所"
	TRYCCALLFORM MOVE_ROUTINE_%移動ルーチン:ARG:PMルーチンID%(ARG, ARGS)
		RETURN RESULT
	CATCH
	ENDCATCH
ENDIF

TRYCCALLFORM MOVE_ROUTINE_%移動ルーチン:ARG:ルーチンID%(ARG, ARGS)
	RETURN RESULT
CATCH
ENDCATCH
RETURN 0
