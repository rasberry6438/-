
;---------------------------------------------------------------------------------------------------------
;・使用法
;「YYYY」を耳飾りの名前で一括置換する。
;フレーバーや素材設定、アビリティの設定をして完成。
;---------------------------------------------------------------------------------------------------------

@指輪個別文章表示_YYYY
LOCALS = 
LOCALS += @"■YYYY<br><br>"
LOCALS += "<br>";＊＊＊＊＊＊＊ここを編集＊＊＊＊＊＊＊
LOCALS += "<br>";＊＊＊＊＊＊＊ここを編集＊＊＊＊＊＊＊
LOCALS += "<br>";＊＊＊＊＊＊＊ここを編集＊＊＊＊＊＊＊
LOCALS += "<br>"

詳細文文字列受け渡し変数 = %LOCALS%
基礎販売額 = ;＊＊＊＊＊＊＊ここを編集＊＊＊＊＊＊＊

@指輪基礎効果文章表示_YYYY(指輪番号, 効果番号)
#DIM 効果番号
#DIM 指輪番号
#DIMS オプション効果一時保存, 20
LOCALS = 
LOCALS += "【基礎効果】<br>"
LOCALS += "<br>";＊＊＊＊＊＊＊ここを編集＊＊＊＊＊＊＊

LOCALS:1 = %DT_CELL_GETS("所持指輪データベース", 指輪番号, "オプションステータス補正", 1)%
IF LOCALS:1 != ""
	LOCALS += @"<br>【オプション効果】<br>%オプション効果表示文字列作成(LOCALS:1)%"
ENDIF

詳細文文字列受け渡し変数 = %LOCALS%

@指輪ステータス決定_YYYY(オプション数, 情報取得フラグ = 0, 効果指定 = -1)
#DIM 効果指定
#DIM オプション数
#DIM 情報取得フラグ
#DIMS 基本補正文字列
#DIMS 特殊補正文字列
#DIM オプションランク

基本補正文字列 = ;＊＊＊＊＊＊＊ここを編集＊＊＊＊＊＊＊
;最大ＨＰ_150_最大ＭＰ_30_攻撃力_100_防御力_20_行動速度_50　のように記述する

特殊補正文字列 = ;＊＊＊＊＊＊＊ここを編集＊＊＊＊＊＊＊
;基本的に表示用で、処理は個別の関数を作るのでなんの文字列でも良い
;付けない場合は消す

オプションランク = ;＊＊＊＊＊＊＊ここを編集＊＊＊＊＊＊＊
;高いほど良いオプションが付く

IF 情報取得フラグ
	詳細文文字列受け渡し変数 = %基本補正文字列%
	;オプション固定用にオプションランクを返す
	RETURN オプションランク
ENDIF

;オプション数に応じてオプション効果をランダムで付加
オプション補正文字列 = 
IF オプション数
	FOR LOCAL, 0, オプション数
		CALL オプション効果決定(オプションランク)
	NEXT
ENDIF

LOCAL = DT_ROW_ADD("所持指輪データベース", "指輪名", "YYYY", "基礎ステータス補正", 基本補正文字列, "特殊ステータス補正", 特殊補正文字列, "オプションステータス補正", オプション補正文字列)


;特殊効果を作りたい場合は、以下に関数を作ること

;-------------------------------------------------------
;ターン開始時に呼ばれる関数
;-------------------------------------------------------
;@固有ターン開始時処理_指輪_YYYY

;-------------------------------------------------------
;ターン終了時に呼ばれる関数
;-------------------------------------------------------
;@固有ターン終了時処理_指輪_YYYY

;-------------------------------------------------------
; 特定のバフ・デバフ計算時に呼ばれる関数
;-------------------------------------------------------
; @固有バフ・デバフ処理_指輪_YYYY_バフ・デバフ種類(隊列番号, 特殊補正後数値)
; #DIM 隊列番号
; #DIM 特殊補正後数値

; RETURN 特殊補正後数値

;-------------------------------------------------------
;奥義処理後に呼ばれる関数
;-------------------------------------------------------
;@固有奥義後処理_指輪_YYYY(全滅フラグ)
;全滅フラグ：処理前の奥義で敵が全滅してるなら1が入る
; #DIM 全滅フラグ

;-------------------------------------------------------
;戦闘開始時に呼ばれる関数
;-------------------------------------------------------
;@固有戦闘開始時処理_指輪_YYYY

;-------------------------------------------------------
;通常攻撃処理後に呼ばれる関数
;-------------------------------------------------------
;@固有通常攻撃後処理_指輪_YYYY(全滅フラグ, 連撃数)
;全滅フラグ：処理前の奥義で敵が全滅してるなら1が入る
; #DIM 全滅フラグ
; #DIM 連撃数
