
@ダンジョン初期処理_ここにダンジョンの名前
;ダンジョン構造の読み込み
;0でない時、そのマスは存在する
;
#DIM 深度
#DIM 分岐
#DIMS 接続先配列,2


VARSET ダンジョン構造配列_ここにダンジョンの名前
VARSET 分割ブロックリスト
VARSET ランダムダンジョン配列


;----------
;ダンジョンの大きさを指定
;----------
CALL ブロック生成(6)
;４～８（マス）
CALL ブロック内部屋生成(10)
;数値が大きいと分かれ道が多く、部屋もぎっしり
;６～、１３～は三叉路が登場
CALL ここにダンジョンの名前部屋タイプ割り当て


ダンジョンマス画像URL_伏せ状態 = 壁_洞窟
ダンジョン現在位置:0 = ランダムダンジョン初期位置:0
ダンジョン現在位置:1 = ランダムダンジョン初期位置:1
ダンジョン背景画像 = 背景_洞窟

;スタート地点は必ず存在
;初期からオープン済みなので3を入れる
;ビット0：存在するか　ビット1：移動できるか　ビット2：そこから通路を伸ばすか　ビット3：入れないが表示する場合に使用
;ビット4以降：自由枠フラグ

IF GETVAR(@"ダンジョン構造配列_%ダンジョン名%:{ランダムダンジョン初期位置:0}:{ランダムダンジョン初期位置:1}") == 0
	SETVAR @"ダンジョン構造配列_%ダンジョン名%:{ランダムダンジョン初期位置:0}:{ランダムダンジョン初期位置:1}", 3
ENDIF


FOR 深度, 1, 100
	LOCAL = 0
	FOR 分岐, 0, 9
		IF ダンジョン構造配列_ここにダンジョンの名前:深度:分岐
			;既にマス情報が入ってるなら飛ばす
			LOCAL = 1
			CONTINUE
		ELSEIF ENUMFUNCBEGINSWITH(@"ダンジョンマス情報_ここにダンジョンの名前_{深度}_{分岐}")
			LOCAL = 1
			ダンジョン構造配列_ここにダンジョンの名前:深度:分岐 = 1
		ENDIF
	NEXT
	IF LOCAL
		ダンジョン最大深度 = 深度
	ENDIF
NEXT

@ダンジョン解説文_ここにダンジョンの名前

詳細文文字列受け渡し変数 = 
詳細文文字列受け渡し変数 += "訪れるたびに地形が変わる不思議なダンジョン。<br>"
詳細文文字列受け渡し変数 += "見通しが悪く、危険な魔物の気配があり、お宝の匂いがする。<br>"
詳細文文字列受け渡し変数 += "冒険の匂いがプンプン漂うこの場所を<br>"
詳細文文字列受け渡し変数 += "「ここにダンジョンの名前」と呼ぶことにした…。<br>"

;推奨レベルを返す
RETURN 4

@敵討伐後処理_ダンジョン固有_ここにダンジョンの名前(討伐エネミー数)
;ダンジョン内で戦闘した後に呼ばれる関数、主にダンジョンごとのドロップアイテム取得に使用
;まだ敵データはリセットしていないので敵BATTLE_STATEで色々情報は取得可能
#DIM 討伐エネミー数
#DIM ドロップ確率
#DIMS ドロップアイテム

ドロップ確率 = 10 * 討伐エネミー数
ドロップアイテム = 普通の木材
CALL ドロップ判定処理(ドロップ確率, ドロップアイテム)

ドロップ確率 = 10 * 討伐エネミー数
ドロップアイテム = 普通の野菜
CALL ドロップ判定処理(ドロップ確率, ドロップアイテム)

ドロップ確率 = 10 * 討伐エネミー数
ドロップアイテム = 雑穀
CALL ドロップ判定処理(ドロップ確率, ドロップアイテム)

ドロップ確率 = 5 * 討伐エネミー数
ドロップアイテム = 星晶の破片
CALL ドロップ判定処理(ドロップ確率, ドロップアイテム)

ドロップ確率 = 1 * 討伐エネミー数
ドロップアイテム = 赤銅の古紋
CALL ドロップ判定処理(ドロップ確率, ドロップアイテム)


;----------
;このダンジョンの敵出現率
;----------
@ここにダンジョンの名前エネミー抽選()
#FUNCTIONS
SELECTCASE RAND:100
	CASE IS < 30
		LOCALS = Lv4_人食い鳥
	CASE IS < 60
		LOCALS = Lv4_ジェリー
	CASE IS < 80
		LOCALS = Lv5_サンドフィッシュ
	CASEELSE
		LOCALS = Lv5_マンイータープラント
ENDSELECT

RETURNF LOCALS

;----------
;このダンジョンのアイテム出現率
;----------
@ここにダンジョンの名前アイテム抽選()
#FUNCTIONS
#DIMS 結果
#DIMS アイテム
#DIM 個数
SELECTCASE RAND:100
	CASE IS < 50
		アイテム = 魔石
		個数 = 2
	CASEELSE
		アイテム = 薬草
		個数 = 3
ENDSELECT

結果 = %アイテム%_{個数}

RETURNF 結果


@ここにダンジョンの名前エンカウント抽選(敵数)
#DIM 敵数
#DIM エンカウント配列, 10

VARSET エンカウント配列, -1
FOR LOCAL, 0, 10
	$RETRY
	LOCAL:1 = RAND:10
	SIF FINDELEMENT(エンカウント配列, LOCAL:1, 0, LOCAL) >= 0
		GOTO RETRY
	エンカウント配列:LOCAL = LOCAL:1
NEXT
;数字を敵数だけ抽出する
FOR LOCAL ,0 , 敵数
	敵BATTLE_STATE_STR:(エンカウント配列:LOCAL):エネミー名 = %ここにダンジョンの名前エネミー抽選()%
NEXT


;----------
;部屋の内容を割り当てる
;----------
@ここにダンジョンの名前部屋タイプ割り当て
;部屋の属性を調べて対応する条件の部屋からランダムに割り当てる
;ランダムダンジョン配列:深度:分岐:イベント名 = イベントの名前
#DIM 深度
#DIM 分岐

FOR 深度 ,0 ,10
	FOR 分岐 ,0 ,10
		IF 深度 == ランダムダンジョン初期位置:0 && 分岐 == ランダムダンジョン初期位置:1
			ランダムダンジョン配列:深度:分岐:イベント名 = 初期マス
		;初期位置
			CONTINUE
		ELSEIF ランダムダンジョン配列:深度:分岐:接続先2 != ""
		;二部屋以上の行先がある
			SELECTCASE LOCAL
			;
				CASE IS < 50
					ランダムダンジョン配列:深度:分岐:イベント名 = 隠し通路発見
				CASE IS < 80
					ランダムダンジョン配列:深度:分岐:イベント名 = エンカウント
					ランダムダンジョン配列:深度:分岐:マス画像名 = エンカウント
				CASEELSE
				;残り20％でモンスターハウス
					ランダムダンジョン配列:深度:分岐:イベント名 = モンスターハウス
					ランダムダンジョン配列:深度:分岐:マス画像名 = モンスターハウス
			ENDSELECT
			CONTINUE
		ELSEIF ランダムダンジョン配列:深度:分岐:接続先1 == ""
		;行き止まり
			LOCAL = RAND:100
			SELECTCASE LOCAL
			;
				CASE IS < 40
					ランダムダンジョン配列:深度:分岐:イベント名 = 宝箱
					ランダムダンジョン配列:深度:分岐:マス画像名 = 宝箱
				CASE IS < 60
					ランダムダンジョン配列:深度:分岐:イベント名 = ハプニング
					ランダムダンジョン配列:深度:分岐:マス画像名 = ハプニング
				CASE IS < 80
					ランダムダンジョン配列:深度:分岐:イベント名 = キャンプ
					ランダムダンジョン配列:深度:分岐:マス画像名 = キャンプ
				CASEELSE
					ランダムダンジョン配列:深度:分岐:イベント名 = 行き止まり
			ENDSELECT
		ELSE
			ランダムダンジョン配列:深度:分岐:イベント名 = 何もなし
		ENDIF
	NEXT
NEXT

;----------
;マスタイプ
;----------
@マスタイプここにダンジョンの名前(深度,分岐)
#DIM 深度
#DIM 分岐
SELECTCASE ランダムダンジョン配列:深度:分岐:マス画像名
	;マスタイプで分岐
	CASE IS == "宝箱"
		ダンジョンマス画像URL = 床_洞窟
		IF ランダムダンジョン配列:深度:分岐:イベント状態 == "箱空け"
			ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱_開
		ELSE
			ダンジョンマス画像URL_重ね表示 = 宝箱アイコン_木箱
		ENDIF
	CASE IS == "モンスターハウス"
		ダンジョンマス画像URL = 床_洞窟
		SIF ランダムダンジョン配列:深度:分岐:イベント状態 != "クリア"
			ダンジョンマス画像URL_重ね表示 = エネミーアイコン_赤
	CASE IS == "キャンプ"
		ダンジョンマス画像URL = 床_洞窟
		SIF ランダムダンジョン配列:深度:分岐:イベント状態 != "休息済"
			ダンジョンマス画像URL_重ね表示 = 回復アビ
	CASE IS == "ハプニング"
		ダンジョンマス画像URL = 床_洞窟
		SIF ランダムダンジョン配列:深度:分岐:イベント状態 != "発生済み"
			ダンジョンマス画像URL_重ね表示 = えっちハート
	CASE IS == "エンカウント"
		ダンジョンマス画像URL = 床_洞窟
		SIF ランダムダンジョン配列:深度:分岐:イベント状態 != "討伐済み"
			ダンジョンマス画像URL_重ね表示 = エネミーアイコン
	CASEELSE
		ダンジョンマス画像URL = 床_洞窟
ENDSELECT



;----------
;イベント内容
;----------
;割り当てられたイベント
;基本的に複数のマスから参照されるので、マス内のイベントフラグ管理は慎重に

@イベントここにダンジョンの名前初期マス
CALL 口上変数初期化
IF 初来訪マス判定用フラグ == 0
	KSTR:(K++) = 入口から明かりが差し込んできている。
	CALL メッセージ欄表示用関数(,,,0)
ELSE
	;最初に訪れた時
	KSTR:(K++) = 薄暗い洞窟の中で何者かがうごめく気配がする。
	KSTR:(K++) = 何が出てきてもおかしくはない。
	CALL メッセージ欄表示用関数()
	CALL 接続ルート全開放処理((ダンジョン現在位置:0), (ダンジョン現在位置:1))
	CALL 口上変数初期化
ENDIF
CALL 画面再描画


@イベントここにダンジョンの名前宝箱
#DIMS 配布アイテム,2
SPLIT ここにダンジョンの名前アイテム抽選(), "_", 配布アイテム

CALL 口上変数初期化
IF 初来訪マス判定用フラグ == 0
	KSTR:(K++) = 役に立ちそうなものは落ちていない。
	CALL メッセージ欄表示用関数(,,,0)
ELSE
	;最初に訪れた時
	KSTR:(K++) = 物が散乱している…。
	WSTR:(K++) = 何か見つかるかもしれない。
	KSTR:(K++) = %CALLNAME:PLAYER%は%配布アイテム:0%を%配布アイテム:1%個見つけた！
	CALL メッセージ欄表示用関数()
	ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):イベント状態 = 箱空け
	CALL 画面再描画
	CALL 口上変数初期化
	CALL アイテム増減汎用処理("配布アイテム:0", TOINT(配布アイテム:0))
ENDIF


@イベントここにダンジョンの名前キャンプ
CALL 口上変数初期化
IF ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):イベント状態 == "休息済"
ELSE
	KSTR:(K++) = 少し開けた空間に出た。
	KSTR:(K++) = 通路の見通しもよく、警戒を緩めて一息付けそうだ。
	WSTR:(K++) = 少し休憩していきますか？
	KSTR:(K++) = （PTメンバー全回復・ダンジョンを一度出るまで消滅）
	KSTR:(K++) = BUTTON_[はい]
	KSTR:(K++) = BUTTON_[いいえ]
	CALL メッセージ欄表示用関数(,,,0)
	CALL 口上変数初期化
	$LOOP_MESSAGE
	INPUTS
	SELECTCASE RESULTS
		CASE "[はい]"
			KSTR:(K++) = %CALLNAME:PLAYER%たちは休息をとり、体力を回復した！
			CALL メッセージ欄表示用関数()
			ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):イベント状態 = 休息済
			FOR LOCAL, 0, 4
				IF BATTLE_STATE:LOCAL:キャラ登録番号 < 1
					BREAK
				ENDIF
				BATTLE_STATE:LOCAL:ＨＰ = BATTLE_STATE:LOCAL:最大ＨＰ
				BATTLE_STATE:LOCAL:ＭＰ = BATTLE_STATE:LOCAL:最大ＭＰ
			NEXT
		CASE "[いいえ]"
			KSTR:(K++) = まだ休憩するほど疲れてはいない。先に進もう。
			CALL メッセージ欄表示用関数()
		CASEELSE
			CLEARLINE 1
			REUSELASTLINE  
			GOTO LOOP_MESSAGE
	ENDSELECT
ENDIF
CALL 画面再描画


@イベントここにダンジョンの名前エンカウント
#DIM 敵数
CALL 口上変数初期化
IF 初来訪マス判定用フラグ == 0
	IF ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):イベント状態 == "討伐済み"
		WSTR:(K++) = %CALLNAME:PLAYER%たちの戦いの跡があるだけだ。
		CALL メッセージ欄表示用関数()
	ELSE
		WSTR:(K++) = %CALLNAME:PLAYER%たちの前に影がよぎる。
		WSTR:(K++) = 敵と遭遇した！
		CALL メッセージ欄表示用関数(,,,0)
		敵数 = RAND:2 + 2
		CALL ここにダンジョンの名前エンカウント抽選(敵数)
		CALL 雑魚敵遭遇汎用処理

		IF RESULT == 0
			;勝利時のみ先へ進む
			CALL 口上変数初期化
			WSTR:(K++) = %CALLNAME:PLAYER%たちは敵を打ち倒した。
			KSTR:(K++) = 先へ進もう。
			ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):イベント状態 = 討伐済み
			CALL メッセージ欄表示用関数(,,,0)
			CALL 接続ルート全開放処理((ダンジョン現在位置:0), (ダンジョン現在位置:1))
		ENDIF
	ENDIF
;最初に訪れた時
ELSE
	WSTR:(K++) = %CALLNAME:PLAYER%たちの前に影がよぎる。
	WSTR:(K++) = 敵と遭遇した！
	CALL メッセージ欄表示用関数(,,,0)
	敵数 = RAND:2 + 2
	CALL ここにダンジョンの名前エンカウント抽選(敵数)
	CALL 雑魚敵遭遇汎用処理

	IF RESULT == 0
		;勝利時のみ先へ進む
		CALL 口上変数初期化
		WSTR:(K++) = %CALLNAME:PLAYER%たちは敵を打ち倒した。
		KSTR:(K++) = 先へ進もう。
		ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1)岐:0 = 討伐済み
		CALL メッセージ欄表示用関数(,,,0)
		CALL 接続ルート全開放処理((ダンジョン現在位置:0), (ダンジョン現在位置:1))
	ENDIF
ENDIF
	CALL 画面再描画
	CALL 口上変数初期化


@イベントここにダンジョンの名前モンスターハウス
#DIMS 配布アイテム,2
SPLIT ここにダンジョンの名前アイテム抽選(), "_", 配布アイテム
CALL 口上変数初期化
IF 初来訪マス判定用フラグ == 0
	$LOOP_HOUSE
		SELECTCASE ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):イベント状態
			CASE IS == "モンスターハウス"
				CALL ここにダンジョンの名前残敵３
			CASE IS == "残敵２"
				CALL ここにダンジョンの名前残敵２
			CASE IS == "残敵１"
				CALL ここにダンジョンの名前残敵１
			CASE IS == "残敵０"
				KSTR:(K++) = 周りに動くものは何もいない。
				WSTR:(K++) = これだけ倒したならば何か見つかるだろう。
				KSTR:(K++) = %CALLNAME:PLAYER%は%配布アイテム:0%を%配布アイテム:1%個見つけた！
				CALL メッセージ欄表示用関数()
					;クリア報酬配布
				CALL 接続ルート全開放処理((ダンジョン現在位置:0), (ダンジョン現在位置:1))
				ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):イベント状態 = クリア
				RETURN
			CASEELSE
				;イベント終了後
				KSTR:(K++) = 激しい戦いの跡が、周囲に散らばっている。
				CALL メッセージ欄表示用関数()
				RETURN
		ENDSELECT
ELSE
	KSTR:(K++) = 空気の流れが変わった。
	CALL メッセージ欄表示用関数(,,,0)
;	初回口上
	ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):イベント状態 = モンスターハウス
ENDIF
	GOTO LOOP_HOUSE


@ここにダンジョンの名前残敵３
#DIM 敵数
KSTR:(K++) = この先の空間では多数の気配がうごめいている。
WSTR:(K++) = 激しい戦いになるかもしれないが…。
KSTR:(K++) = BUTTON_[突入する]
KSTR:(K++) = BUTTON_[ここで戦う]
CALL メッセージ欄表示用関数(,,,0)
$LOOP_MESSAGE
INPUTS
SELECTCASE RESULTS
	CASE "[突入する]"
		敵数 = 9 * RAND(80, 110) / 100
		CALL ここにダンジョンの名前エンカウント抽選(敵数)
		CALL 雑魚敵遭遇汎用処理
			IF RESULT == 0
				ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):イベント状態 = 残敵０
				CALL 口上変数初期化
			ENDIF
	CASE "[ここで戦う]"
		敵数 = 3 * RAND(80, 110) / 100
		CALL ここにダンジョンの名前エンカウント抽選(敵数)
		CALL 雑魚敵遭遇汎用処理
			IF RESULT == 0
				ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):イベント状態 = 残敵２
				CALL 口上変数初期化
			ENDIF
	CASEELSE
		CLEARLINE 1
		REUSELASTLINE  
		GOTO LOOP_MESSAGE
ENDSELECT



@ここにダンジョンの名前残敵２
#DIM 敵数
WSTR:(K++) = 敵の数は減ったものの、まだまだ多そうだ。
KSTR:(K++) = BUTTON_[突入する]
KSTR:(K++) = BUTTON_[ここで戦う]
CALL メッセージ欄表示用関数(,,,0)
$LOOP_MESSAGE
INPUTS
SELECTCASE RESULTS
	CASE "[突入する]"
		敵数 = 6 * RAND(80, 110) / 100
		CALL ここにダンジョンの名前エンカウント抽選(敵数)
		CALL 雑魚敵遭遇汎用処理
			IF RESULT == 0
				ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):イベント状態 = 残敵０
				CALL 口上変数初期化
				ENDIF
	CASE "[ここで戦う]"
		敵数 = 3 * RAND(80, 110) / 100
		CALL ここにダンジョンの名前エンカウント抽選(敵数)
		CALL 雑魚敵遭遇汎用処理
			IF RESULT == 0
				ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):イベント状態 = 残敵１
				CALL 口上変数初期化
				ENDIF
	CASEELSE
		CLEARLINE 1
		REUSELASTLINE  
		GOTO LOOP_MESSAGE
ENDSELECT

@ここにダンジョンの名前残敵１
#DIM 敵数
KSTR:(K++) = ほとんどの敵は倒しただろう。
WSTR:(K++) = あと一息だ。
CALL メッセージ欄表示用関数(,,,0)
敵数 = 3 * RAND(80, 110) / 100
CALL ここにダンジョンの名前エンカウント抽選(敵数)
CALL 雑魚敵遭遇汎用処理
IF RESULT == 0
	ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):イベント状態 = 残敵０
	CALL 口上変数初期化
ENDIF


@イベントここにダンジョンの名前ハプニング
;えっちイベ
	CALL 口上変数初期化
	IF 初来訪マス判定用フラグ == 0
		KSTR:(K++) = 静かなところだ…。
		CALL メッセージ欄表示用関数(,,,0)
	ELSE
		CALL ダンジョンハプニング基本処理()
		IF RESULT
			ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):イベント状態 = 発生済み
		ENDIF
		CALL 口上変数初期化
	ENDIF
	CALL 画面再描画


@イベントここにダンジョンの名前行き止まり
CALL 口上変数初期化
IF 初来訪マス判定用フラグ == 0
	KSTR:(K++) = 行き止まりになっている。
	CALL メッセージ欄表示用関数(,,,0)
ELSE
	;最初に訪れた時
	KSTR:(K++) = 行く手には壁がある。
	KSTR:(K++) = 通れるような隙間もない。
	CALL メッセージ欄表示用関数()
	CALL 口上変数初期化
ENDIF
CALL 画面再描画


@イベントここにダンジョンの名前何もなし
CALL 口上変数初期化
IF 初来訪マス判定用フラグ == 0
	KSTR:(K++) = 何もない空間が広がっている。
	CALL メッセージ欄表示用関数(,,,0)
ELSE
	;最初に訪れた時
	KSTR:(K++) = 何もない空間が広がっている。
	CALL メッセージ欄表示用関数()
	CALL 接続ルート全開放処理((ダンジョン現在位置:0), (ダンジョン現在位置:1))
	CALL 口上変数初期化
ENDIF
CALL 画面再描画


@イベントここにダンジョンの名前隠し通路発見
#DIMS 接続先配列,2
;----------
;一回目の訪問では接続先２，３，４、・・・を開放して接続先１を伏せたまま
;発見イベントで接続先１を開放

IF 初来訪マス判定用フラグ == 0
;二回目の時
	IF ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):イベント状態 == "隠し通路"
	;隠し通路発見イベント
		KSTR:(K++) = 注意深く壁を調べていくと、通り抜けられそうな隙間があった。
		KSTR:(K++) = 隠し通路だ！
		CALL メッセージ欄表示用関数()
		CALL 口上変数初期化
		ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):イベント状態 = 隠し通路済
		CALL 接続ルート全開放処理((ダンジョン現在位置:0), (ダンジョン現在位置:1))
		;すべての通路を発見
	ELSE
	;隠し通路を発見済み
			KSTR:(K++) = 隠し通路があった部屋だ。
			KSTR:(K++) = 他には何もなさそうだ。
		CALL メッセージ欄表示用関数()
		CALL 口上変数初期化
		;なにもない・・・
	ENDIF
ELSE
;初訪問の時
	KSTR:(K++) = 少し開けた空間に出た。
	KSTR:(K++) = …何だか違和感があるような気がする。
	CALL メッセージ欄表示用関数()
	CALL 口上変数初期化
	;普通のイベント
	ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):イベント状態 = 隠し通路
	FOR LOCAL, 4, 100
		;一つ通路を隠して通路開放
		IF ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):LOCAL == ""
			BREAK
		ENDIF
			SPLIT ランダムダンジョン配列:(ダンジョン現在位置:0):(ダンジョン現在位置:1):LOCAL, "_", 接続先配列
			SETBIT ダンジョン構造配列_ここにダンジョンの名前:(TOINT(接続先配列:0)):(TOINT(接続先配列:1)), 1
		NEXT
ENDIF

